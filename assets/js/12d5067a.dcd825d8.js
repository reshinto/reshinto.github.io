"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[1217],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||s;return t?r.createElement(f,i(i({ref:n},l),{},{components:t})):r.createElement(f,i({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var p=2;p<s;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},35737:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var r=t(83117),o=(t(67294),t(3905));const s={},i="Example 2",a={unversionedId:"interviewPrep/designPatterns/Behavioral_patterns/Template/swift/example2",id:"interviewPrep/designPatterns/Behavioral_patterns/Template/swift/example2",title:"Example 2",description:"",source:"@site/docs/interviewPrep/designPatterns/Behavioral_patterns/Template/swift/example2.md",sourceDirName:"interviewPrep/designPatterns/Behavioral_patterns/Template/swift",slug:"/interviewPrep/designPatterns/Behavioral_patterns/Template/swift/example2",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Template/swift/example2",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Behavioral_patterns/Template/swift/example2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Template Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Template/swift/"},next:{title:"TypeScript Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Template/typescript/"}},c={},p=[],l={toc:p};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"example-2"},"Example 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'import XCTest\nimport AVFoundation\nimport CoreLocation\nimport Photos\n\nclass TemplateMethodRealWorld: XCTestCase {\n\n    /// A good example of Template Method is a life cycle of UIViewController\n\n    func testTemplateMethodReal() {\n\n        let accessors = [CameraAccessor(), MicrophoneAccessor(), PhotoLibraryAccessor()]\n\n        accessors.forEach { item in\n            item.requestAccessIfNeeded({ status in\n                let message = status ? "You have access to " : "You do not have access to "\n                print(message + item.description + "\\n")\n            })\n        }\n    }\n}\n\nclass PermissionAccessor: CustomStringConvertible {\n\n    typealias Completion = (Bool) -> ()\n\n    func requestAccessIfNeeded(_ completion: @escaping Completion) {\n\n        guard !hasAccess() else { completion(true); return }\n\n        willReceiveAccess()\n\n        requestAccess { status in\n            status ? self.didReceiveAccess() : self.didRejectAccess()\n\n            completion(status)\n        }\n    }\n\n    func requestAccess(_ completion: @escaping Completion) {\n        fatalError("Should be overridden")\n    }\n\n    func hasAccess() -> Bool {\n        fatalError("Should be overridden")\n    }\n\n    var description: String { return "PermissionAccessor" }\n\n    /// Hooks\n    func willReceiveAccess() {}\n\n    func didReceiveAccess() {}\n\n    func didRejectAccess() {}\n}\n\nclass CameraAccessor: PermissionAccessor {\n\n    override func requestAccess(_ completion: @escaping Completion) {\n        AVCaptureDevice.requestAccess(for: .video) { status in\n            return completion(status)\n        }\n    }\n\n    override func hasAccess() -> Bool {\n        return AVCaptureDevice.authorizationStatus(for: .video) == .authorized\n    }\n\n    override var description: String { return "Camera" }\n}\n\nclass MicrophoneAccessor: PermissionAccessor {\n\n    override func requestAccess(_ completion: @escaping Completion) {\n        AVAudioSession.sharedInstance().requestRecordPermission { status in\n            completion(status)\n        }\n    }\n\n    override func hasAccess() -> Bool {\n        return AVAudioSession.sharedInstance().recordPermission == .granted\n    }\n\n    override var description: String { return "Microphone" }\n}\n\nclass PhotoLibraryAccessor: PermissionAccessor {\n\n    override func requestAccess(_ completion: @escaping Completion) {\n        PHPhotoLibrary.requestAuthorization { status in\n            completion(status == .authorized)\n        }\n    }\n\n    override func hasAccess() -> Bool {\n        return PHPhotoLibrary.authorizationStatus() == .authorized\n    }\n\n    override var description: String { return "PhotoLibrary" }\n\n    override func didReceiveAccess() {\n        /// We want to track how many people give access to the PhotoLibrary.\n        print("PhotoLibrary Accessor: Receive access. Updating analytics...")\n    }\n\n    override func didRejectAccess() {\n        /// ... and also we want to track how many people rejected access.\n        print("PhotoLibrary Accessor: Rejected with access. Updating analytics...")\n    }\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"You have access to Camera\n\nYou have access to Microphone\n\nPhotoLibrary Accessor: Rejected with access. Updating analytics...\nYou do not have access to PhotoLibrary\n")))}u.isMDXComponent=!0}}]);