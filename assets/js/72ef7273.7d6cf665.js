"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[2016],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?a.createElement(h,i(i({ref:t},p),{},{components:r})):a.createElement(h,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},16897:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(83117),n=(r(67294),r(3905));const o={},i="Iterator",l={unversionedId:"interviewPrep/designPatterns/Behavioral_patterns/Iterator/readme",id:"interviewPrep/designPatterns/Behavioral_patterns/Iterator/readme",title:"Iterator",description:"- it allows sequential traversal through a complex data structure without exposing its internal details",source:"@site/docs/interviewPrep/designPatterns/Behavioral_patterns/Iterator/readme.md",sourceDirName:"interviewPrep/designPatterns/Behavioral_patterns/Iterator",slug:"/interviewPrep/designPatterns/Behavioral_patterns/Iterator/",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Iterator/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Behavioral_patterns/Iterator/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interpreter",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Interpreter/"},next:{title:"Mediator",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Mediator/"}},s={},c=[{value:"Problem",id:"problem",level:2},{value:"Solution",id:"solution",level:2},{value:"Real world Analogy",id:"real-world-analogy",level:2},{value:"Structure",id:"structure",level:2}],p={toc:c};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"iterator"},"Iterator"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows sequential traversal through a complex data structure without exposing its internal details")),(0,n.kt)("h2",{id:"problem"},"Problem"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"most collection store their elements in simple list",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"however some are based on stacks, trees, graphs, and other complex data structures"))),(0,n.kt)("li",{parentName:"ul"},"regardless of how a collection is structured, it must provide some way of accessing its elements so that other code can use it"),(0,n.kt)("li",{parentName:"ul"},"sounds like an easy job that can be done just by looping over all the elements",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"but how do you sequentially traverse elements of a complex data structure (e.g.: tree)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"1 day you might need depth first traversal, another day you might need breadth first traversal, another day you might need something else like random access")))))),(0,n.kt)("h2",{id:"solution"},"Solution"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"extract the traversal behavior of a collection into a separate object called an iterator",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the iterator object encapsulates all of the traversal details")))),(0,n.kt)("h2",{id:"real-world-analogy"},"Real world Analogy"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"you are lost and wished to arrive at a certain destination"),(0,n.kt)("li",{parentName:"ul"},"solution",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"walk around and try to find the destination, you might waste a lot of time walking in circles, or not find the destination"),(0,n.kt)("li",{parentName:"ol"},"download a navigation app for navigation. smart and inexpensive"),(0,n.kt)("li",{parentName:"ol"},"spend some money and hire a local guide"))),(0,n.kt)("li",{parentName:"ul"},"these 3 solutions act as iterators over the vast collections of destinations you wish to go")),(0,n.kt)("h2",{id:"structure"},"Structure"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Iterator",src:r(89658).Z,width:"1056",height:"806"})),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Iterator interface declares the operations required for traversing a collection: fetching the next element, retrieving the current position, restarting iteration, etc.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Concrete Iterators implement specific algorithms for traversing a collection."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The iterator object should track the traversal progress on its own."),(0,n.kt)("li",{parentName:"ul"},"This allows several iterators to traverse the same collection independently of each other."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Collection interface declares one or multiple methods for getting iterators compatible with the collection."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Note that the return type of the methods must be declared as the iterator interface so that the concrete collections can return various kinds of iterators."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Concrete Collections return new instances of a particular concrete iterator class each time the client requests one."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"You might be wondering, where\u2019s the rest of the collection\u2019s code? Don\u2019t worry, it should be in the same class."),(0,n.kt)("li",{parentName:"ul"},"It\u2019s just that these details aren\u2019t crucial to the actual pattern, so we\u2019re omitting them."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Client works with both collections and iterators via their interfaces."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"This way the client isn\u2019t coupled to concrete classes, allowing you to use various collections and iterators with the same client code."),(0,n.kt)("li",{parentName:"ul"},"Typically, clients don\u2019t create iterators on their own, but instead get them from collections."),(0,n.kt)("li",{parentName:"ul"},"Yet, in certain cases, the client can create one directly; for example, when the client defines its own special iterator.")))))}u.isMDXComponent=!0},89658:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/iterator-e71de4a68658a43a2397aa888a22db5f.png"}}]);