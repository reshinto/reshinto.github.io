"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[3829],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>p});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),p=a,g=u["".concat(s,".").concat(p)]||u[p]||m[p]||r;return t?o.createElement(g,i(i({ref:n},d),{},{components:t})):o.createElement(g,i({ref:n},d))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},95449:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=t(83117),a=(t(67294),t(3905));const r={},i="Mongoose",l={unversionedId:"Technologies/database/noSQL/mongoDB/mongoose/readme",id:"Technologies/database/noSQL/mongoDB/mongoose/readme",title:"Mongoose",description:"- it is a mongodb object modeling for nodejs",source:"@site/docs/Technologies/database/noSQL/mongoDB/mongoose/readme.md",sourceDirName:"Technologies/database/noSQL/mongoDB/mongoose",slug:"/Technologies/database/noSQL/mongoDB/mongoose/",permalink:"/docs/Technologies/database/noSQL/mongoDB/mongoose/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/database/noSQL/mongoDB/mongoose/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MongoDB Overview",permalink:"/docs/Technologies/database/noSQL/mongoDB/"},next:{title:"deployDjangoTutorial",permalink:"/docs/Technologies/deployment/heroku/deployDjangoTutorial"}},s={},c=[{value:"Getting started",id:"getting-started",level:2},{value:"Schema",id:"schema",level:2},{value:"Model",id:"model",level:2},{value:"Saving to database",id:"saving-to-database",level:2},{value:"Access all specific documents through model",id:"access-all-specific-documents-through-model",level:2}],d={toc:c};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mongoose"},"Mongoose"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it is a mongodb object modeling for nodejs"),(0,a.kt)("li",{parentName:"ul"},"provides a straight-forward, schema-based solution to model your application data"),(0,a.kt)("li",{parentName:"ul"},"it includes built-in type casting, validation, query building, business logic hooks and etc.")),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"will be very hard to use this with typescript")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const mongoose = require("mongoose");\nmongoose.connect("mongodb://localhost/test");\n\nconst db = mongoose.connection;\ndb.on("error", console.error.bind(console, "connection error:"));\ndb.once("open", function () {\n  // we\'re connected!\n});\n')),(0,a.kt)("h2",{id:"schema"},"Schema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const kittySchema = mongoose.Schema({\n  name: String,\n});\n\n// add methods, but must be added to the schema before compiling it with mongoose.model()\nkittySchema.methods.speak = function () {\n  const greeting = this.name\n    ? "My name is " + this.name\n    : "I don\'t have a name";\n  console.log(greeting);\n};\n')),(0,a.kt)("h2",{id:"model"},"Model"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"it is a class where we construct documents")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const Kitten = mongoose.model("Kitten", kittySchema);\n\nconst silence = new Kitten({name: "Silence"});\nconsole.log(silence.name); // Silence\n\nsilence.speak(); // My name is Silence\n')),(0,a.kt)("h2",{id:"saving-to-database"},"Saving to database"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"each document can be saved to the database by calling its save method"),(0,a.kt)("li",{parentName:"ul"},"the first argument to the callback will be an error if any occured")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"silence.save((err, silence) => {\n  if (err) return console.error(err);\n  silence.speak();\n});\n")),(0,a.kt)("h2",{id:"access-all-specific-documents-through-model"},"Access all specific documents through model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"Kitten.find((err, kittens) => {\n  if (err) return console.error(err);\n  console.log(kittens);\n});\n\nKitten.find({name: /^Silence/}, callback);\n")))}m.isMDXComponent=!0}}]);