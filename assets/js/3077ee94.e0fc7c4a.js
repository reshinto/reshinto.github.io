"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[1440],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(a),k=r,u=d["".concat(c,".").concat(k)]||d[k]||s[k]||o;return a?n.createElement(u,i(i({ref:t},m),{},{components:a})):n.createElement(u,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8950:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={},i="Docker",l={unversionedId:"devops/docker/readme",id:"devops/docker/readme",title:"Docker",description:"Installation",source:"@site/docs/devops/docker/readme.md",sourceDirName:"devops/docker",slug:"/devops/docker/",permalink:"/docs/devops/docker/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/devops/docker/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Jenkins",permalink:"/docs/devops/CiCd/jenkins/"},next:{title:"Create local ubuntu server to be used on vscode",permalink:"/docs/devops/docker/createLocalServer"}},c={},p=[{value:"Installation",id:"installation",level:2},{value:"Windows",id:"windows",level:3},{value:"WSL Ubuntu",id:"wsl-ubuntu",level:4},{value:"Definitions",id:"definitions",level:2},{value:"Images",id:"images",level:3},{value:"Containers",id:"containers",level:3},{value:"Networking",id:"networking",level:3},{value:"Commands",id:"commands",level:2},{value:"Download and install image",id:"download-and-install-image",level:3},{value:"List all images installed",id:"list-all-images-installed",level:3}],m={toc:p};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"docker"},"Docker"),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"windows"},"Windows"),(0,r.kt)("h4",{id:"wsl-ubuntu"},"WSL Ubuntu"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"refer to the following ",(0,r.kt)("a",{parentName:"li",href:"https://nickjanetakis.com/blog/setting-up-docker-for-windows-and-wsl-to-work-flawlessly"},"website"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Docker desktop version must be ",(0,r.kt)("a",{parentName:"li",href:"https://docs.docker.com/docker-for-windows/release-notes/#docker-desktop-community-2205"},"2.2.0.5")),(0,r.kt)("li",{parentName:"ul"},"there might be some issues while installing docker and docker compose within wsl",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"google it and solve the issue",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"might need to uninstall and upgrade certain softwares")))))))),(0,r.kt)("h2",{id:"definitions"},"Definitions"),(0,r.kt)("h3",{id:"images"},"Images"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is a package or a template similar to a Virtual Machine template used to create 1 or more containers"),(0,r.kt)("li",{parentName:"ul"},"images can be searched for, or created and pushed to docker hub repository (public)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"a ",(0,r.kt)("inlineCode",{parentName:"li"},"docker file")," is required with the developed app to create an image")))),(0,r.kt)("h3",{id:"containers"},"Containers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is a running instance of images that are isolated and have their own environments and set of processors")),(0,r.kt)("h3",{id:"networking"},"Networking"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"docker has 3 networks",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"bridge",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"docker run ubuntu"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"a private internal network created by docker on the host",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"all containers attach to this network by default"),(0,r.kt)("li",{parentName:"ul"},"will get an internal IP address ",(0,r.kt)("inlineCode",{parentName:"li"},"172.17.0.0/16")," series"),(0,r.kt)("li",{parentName:"ul"},"containers can access each other using the internal IP"),(0,r.kt)("li",{parentName:"ul"},"to access containers from outside",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"map container ports to host ports"))))),(0,r.kt)("li",{parentName:"ul"},"custom internal network can be created\ndocker network create --drive bridge --subnet 182.18.0.0/16 custom-isolated-network^name")))),(0,r.kt)("li",{parentName:"ol"},"none",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"docker run ubuntu --network=none"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"containers are isolated and are not attached to any network"),(0,r.kt)("li",{parentName:"ul"},"does not have any access to external network or other containers")))),(0,r.kt)("li",{parentName:"ol"},"host",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"docker run ubuntu --network=host"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"this takes out any network isolation between the host and container",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"PORT conflicts will arise if PORT is already in use on the computer"))))))))),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)("h3",{id:"download-and-install-image"},"Download and install image"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Pulls an image or a repository from the docker hub registry",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"docker pull ","[imageName]"))),(0,r.kt)("li",{parentName:"ul"},"similar to using the ",(0,r.kt)("inlineCode",{parentName:"li"},"run")," command, however, this will only download once",(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"docker run ","[imageName]")))),(0,r.kt)("h3",{id:"list-all-images-installed"},"List all images installed"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"docker images"),(0,r.kt)("h3",{parentName:"blockquote",id:"remove-images"},"Remove images"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"ensure that no containers are running before removing\ndocker rmi ","[imageNameOrImageID]",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"remove all images\ndocker rmi -f $(docker images -aq)")))),(0,r.kt)("h3",{parentName:"blockquote",id:"update-image"},"Update image"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"updates the image after modifying a container\ndocker commit ","[containerName][imageNamge]")),(0,r.kt)("h3",{parentName:"blockquote",id:"list-all-running-containers"},"List all running containers"),(0,r.kt)("p",{parentName:"blockquote"},"docker ps"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"list all containers including those that are not running\ndocker ps -a")),(0,r.kt)("h3",{parentName:"blockquote",id:"start-and-stop-container"},"Start and Stop container"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"start\ndocker start ","[containerName or containerId]"),(0,r.kt)("li",{parentName:"ul"},"stop\ndocker stop ","[containerName or containerId]",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"alternative\ndocker kill ","[containerName or containerId]"),(0,r.kt)("li",{parentName:"ul"},"stop all\ndocker kill $(docker ps -q)")))),(0,r.kt)("h3",{parentName:"blockquote",id:"remove-a-stopped-container-permanently"},"Remove a stopped container permanently"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"this will delete all saved data in the container",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"use volume mapping to enable persistent data\ndocker rm ","[containerName]"))),(0,r.kt)("li",{parentName:"ul"},"remove all\ndocker rm $(docker ps -a -q)")),(0,r.kt)("h3",{parentName:"blockquote",id:"running-a-container"},"Running a container"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"Creates a random container name and run it, it will stop and exit after all tasks are completed\ndocker run ","[imageName]"),(0,r.kt)("li",{parentName:"ul"},"Specify a name of the container\ndocker run --name=someName ","[imageName]")),(0,r.kt)("h4",{parentName:"blockquote",id:"run-a-container-with-a-specific-version-with-tag"},"Run a container with a specific version with ",(0,r.kt)("inlineCode",{parentName:"h4"},"tag")),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"e.g.: running an image with version 4.0\ndocker run imageName:4.0")),(0,r.kt)("h4",{parentName:"blockquote",id:"map-host-port-with-container-port-with--p"},"map host PORT with container PORT with -p"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"By DEFAULT host PORT will use container PORT"),(0,r.kt)("li",{parentName:"ul"},"to change default, need to map desired host PORT to the container PORT",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"e.g.: mapping host PORT 80 with container PORT 5000\ndocker run -p 80:5000 ","[imageName]")))),(0,r.kt)("h4",{parentName:"blockquote",id:"volume-mapping-to-enable-persistent-data-with-the--v-option"},"Volume mapping to enable persistent data with the -v option"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"all files located in the specified host directory will be accessible in the specified container directory\ndocker run -v hostFilePath:containerFilePath ","[containerName]",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"e.g.:\ndocker run -v /c/Users/reshinto/shareFolder:/someFolder mysql-docker")))),(0,r.kt)("h4",{parentName:"blockquote",id:"detach-running-container-with-the--d-option"},"Detach running container with the -d option"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"container can be detached and be runned in the background\ndocker run -d ","[imageName]")),(0,r.kt)("h4",{parentName:"blockquote",id:"set-environment-variables-in-the-container-with--e-option"},"Set Environment variables in the container with -e option"),(0,r.kt)("p",{parentName:"blockquote"},"docker run -e VARIABLE_NAME=value ","[imageName]"),(0,r.kt)("h4",{parentName:"blockquote",id:"delete-container-when-the-container-has-stop-running-with---rm-option"},"Delete container when the container has stop running with --rm option"),(0,r.kt)("p",{parentName:"blockquote"},"docker run --rm ","[imageName]"),(0,r.kt)("h3",{parentName:"blockquote",id:"execute-a-command-externally"},"Execute a command externally"),(0,r.kt)("p",{parentName:"blockquote"},"docker exec ","[commands]"),(0,r.kt)("h4",{parentName:"blockquote",id:"use--i-option-to-enable-interactive-mode"},"Use -i option to enable interactive mode"),(0,r.kt)("h4",{parentName:"blockquote",id:"use--t-option-to-enable-terminal--i-and--t-is-usally-used-together-as--it"},"Use -t option to enable terminal (-i and -t is usally used together as -it)"),(0,r.kt)("p",{parentName:"blockquote"},"docker exec -it ","[containerName][commands]"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"e.g.: running mysql\ndocker exec -it mysql-docker mysql -u root -p")),(0,r.kt)("h4",{parentName:"blockquote",id:"use-bash-terminal"},"Use bash terminal"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"-it option must be used together\ndocker exec -it ","[containerName]"," bash")),(0,r.kt)("h5",{parentName:"blockquote",id:"execute-1-bash-command"},"Execute 1 bash command"),(0,r.kt)("p",{parentName:"blockquote"},"docker exec ","[containerName][command]"),(0,r.kt)("h3",{parentName:"blockquote",id:"copy-files-from-host-to-container"},"Copy files from host to container"),(0,r.kt)("p",{parentName:"blockquote"},"docker cp filename ","[containerName]",":pathToCopyTo"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"e.g.: saving a file to the root directory in the container\ndocker cp file.sql mysql-docker:/")),(0,r.kt)("h3",{parentName:"blockquote",id:"inspect-container"},"Inspect Container"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"see aditional detials about a specific container\ndocker inspect ","[containerName]")),(0,r.kt)("h3",{parentName:"blockquote",id:"view-all-container-logs"},"View all Container logs"),(0,r.kt)("p",{parentName:"blockquote"},"docker logs ","[containerName]"),(0,r.kt)("h3",{parentName:"blockquote",id:"list-all-internal-networks"},"List all internal networks"),(0,r.kt)("p",{parentName:"blockquote"},"docker network ls"),(0,r.kt)("h2",{parentName:"blockquote",id:"create-my-own-image"},"Create my own image"),(0,r.kt)("ol",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ol"},"create a ",(0,r.kt)("inlineCode",{parentName:"li"},"Dockerfile")," with the same name"),(0,r.kt)("li",{parentName:"ol"},"write a set of instructions in the Dockerfile",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"- everything on the left in caps is an instruction, everything on the right is an argument\n  - ```FROM [imageName]```\n    - docker image can be the OS or other apps like node\n    - e.g.: latest ubuntu image\n")),"FROM Ubuntu",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"    - e.g.: specific ubuntu version image\n")),"FROM ubuntu:14.04",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```RUN [command]```\n    - use to install and update dependencies\n    - e.g.\n")),"RUN apt update",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'  - ```VOLUME ["/host/path/", "/container/path"]```\n    - defines shared or ephemeral mountable directories\n    - shared data (avoid defining shared folders in Dockerfiles)\n')),"VOLUME ",'["/shared-data"]',(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```ADD file toThisFileAtThisDirectory```\n    - add local files\n")),"ADD notes.txt /notes.txt",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"    - adds the contents of tar archives by uncompressing the archives and pasting the contents into the directory\n")),"ADD project.tar.gz /install/",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"    - adds the file downloaded from a URL to a directory\n")),"ADD ",(0,r.kt)("a",{parentName:"li",href:"https://project.example.com/download/1.0/project.rpm"},"https://project.example.com/download/1.0/project.rpm")," /project/",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```ENV VARIABLE_NAME value```\n    - set environment variables\n")),"ENV DB_PORT=5432",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```WORKDIR /path```\n    - sets the directory the container starts in\n")),"WORKDIR /root",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```USER someValue```\n    - sets which user the container will run as\n")),"USER arthur",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```COPY host/path to/path```\n")),"COPY . /opt/source-code",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```ENTRYPOINT VAR_NAME=/app/path/with/filename [command]```\n    - specifies the start of the command to run\n    - use this if container acts like a command-line program\n    - can be combined together with ```CMD```\n")),"ENTRYPOINT EXPRESS_APP=/opt/source-code/index.js node start",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - ```HEALTHCHECK```\n  - ```MAINTAINER Firstname Lastname <email@example.com>\n    - defines the author of this Dockerfile\n  - ```EXPOSE```\n    - maps a port into the container\n")),"EXPOSE 8080",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'  - ```CMD command param1``` or ```CMD ["command", "param1"]```\n    - specifies the whole command to run\n    - use this if unsure\n      - e.g.:\n')),"CMD ",'["sleep", "5"]',(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"    - parameters are optional\n")),"CMD ",'["bash"]',(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"    - when running docker, commands will be automatically be called\n")),"docker run imageName",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"      - to change param1 value\n")),"docker run imageName command newParam1Value",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"      - if command is declared in the ENTRYPOINT, calling command is not required\n")),"docker run imageName newParam1Value",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},'- basic architecture\n  ```\n  FROM Ubuntu\n  RUN apt-get update && apt-get -y install python\n  RUN pip install flask flask-mysql\n  COPY . /opt/source-code\n  ENTRYPOINT FLASK_APP=/opt/source-code/app.py flask run\n  ```\n- basic app architecture\n  ```\n  FROM node\n  WORKDIR /usr/src/app\n  COPY package*.json ./\n  RUN npm install\n  COPY . .\n  EXPOSE 4000\n  CMD ["npm", "start"]\n  ```\n'))),(0,r.kt)("li",{parentName:"ol"},"create a .dockerignore file (ignore if not required)",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"node_modules\nnpm-debug.log\n"))),(0,r.kt)("li",{parentName:"ol"},"build image\ndocker build -t imageName/appName ."),(0,r.kt)("li",{parentName:"ol"},"push to docker hub registry to make image public\ndocker push imageName/appName"))))}s.isMDXComponent=!0}}]);