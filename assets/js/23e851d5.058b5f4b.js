"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[42557],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),g=s(t),m=a,f=g["".concat(u,".").concat(m)]||g[m]||l[m]||o;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var p={};for(var u in n)hasOwnProperty.call(n,u)&&(p[u]=n[u]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},92850:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(83117),a=(t(67294),t(3905));const o={},i="Go Example",p={unversionedId:"interviewPrep/designPatterns/Creational_patterns/Factory/go/readme",id:"interviewPrep/designPatterns/Creational_patterns/Factory/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Creational_patterns/Factory/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Creational_patterns/Factory/go",slug:"/interviewPrep/designPatterns/Creational_patterns/Factory/go/",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Factory/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Creational_patterns/Factory/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Factory/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Factory/java/"}},u={},s=[],c={toc:s};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"go-example"},"Go Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype ak47 struct {\n    gun\n}\n\nfunc newAk47() iGun {\n    return &ak47{\n        gun: gun{\n            name:  "AK47 gun",\n            power: 4,\n        },\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype gun struct {\n    name  string\n    power int\n}\n\nfunc (g *gun) setName(name string) {\n    g.name = name\n}\n\nfunc (g *gun) getName() string {\n    return g.name\n}\n\nfunc (g *gun) setPower(power int) {\n    g.power = power\n}\n\nfunc (g *gun) getPower() int {\n    return g.power\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype iGun interface {\n    setName(name string)\n    setPower(power int)\n    getName() string\n    getPower() int\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype musket struct {\n    gun\n}\n\nfunc newMusket() iGun {\n    return &musket{\n        gun: gun{\n            name:  "Musket gun",\n            power: 1,\n        },\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc getGun(gunType string) (iGun, error) {\n    if gunType == "ak47" {\n        return newAk47(), nil\n    }\n    if gunType == "musket" {\n        return newMusket(), nil\n    }\n    return nil, fmt.Errorf("Wrong gun type passed")\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n    ak47, _ := getGun("ak47")\n    musket, _ := getGun("musket")\n\n    printDetails(ak47)\n    printDetails(musket)\n}\n\nfunc printDetails(g iGun) {\n    fmt.Printf("Gun: %s", g.getName())\n    fmt.Println()\n    fmt.Printf("Power: %d", g.getPower())\n    fmt.Println()\n}\n')))}l.isMDXComponent=!0}}]);