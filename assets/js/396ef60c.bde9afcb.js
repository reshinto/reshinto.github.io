"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[86006],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),p=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},s=function(e){var n=p(e.components);return t.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,u=d["".concat(c,".").concat(m)]||d[m]||f[m]||a;return r?t.createElement(u,i(i({ref:n},s),{},{components:r})):t.createElement(u,i({ref:n},s))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},59015:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var t=r(83117),o=(r(67294),r(3905));const a={},i="Go Example",l={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Composite/go/readme",id:"interviewPrep/designPatterns/Structural_patterns/Composite/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Composite/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Composite/go",slug:"/interviewPrep/designPatterns/Structural_patterns/Composite/go/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Composite/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Composite/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Composite/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Composite/java/"}},c={},p=[],s={toc:p};function f(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"go-example"},"Go Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype component interface {\n    search(string)\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype file struct {\n    name string\n}\n\nfunc (f *file) search(keyword string) {\n    fmt.Printf("Searching for keyword %s in file %s\\n", keyword, f.name)\n}\n\nfunc (f *file) getName() string {\n    return f.name\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype folder struct {\n    components []component\n    name       string\n}\n\nfunc (f *folder) search(keyword string) {\n    fmt.Printf("Serching recursively for keyword %s in folder %s\\n", keyword, f.name)\n    for _, composite := range f.components {\n        composite.search(keyword)\n    }\n}\n\nfunc (f *folder) add(c component) {\n    f.components = append(f.components, c)\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nfunc main() {\n    file1 := &file{name: "File1"}\n    file2 := &file{name: "File2"}\n    file3 := &file{name: "File3"}\n\n    folder1 := &folder{\n        name: "Folder1",\n    }\n\n    folder1.add(file1)\n\n    folder2 := &folder{\n        name: "Folder2",\n    }\n    folder2.add(file2)\n    folder2.add(file3)\n    folder2.add(folder1)\n\n    folder2.search("rose")\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Serching recursively for keyword rose in folder Folder2\nSearching for keyword rose in file File2\nSearching for keyword rose in file File3\nSerching recursively for keyword rose in folder Folder1\nSearching for keyword rose in file File1\n")))}f.isMDXComponent=!0}}]);