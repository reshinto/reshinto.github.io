"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[4549],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,y=u["".concat(c,".").concat(h)]||u[h]||m[h]||o;return n?r.createElement(y,i(i({ref:t},l),{},{components:n})):r.createElement(y,i({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},59450:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const o={},i="Tournament Winner",s={unversionedId:"interviewPrep/codingTests/easy/arrays/tournamentWinner",id:"interviewPrep/codingTests/easy/arrays/tournamentWinner",title:"Tournament Winner",description:"There's an algorithms tournament taking place in which teams of programmers",source:"@site/docs/interviewPrep/codingTests/easy/arrays/tournamentWinner.md",sourceDirName:"interviewPrep/codingTests/easy/arrays",slug:"/interviewPrep/codingTests/easy/arrays/tournamentWinner",permalink:"/docs/interviewPrep/codingTests/easy/arrays/tournamentWinner",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/codingTests/easy/arrays/tournamentWinner.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sorted Squared Array",permalink:"/docs/interviewPrep/codingTests/easy/arrays/sortedSquaredArray"},next:{title:"Two Number Sum",permalink:"/docs/interviewPrep/codingTests/easy/arrays/twoNumberSum"}},c={},p=[],l={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tournament-winner"},"Tournament Winner"),(0,a.kt)("p",null,"There's an algorithms tournament taking place in which teams of programmers\ncompete against each other to solve algorithmic problems as fast as possible.\nTeams compete in a round robin, where each team faces off against all other\nteams. Only two teams compete against each other at a time, and for each\ncompetition, one team is designated the home team, while the other team is the\naway team. In each competition there's always one winner and one loser; there\nare no ties. A team receives 3 points if it wins and 0 points if it loses. The\nwinner of the tournament is the team that receives the most amount of points."),(0,a.kt)("p",null,"Given an array of pairs representing the teams that have competed against each\nother and an array containing the results of each competition, write a\nfunction that returns the winner of the tournament. The input arrays are named\ncompetitions and results, respectively. The competitions array has elements in the form of\n",(0,a.kt)("inlineCode",{parentName:"p"},"[homeTeam, awayTeam]"),", where each team is a string of at most 30\ncharacters representing the name of the team. The results array\ncontains information about the winner of each corresponding competition in the\ncompetitions array. Specifically, ",(0,a.kt)("inlineCode",{parentName:"p"},"results[i]")," denotes\nthe winner of ",(0,a.kt)("inlineCode",{parentName:"p"},"competitions[i]"),", where a 1 in the\nresults array means that the home team in the corresponding\ncompetition won and a 0 means that the away team won."),(0,a.kt)("p",null,"It's guaranteed that exactly one team will win the tournament and that each\nteam will compete against all other teams exactly once. It's also guaranteed\nthat the tournament will always have at least two teams."),(0,a.kt)("p",null,"Sample Input"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'competitions = [\n["HTML", "C#"],\n["C#", "Python"],\n["Python", "HTML"],\n]\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"results = [0, 0, 1]")),(0,a.kt)("p",null,'Sample Output\n"Python"'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"// C# beats HTML, Python Beats C#, and Python Beats HTML.\n// HTML - 0 points\n// C# -  3 points\n// Python -  6 points\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'def tournamentWinner(competitions, results):\n  # Write your code here.\n  scores = {}\n  winner = ""\n  topScore = 0\n  for i, v in enumerate(results):\n    H, A = competitions[i]\n    W = H if v else A\n    if not scores.get(W):\n      scores[W] = 0\n    scores[W] += 3\n    if scores[W] > topScore:\n      winner = W\n      topScore = scores[W]\n  return winner\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function tournamentWinner(competitions, results) {\n  // Write your code here.\n  const scores = {};\n  let winner = "";\n  let topScore = 0;\n  for (let i = 0; i < results.length; i++) {\n    const result = results[i];\n    const [H, A] = competitions[i];\n    const W = result ? H : A;\n    if (!scores[W]) {\n      scores[W] = 0;\n    }\n    scores[W] += 3;\n    if (scores[W] > topScore) {\n      winner = W;\n      topScore = scores[W];\n    }\n  }\n  return winner;\n}\n')))}m.isMDXComponent=!0}}]);