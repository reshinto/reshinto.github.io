"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[77572],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=l(n),g=a,h=m["".concat(c,".").concat(g)]||m[g]||u[g]||i;return n?r.createElement(h,p(p({ref:t},s),{},{components:n})):r.createElement(h,p({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var l=2;l<i;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},88555:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(83117),a=(n(67294),n(3905));const i={},p="Example 2",o={unversionedId:"interviewPrep/designPatterns/Creational_patterns/Prototype/java/example2",id:"interviewPrep/designPatterns/Creational_patterns/Prototype/java/example2",title:"Example 2",description:"- this example is an extension of the first example",source:"@site/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/java/example2.md",sourceDirName:"interviewPrep/designPatterns/Creational_patterns/Prototype/java",slug:"/interviewPrep/designPatterns/Creational_patterns/Prototype/java/example2",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/java/example2",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/java/example2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/java/"},next:{title:"JavaScript",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/javascript/"}},c={},l=[],s={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"example-2"},"Example 2"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"this example is an extension of the first example")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cache"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"cache/BundledShapedCache.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package refactoring_guru.prototype.caching.cache;\n\nimport refactoring_guru.prototype.example.shapes.Circle;\nimport refactoring_guru.prototype.example.shapes.Rectangle;\nimport refactoring_guru.prototype.example.shapes.Shape;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class BundledShapeCache {\n    private Map<String, Shape> cache = new HashMap<>();\n\n    public BundledShapeCache() {\n        Circle circle = new Circle();\n        circle.x = 5;\n        circle.y = 7;\n        circle.radius = 45;\n        circle.color = "Green";\n\n        Rectangle rectangle = new Rectangle();\n        rectangle.x = 6;\n        rectangle.y = 9;\n        rectangle.width = 8;\n        rectangle.height = 10;\n        rectangle.color = "Blue";\n\n        cache.put("Big green circle", circle);\n        cache.put("Medium blue rectangle", rectangle);\n    }\n\n    public Shape put(String key, Shape shape) {\n        cache.put(key, shape);\n        return shape;\n    }\n\n    public Shape get(String key) {\n        return cache.get(key).clone();\n    }\n}\n'))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Demo.java"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package refactoring_guru.prototype.caching;\n\nimport refactoring_guru.prototype.caching.cache.BundledShapeCache;\nimport refactoring_guru.prototype.example.shapes.Shape;\n\npublic class Demo {\n    public static void main(String[] args) {\n        BundledShapeCache cache = new BundledShapeCache();\n\n        Shape shape1 = cache.get("Big green circle");\n        Shape shape2 = cache.get("Medium blue rectangle");\n        Shape shape3 = cache.get("Medium blue rectangle");\n\n        if (shape1 != shape2 && !shape1.equals(shape2)) {\n            System.out.println("Big green circle != Medium blue rectangle (yay!)");\n        } else {\n            System.out.println("Big green circle == Medium blue rectangle (booo!)");\n        }\n\n        if (shape2 != shape3) {\n            System.out.println("Medium blue rectangles are two different objects (yay!)");\n            if (shape2.equals(shape3)) {\n                System.out.println("And they are identical (yay!)");\n            } else {\n                System.out.println("But they are not identical (booo!)");\n            }\n        } else {\n            System.out.println("Rectangle objects are the same (booo!)");\n        }\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Big green circle != Medium blue rectangle (yay!)\nMedium blue rectangles are two different objects (yay!)\nAnd they are identical (yay!)\n")))}u.isMDXComponent=!0}}]);