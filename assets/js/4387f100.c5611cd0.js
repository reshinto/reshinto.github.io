"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[25342],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(h,l(l({ref:t},p),{},{components:r})):a.createElement(h,l({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},80407:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(83117),n=(r(67294),r(3905));const o={},l="Memory Leaks",i={unversionedId:"interviewPrep/memory/readme",id:"interviewPrep/memory/readme",title:"Memory Leaks",description:"JavaScript / NodeJS",source:"@site/docs/interviewPrep/memory/readme.md",sourceDirName:"interviewPrep/memory",slug:"/interviewPrep/memory/",permalink:"/docs/interviewPrep/memory/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/memory/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Meaning Variable Names",permalink:"/docs/interviewPrep/design_principles/meaningfulVariableNames/"},next:{title:"Programming Paradigm",permalink:"/docs/interviewPrep/programmingParadigm/"}},s={},c=[{value:"JavaScript / NodeJS",id:"javascript--nodejs",level:2},{value:"V8 handles 2 main memory categories",id:"v8-handles-2-main-memory-categories",level:3},{value:"V8 has a garbage collector runs mainly Mark and Sweep algorithm",id:"v8-has-a-garbage-collector-runs-mainly-mark-and-sweep-algorithm",level:3},{value:"Global Variables",id:"global-variables",level:3},{value:"Multiple References",id:"multiple-references",level:3},{value:"Closures",id:"closures",level:3},{value:"Run app with garbage collector attach to chrome debugger options",id:"run-app-with-garbage-collector-attach-to-chrome-debugger-options",level:4}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"memory-leaks"},"Memory Leaks"),(0,n.kt)("h2",{id:"javascript--nodejs"},"JavaScript / NodeJS"),(0,n.kt)("h3",{id:"v8-handles-2-main-memory-categories"},"V8 handles 2 main memory categories"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Stack - it stores the primitive data types: Number, String,\nboolean, Null, Undefined, Symbol and references to non-primitive\ndata types Object"),(0,n.kt)("li",{parentName:"ol"},"Heap",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"stores the non-primitive data types: Object")))),(0,n.kt)("h3",{id:"v8-has-a-garbage-collector-runs-mainly-mark-and-sweep-algorithm"},"V8 has a garbage collector runs mainly Mark and Sweep algorithm"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"It checks for all objects' reference paths to the root node, which is the global or window object"),(0,n.kt)("li",{parentName:"ul"},"If any reference has no path to the root node, it will be marked as garbage and will be swept later"),(0,n.kt)("li",{parentName:"ul"},"Important Note: When the Garbage Collector runs, it pauses your application entirely until it finishes its work",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"so you need to minimize its work by taking care of your objects' references")))),(0,n.kt)("h3",{id:"global-variables"},"Global Variables"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"As they have a direct path to the root node, they will stay in memory as long as the application is running"),(0,n.kt)("li",{parentName:"ul"},"so you need to be careful when setting global variables and the amount of data you\u2019ll set to them")),(0,n.kt)("h3",{id:"multiple-references"},"Multiple References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Setting multiple references to the same object may cause a problem"),(0,n.kt)("li",{parentName:"ul"},"also as you may remove one ref and forget the other which will keep your object still exists in the Heap")),(0,n.kt)("h3",{id:"closures"},"Closures"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In closures simply you keep references to objects to be used later"),(0,n.kt)("li",{parentName:"ul"},"this feature has many advantages but if it\u2019s used without caution",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it may cause big issues as these references will keep objects in heap and these objects might be large ones, not just simple objects")))),(0,n.kt)("h4",{id:"run-app-with-garbage-collector-attach-to-chrome-debugger-options"},"Run app with garbage collector attach to chrome debugger options"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"node --expose-gc --inspect=9222 app.js")))}u.isMDXComponent=!0}}]);