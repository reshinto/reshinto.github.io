"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[7032],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,h=m["".concat(o,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3915:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={},l="Singletons",s={unversionedId:"interviewPrep/designPatterns/Creational_patterns/Singletons/readme",id:"interviewPrep/designPatterns/Creational_patterns/Singletons/readme",title:"Singletons",description:"- Objects that can only have a single instance, with a single point of access",source:"@site/docs/interviewPrep/designPatterns/Creational_patterns/Singletons/readme.md",sourceDirName:"interviewPrep/designPatterns/Creational_patterns/Singletons",slug:"/interviewPrep/designPatterns/Creational_patterns/Singletons/",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Singletons/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Creational_patterns/Singletons/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Prototype",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/"},next:{title:"Dependency Inversion Principle",permalink:"/docs/interviewPrep/designPatterns/SOLID_design_principles/DependencyInversionPrinciple/"}},o={},c=[{value:"Structure",id:"structure",level:2},{value:"Javascript",id:"javascript",level:2},{value:"The Node.js module system provides a basic framework for implementing a rudimentary singleton",id:"the-nodejs-module-system-provides-a-basic-framework-for-implementing-a-rudimentary-singleton",level:3},{value:"Creating a singleton with ES5",id:"creating-a-singleton-with-es5",level:4},{value:"Creating a singleton with ES6 class",id:"creating-a-singleton-with-es6-class",level:4},{value:"Python",id:"python",level:2},{value:"Singleton pattern",id:"singleton-pattern",level:3},{value:"uses <strong>new</strong> method",id:"uses-new-method",level:4},{value:"Borg",id:"borg",level:3},{value:"uses <strong>init</strong> method",id:"uses-init-method",level:4}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"singletons"},"Singletons"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Objects that can only have a single instance, with a single point of access"),(0,i.kt)("li",{parentName:"ul"},"It is a global variable in an object-oriented way"),(0,i.kt)("li",{parentName:"ul"},"Why use it?",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Useful for maintaining a central state, where all clients need to access and operate on a common resource"),(0,i.kt)("li",{parentName:"ul"},"It can be used to cache information",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"so as to be shared by various elements of the software system"),(0,i.kt)("li",{parentName:"ul"},"by keeping the information in a single object",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it is not longer required to retrieve the information from its original source every time"),(0,i.kt)("li",{parentName:"ul"},"in this case, singleton acts as a cache of the information")))))))),(0,i.kt)("h2",{id:"structure"},"Structure"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Singleton",src:n(7880).Z,width:"866",height:"594"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The Singleton class declares the static method getInstance that returns the same instance of its own class.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The Singleton\u2019s constructor should be hidden from the client code."),(0,i.kt)("li",{parentName:"ul"},"Calling the getInstance method should be the only way of getting the Singleton object.")))),(0,i.kt)("h2",{id:"javascript"},"Javascript"),(0,i.kt)("h3",{id:"the-nodejs-module-system-provides-a-basic-framework-for-implementing-a-rudimentary-singleton"},"The Node.js module system provides a basic framework for implementing a rudimentary singleton"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"let num1 = 0;\nmodule.exports = {\n  add: (num) => num1 + num, // module 1\n  subtract: (num) => num1 - num, // module 2\n};\n")),(0,i.kt)("h4",{id:"creating-a-singleton-with-es5"},"Creating a singleton with ES5"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"When module is imported, only a single instance is created and referred to",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This is because the module system caches the module the moment it is accessed by using a require statement"),(0,i.kt)("li",{parentName:"ul"},"Therefore, regardless of the number of times imported, the same instance is referred and is will be accessed via the same cached and common instance"),(0,i.kt)("li",{parentName:"ul"},"However, although this behavior behaves like a singleton, it is technically just an instance of the module that is cached upon first access")))),(0,i.kt)("h4",{id:"creating-a-singleton-with-es6-class"},"Creating a singleton with ES6 class"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Normal way of exporting and importing Singletons defined with ES6 class with not behave like a singleton",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"as they do not share the same point of access"))),(0,i.kt)("li",{parentName:"ul"},"Need to create an instance and export the instance to make it behave like a singleton")),(0,i.kt)("h2",{id:"python"},"Python"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Python modules are singletons",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"but it is not a good idea to use them for the Singleton pattern",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"because it is error-prone",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g.: if you forget the global statements, variables local to a function will be created instead"))),(0,i.kt)("li",{parentName:"ul"},"they pollute the module namespace"),(0,i.kt)("li",{parentName:"ul"},"no oop benefits like associated methods or reuse through inheritance")))))),(0,i.kt)("h3",{id:"singleton-pattern"},"Singleton pattern"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Ensures that a class has only 1 instance"),(0,i.kt)("li",{parentName:"ul"},"provide a global point of access to it",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g. a logging class"))),(0,i.kt)("li",{parentName:"ul"},"Pros",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Singletons are allocated once and only once"),(0,i.kt)("li",{parentName:"ul"},"Policies can be added to the method that provides access to the singleton pointer"))),(0,i.kt)("li",{parentName:"ul"},"Cons",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Derivatives of Singletons are not automatically Singletons"),(0,i.kt)("li",{parentName:"ul"},"Singletons must always be accessed through a pointer or reference",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"obtaining this has overhead")))))),(0,i.kt)("h4",{id:"uses-new-method"},"uses ",(0,i.kt)("strong",{parentName:"h4"},"new")," method"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"is the first step of instance creation"),(0,i.kt)("li",{parentName:"ul"},"is called before ",(0,i.kt)("strong",{parentName:"li"},"init"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"is responsible for returning a new instance of the class")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Singleton:\n    __instance = None\n\n    def __new__(cls, val=None):\n        if Singleton.__instance is None:\n            Singleton.__instance = object.__new__(cls)\n        Singleton.__instance.val = val\n        return Singleton.__instance\n")),(0,i.kt)("h3",{id:"borg"},"Borg"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Allows a class to have as many instances as one likes"),(0,i.kt)("li",{parentName:"ul"},"ensures that they all share the same state"),(0,i.kt)("li",{parentName:"ul"},"Pros",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Derivatives of monostate classes can also be monostate"),(0,i.kt)("li",{parentName:"ul"},"Access to monostate objects does not have to be through pointers or references"))),(0,i.kt)("li",{parentName:"ul"},"Cons",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"No instantiation policy can exist for monostate classes"),(0,i.kt)("li",{parentName:"ul"},"Monostate instances may be allocated and deallocated many times")))),(0,i.kt)("h4",{id:"uses-init-method"},"uses ",(0,i.kt)("strong",{parentName:"h4"},"init")," method"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"does not return anything"),(0,i.kt)("li",{parentName:"ul"},"only responsible for initializing the instance after it has been created")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class Borg:\n    __shared_state = {}  # Attribute dictionary\n\n    def __init__(self):\n        self.__dict__ = self._shared_state  # Make it an attribute dictionary\n")))}p.isMDXComponent=!0},7880:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/singleton-8054ab1e1c0849f5737654016807111d.png"}}]);