"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[33016],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>m});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),g=s(t),m=a,d=g["".concat(p,".").concat(m)]||g[m]||u[m]||i;return t?r.createElement(d,o(o({ref:n},l),{},{components:t})):r.createElement(d,o({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7523:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=t(83117),a=(t(67294),t(3905));const i={},o="Go Example",c={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Adapter/go/readme",id:"interviewPrep/designPatterns/Structural_patterns/Adapter/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Adapter/go",slug:"/interviewPrep/designPatterns/Structural_patterns/Adapter/go/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/java/"}},p={},s=[],l={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"go-example"},"Go Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype client struct {\n}\n\nfunc (c *client) insertLightningConnectorIntoComputer(com computer) {\n    fmt.Println("Client inserts Lightning connector into computer.")\n    com.insertIntoLightningPort()\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype computer interface {\n    insertIntoLightningPort()\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype mac struct {\n}\n\nfunc (m *mac) insertIntoLightningPort() {\n    fmt.Println("Lightning connector is plugged into mac machine.")\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype windows struct{}\n\nfunc (w *windows) insertIntoUSBPort() {\n    fmt.Println("USB connector is plugged into windows machine.")\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype windowsAdapter struct {\n    windowMachine *windows\n}\n\nfunc (w *windowsAdapter) insertIntoLightningPort() {\n    fmt.Println("Adapter converts Lightning signal to USB.")\n    w.windowMachine.insertIntoUSBPort()\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\nfunc main() {\n\n    client := &client{}\n    mac := &mac{}\n\n    client.insertLightningConnectorIntoComputer(mac)\n\n    windowsMachine := &windows{}\n    windowsMachineAdapter := &windowsAdapter{\n        windowMachine: windowsMachine,\n    }\n\n    client.insertLightningConnectorIntoComputer(windowsMachineAdapter)\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Client inserts Lightning connector into computer.\nLightning connector is plugged into mac machine.\nClient inserts Lightning connector into computer.\nAdapter converts Lightning signal to USB.\nUSB connector is plugged into windows machine.\n")))}u.isMDXComponent=!0}}]);