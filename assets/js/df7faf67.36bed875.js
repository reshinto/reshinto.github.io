"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[3475],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>d});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=u(a),d=l,k=c["".concat(o,".").concat(d)]||c[d]||s[d]||i;return a?n.createElement(k,r(r({ref:t},m),{},{components:a})):n.createElement(k,r({ref:t},m))}));function d(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:l,r[1]=p;for(var u=2;u<i;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},66255:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var n=a(87462),l=(a(67294),a(3905));const i={},r="Apache Maven",p={unversionedId:"Technologies/projectManagementTools/apacheMaven/readme",id:"Technologies/projectManagementTools/apacheMaven/readme",title:"Apache Maven",description:"- standard definition",source:"@site/docs/Technologies/projectManagementTools/apacheMaven/readme.md",sourceDirName:"Technologies/projectManagementTools/apacheMaven",slug:"/Technologies/projectManagementTools/apacheMaven/",permalink:"/docs/Technologies/projectManagementTools/apacheMaven/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/projectManagementTools/apacheMaven/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pre-commit",permalink:"/docs/Technologies/pre-hooks/python/pre-commit/"},next:{title:"Gradle",permalink:"/docs/Technologies/projectManagementTools/gradle/"}},o={},u=[{value:"Installation",id:"installation",level:2},{value:"Project Object Model (POM)",id:"project-object-model-pom",level:2},{value:"POM file",id:"pom-file",level:3},{value:"POM Categories",id:"pom-categories",level:4},{value:"POM syntax",id:"pom-syntax",level:4},{value:"POM properties",id:"pom-properties",level:4},{value:"Parent POM",id:"parent-pom",level:4},{value:"features enabled by POM",id:"features-enabled-by-pom",level:4},{value:"Maven Life Cycles",id:"maven-life-cycles",level:4},{value:"default life cycle phases",id:"default-life-cycle-phases",level:5},{value:"clean life cycle phases",id:"clean-life-cycle-phases",level:5},{value:"site life cycle phases",id:"site-life-cycle-phases",level:5},{value:"Maven Repository",id:"maven-repository",level:3},{value:"Maven Dependency Management",id:"maven-dependency-management",level:3},{value:"project dependencies",id:"project-dependencies",level:4},{value:"project relationships",id:"project-relationships",level:4},{value:"transitive dependencies",id:"transitive-dependencies",level:4},{value:"Best Practices",id:"best-practices",level:3},{value:"Maven Plugins",id:"maven-plugins",level:2},{value:"Core plugins",id:"core-plugins",level:3},{value:"Packaging tools plugin",id:"packaging-tools-plugin",level:3},{value:"Reporting plugins",id:"reporting-plugins",level:3},{value:"Tools plugins",id:"tools-plugins",level:3},{value:"Create a project with Maven",id:"create-a-project-with-maven",level:2},{value:"Sample program",id:"sample-program",level:3},{value:"Web app",id:"web-app",level:3},{value:"Unit testing with Maven",id:"unit-testing-with-maven",level:2},{value:"Add resources folder",id:"add-resources-folder",level:2},{value:"Packaging App",id:"packaging-app",level:2}],m={toc:u};function s(e){let{components:t,...i}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"apache-maven"},"Apache Maven"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"standard definition",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"a software project management and comprehension tool"),(0,l.kt)("li",{parentName:"ul"},"based on the concept of a Project Object Model (POM)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Maven can manage a project's build, reporting and documentation from a central piece of information"))))),(0,l.kt)("li",{parentName:"ul"},"simple definition",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"a project management tool with a POM"),(0,l.kt)("li",{parentName:"ul"},"a set of standards"),(0,l.kt)("li",{parentName:"ul"},"a project life cycle"),(0,l.kt)("li",{parentName:"ul"},"a dependency management system"),(0,l.kt)("li",{parentName:"ul"},"logic for executing plugin goals at lifecycle phases"),(0,l.kt)("li",{parentName:"ul"},"projects follow a consistent structure"),(0,l.kt)("li",{parentName:"ul"},"projects are IDE agnostic"),(0,l.kt)("li",{parentName:"ul"},"Maven allows for easy modifications to the project"),(0,l.kt)("li",{parentName:"ul"},"Maven simplifies the declaration of project dependencies"),(0,l.kt)("li",{parentName:"ul"},"it uses a POM file")))),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"install with brew",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"brew install maven"))),(0,l.kt)("li",{parentName:"ul"},"check maven version",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn -version")))),(0,l.kt)("h2",{id:"project-object-model-pom"},"Project Object Model (POM)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"it has a set of standards, a project lifecycle, a dependency management system, and logic for executing plugin at defined phases in a lifecycle"),(0,l.kt)("li",{parentName:"ul"},"projects are set up with default behaviors"),(0,l.kt)("li",{parentName:"ul"},"source code must be in the ",(0,l.kt)("inlineCode",{parentName:"li"},"src/main/")," folder"),(0,l.kt)("li",{parentName:"ul"},"resources necessary for the project are in another folder"),(0,l.kt)("li",{parentName:"ul"},"test cases are in a specifically name folder"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"target folder")," is used for the final JAR file")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"maven project structure",src:a(20081).Z,width:"542",height:"556"})),(0,l.kt)("h3",{id:"pom-file"},"POM file"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"must include",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"project description"),(0,l.kt)("li",{parentName:"ul"},"unique set of ",(0,l.kt)("inlineCode",{parentName:"li"},"coordinates"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"highlighted by ",(0,l.kt)("inlineCode",{parentName:"li"},"*"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"groupId"),(0,l.kt)("li",{parentName:"ul"},"artifactId"),(0,l.kt)("li",{parentName:"ul"},"version"))))),(0,l.kt)("li",{parentName:"ul"},"project attributes"),(0,l.kt)("li",{parentName:"ul"},"project's license"),(0,l.kt)("li",{parentName:"ul"},"project version"),(0,l.kt)("li",{parentName:"ul"},"program authors and contributors"),(0,l.kt)("li",{parentName:"ul"},"dependencies"))),(0,l.kt)("li",{parentName:"ul"},"POM file can be separated into multiple POM files")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"POM structure",src:a(32290).Z,width:"1582",height:"698"})),(0,l.kt)("h4",{id:"pom-categories"},"POM Categories"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"the POM contains all of the information about a project"),(0,l.kt)("li",{parentName:"ul"},"the file is stored with an XML extension"),(0,l.kt)("li",{parentName:"ul"},"minimum categories required",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  <groupId>com.projectname</groupId>\n  <artifactId>appname</artifactId>\n  <version>1.0</version>\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},"common categories",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"project coordinates"),(0,l.kt)("li",{parentName:"ul"},"project's license"),(0,l.kt)("li",{parentName:"ul"},"list of developers and contributors to the project"),(0,l.kt)("li",{parentName:"ul"},"list of project dependencies"),(0,l.kt)("li",{parentName:"ul"},"name of project"),(0,l.kt)("li",{parentName:"ul"},"url associated with project"),(0,l.kt)("li",{parentName:"ul"},"packaging type"),(0,l.kt)("li",{parentName:"ul"},"scope of element"),(0,l.kt)("li",{parentName:"ul"},"information about inheritance"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"build")," category",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"add build related plugins"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pluginManagement")," tag is optional, also work without it",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"it is normally used in a ",(0,l.kt)("inlineCode",{parentName:"li"},"parent POM"))))),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <dependencies></dependencies>\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.8.0</version>\n          <configuration>\n            <target>8</target>\n            <source>8</source>\n          </configuration>\n        </plugin>\n        ...\n      </plugins>\n    </pluginManagement>\n  </build>\n  ...\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reporting")," category",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"add reporting related plugins")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <dependencies></dependencies>\n  <buid></build>\n  <reporting>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-report-plugin</artifactId>\n        <version>3.0.0</version>\n      </plugin>\n      ...\n    </plugins>\n  </reporting>\n  ...\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"distributionManagement")," category is used for deploying",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <distributionManagement>\n    <repository>\n      <id>internal.repo</id>\n      <name>internal repository name</name>\n      <url>hot to repository</url\n    </repository>\n  </distributionManagement>\n  ...\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"server")," categpry is used to specify server definition",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"can also configure it in the ",(0,l.kt)("inlineCode",{parentName:"li"},"settings.xml")," fiel")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<server>\n  <id>internal repo</id>\n  <username>someusername</username>\n  <password>somepassword</password>\n</server>\n")))),(0,l.kt)("h4",{id:"pom-syntax"},"POM syntax"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"POM is documented in XML file"),(0,l.kt)("li",{parentName:"ul"},"file is stored in base directory"),(0,l.kt)("li",{parentName:"ul"},"syntax is similar to HTML file using ",(0,l.kt)("inlineCode",{parentName:"li"},"< >")," tags"),(0,l.kt)("li",{parentName:"ul"},"every open XML tag must have a closing XML tag"),(0,l.kt)("li",{parentName:"ul"},"tags can be nested one inside the other"),(0,l.kt)("li",{parentName:"ul"},"XML declaration is optional"),(0,l.kt)("li",{parentName:"ul"},"all projects extend the super POM automatically"),(0,l.kt)("li",{parentName:"ul"},"sample",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0http://maven.apache.org/xsd/maven-4.0.0.xsd">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.projectname</groupId>\n  <artifactId>appname</artifactId>\n  <version>1.0</version>\n</project>\n')))),(0,l.kt)("h4",{id:"pom-properties"},"POM properties"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<properties>\n  <maven.compiler.source>11</maven.compiler.source>\n  <maven.compiler.target>11</maven.compiler.target>\n  <java.version>11</java.version>\n  <junit.version>5.2.0</junit.version>\n</properties>\n<dependencies>\n  <dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <version>${junit.version}</version>\n    <scope>test</scope>\n  </dependency>\n</dependencies>\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"purpose",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"reduces duplication",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"often times when configuration POM, tend to put the same value for an item and properties",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"properties help to reduce this"))))),(0,l.kt)("li",{parentName:"ul"},"streamlines configuration",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"often used in conjunction with a ",(0,l.kt)("inlineCode",{parentName:"li"},"parent")," POM"))),(0,l.kt)("li",{parentName:"ul"},"helps keep items in sync",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"such as versions of similar libraries"),(0,l.kt)("li",{parentName:"ul"},"properties allow you to leverage a version and reference it"))),(0,l.kt)("li",{parentName:"ul"},"aids in upgrades",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"can upgrade the property and it upgrades the rest for you")))))),(0,l.kt)("h4",{id:"parent-pom"},"Parent POM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a POM file that is stand-alone (no code associated with it)"),(0,l.kt)("li",{parentName:"ul"},"creates a list of dependency versions and plugins versions that the subordinate projects can leverage"),(0,l.kt)("li",{parentName:"ul"},"provides a way to control versions in 1 place so the subordinate projects don't have to specify the version, only the dependency"),(0,l.kt)("li",{parentName:"ul"},"it can provide properties and repositories",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"a tool use to manage versions and licenses",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"because can provide a pre-approved list of dependencies and artifacts"))))),(0,l.kt)("li",{parentName:"ul"},"similar concept is a ",(0,l.kt)("inlineCode",{parentName:"li"},"Reactor"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"it builds on the concept of a parent POM"),(0,l.kt)("li",{parentName:"ul"},"used to build a group of related projects via the use of Parent POM"),(0,l.kt)("li",{parentName:"ul"},"Maven commands are executed on the parent, and reactor executes the commands on each module or artifact in the reactor",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the dependencies, if exists are handled in the correct order"))),(0,l.kt)("li",{parentName:"ul"},"building reactor although not hard, it is time consuming"),(0,l.kt)("li",{parentName:"ul"},"structure example",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},"root - pom\n     |_ module - POM\n     |_ module - POM\n     |_ module - POM\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"parent POM",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <modules>\n    <module>module-name</module>\n  </modules>\n  ...\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},"child POM",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <parent>\n    <groupId>com.projectname</groupId>\n    <artifactId>appname</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n  </parent>\n  ...\n</project>\n")))))))),(0,l.kt)("h4",{id:"features-enabled-by-pom"},"features enabled by POM"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"includes",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"dependency management"),(0,l.kt)("li",{parentName:"ul"},"access to remote repositories"),(0,l.kt)("li",{parentName:"ul"},"universal reuse of build logic"),(0,l.kt)("li",{parentName:"ul"},"tool portability and integration",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"allow IDEs to have a common place to find information about a project"))),(0,l.kt)("li",{parentName:"ul"},"easy searching and filtering of project artifacts")))),(0,l.kt)("h4",{id:"maven-life-cycles"},"Maven Life Cycles"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Default"),(0,l.kt)("li",{parentName:"ol"},"Clean"),(0,l.kt)("li",{parentName:"ol"},"Site")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"each cycle has a few phases"),(0,l.kt)("li",{parentName:"ul"},"phases must be executed in order"),(0,l.kt)("li",{parentName:"ul"},"phrases are made up of goals",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Goals",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"plugin goals are bound to phase of lifecycle"),(0,l.kt)("li",{parentName:"ul"},"goals can be triggered individually"),(0,l.kt)("li",{parentName:"ul"},"e.g.: ",(0,l.kt)("inlineCode",{parentName:"li"},"mvn dependency:analyze"))))))),(0,l.kt)("h5",{id:"default-life-cycle-phases"},"default life cycle phases"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"main lifecycle")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Validate",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"validate the project is correct"))),(0,l.kt)("li",{parentName:"ol"},"Initialize"),(0,l.kt)("li",{parentName:"ol"},"Generate-sources"),(0,l.kt)("li",{parentName:"ol"},"Process-sources"),(0,l.kt)("li",{parentName:"ol"},"Generate-resources"),(0,l.kt)("li",{parentName:"ol"},"Process-resources"),(0,l.kt)("li",{parentName:"ol"},"Compile",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"compile the source of the project"))),(0,l.kt)("li",{parentName:"ol"},"Process-classes"),(0,l.kt)("li",{parentName:"ol"},"Generate-test-sources"),(0,l.kt)("li",{parentName:"ol"},"Process-test-sources"),(0,l.kt)("li",{parentName:"ol"},"Generate-test-resources"),(0,l.kt)("li",{parentName:"ol"},"Process-test-resources"),(0,l.kt)("li",{parentName:"ol"},"Test-compile"),(0,l.kt)("li",{parentName:"ol"},"Process-test-classes"),(0,l.kt)("li",{parentName:"ol"},"Test",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"test the compiled source code using a unit testing framework"))),(0,l.kt)("li",{parentName:"ol"},"Prepare-package"),(0,l.kt)("li",{parentName:"ol"},"Package",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"package the compiled code"))),(0,l.kt)("li",{parentName:"ol"},"Pre-integration-test"),(0,l.kt)("li",{parentName:"ol"},"Integration-test",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"deploy the package into an environment where integration tests can be run"))),(0,l.kt)("li",{parentName:"ol"},"Post-integration-test"),(0,l.kt)("li",{parentName:"ol"},"Verify",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"run any checks to verify the package is valid"))),(0,l.kt)("li",{parentName:"ol"},"Install",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"install the package into the local repository"))),(0,l.kt)("li",{parentName:"ol"},"Deploy",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"copies the final package to the remote repository")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"plugin goals can be attached to each lifecycle phase"),(0,l.kt)("li",{parentName:"ul"},"maven executes the goals attached to each phase"),(0,l.kt)("li",{parentName:"ul"},"each phase has 0 or more goals bound to it"),(0,l.kt)("li",{parentName:"ul"},"when you run ",(0,l.kt)("inlineCode",{parentName:"li"},"mvn install"),", multiple goals are executed",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"target/")," folder with all the compiled code and jar file"))),(0,l.kt)("li",{parentName:"ul"},"in the package phase, it executes the JAR goal")),(0,l.kt)("h5",{id:"clean-life-cycle-phases"},"clean life cycle phases"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"cleans project")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Pre-clean"),(0,l.kt)("li",{parentName:"ol"},"Clean"),(0,l.kt)("li",{parentName:"ol"},"Post-clean")),(0,l.kt)("h5",{id:"site-life-cycle-phases"},"site life cycle phases"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"generates project documentation")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Pre-site"),(0,l.kt)("li",{parentName:"ol"},"site"),(0,l.kt)("li",{parentName:"ol"},"post-site"),(0,l.kt)("li",{parentName:"ol"},"site-deploy")),(0,l.kt)("h3",{id:"maven-repository"},"Maven Repository"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"central repository that contains open-source components"),(0,l.kt)("li",{parentName:"ul"},"Maven creates a local repository at ",(0,l.kt)("inlineCode",{parentName:"li"},"~/.m2")," location",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"foreign dependencies are installed here"),(0,l.kt)("li",{parentName:"ul"},"it also includes your JAR file and ",(0,l.kt)("inlineCode",{parentName:"li"},"pom.xml")," file for each install project"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://search.maven.org/"},"Maven repo search url address"))))),(0,l.kt)("h3",{id:"maven-dependency-management"},"Maven Dependency Management"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"check dependencies",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"dependencies could be used but not declared"),(0,l.kt)("li",{parentName:"ul"},"unused dependencies will be found",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn dependency:analyze"))))),(0,l.kt)("li",{parentName:"ul"},"check dependencies tree",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn dependency:tree"))),(0,l.kt)("li",{parentName:"ul"},"allows for code reuse"),(0,l.kt)("li",{parentName:"ul"},"similar to using Java APIs"),(0,l.kt)("li",{parentName:"ul"},"most programmers have used the Math API"),(0,l.kt)("li",{parentName:"ul"},"dependencies are defined in the ",(0,l.kt)("inlineCode",{parentName:"li"},"pom.xml")," file",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"<scope></scope>")," tag identifies what part of the life cycle the dependency is going to be used in",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"if scope tag is not included, it defaults to compile phase"),(0,l.kt)("li",{parentName:"ul"},"tests related must have the `",(0,l.kt)("scope",null,"test")),(0,l.kt)("li",{parentName:"ul"},"other scopes include",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"compile"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the default scope"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"provided"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"used when JDK is expected to provide them"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"runtime"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"required for executing and testing, not compiling"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"test"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"not required during the normal operation of an app"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"system"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"similar to ",(0,l.kt)("inlineCode",{parentName:"li"},"provided")),(0,l.kt)("li",{parentName:"ul"},"but must specify the explicit path to the JAR on the locals file system")))))))))),(0,l.kt)("h4",{id:"project-dependencies"},"project dependencies"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Maven supports internal and external dependencies"),(0,l.kt)("li",{parentName:"ul"},"a common dependencies in Maven is ",(0,l.kt)("inlineCode",{parentName:"li"},"junit"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"log4j"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"jaxen")),(0,l.kt)("li",{parentName:"ul"},"sample",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project ...>\n  ...\n  <dependencies>\n    <dependency>\n      <groupId>log4j</groupId>\n      <artifactId>log4j</artifactId>\n      <version>1.2.14</version>\n    </dependency>\n    <dependency>\n      <groupId>jaxen</groupId>\n      <artifactId>jaxen</artifactId>\n      <version>1.1.1</version>\n    </dependency>\n  </dependencies>\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},"using properties in parent POM example",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<properties>\n  <log4j.version>1.2.14</log4j.version>\n  <junit.version>3.8.1</junit.version>\n</properties>\n<dependencyManagement>\n  <dependencies>\n    <dependency>\n      <groupId>log4j</groupId>\n      <artifactId>log4j</artifactId>\n      <version>${log4j.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>${jaxen.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n</dependencyManagement>\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"in child pom file example",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"works fine if ",(0,l.kt)("inlineCode",{parentName:"li"},"enforcer")," plugin is not added")),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencies>\n  <dependency>\n    <groupId>log4j</groupId>\n    <artifactId>log4j</artifactId>\n  </dependency>\n  <dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n  </dependency>\n</dependencies>\n")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"verify with",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn clean verify")))))))),(0,l.kt)("h4",{id:"project-relationships"},"project relationships"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Maven makes it easy to track down dependencies"),(0,l.kt)("li",{parentName:"ul"},"example of external relationships are ",(0,l.kt)("inlineCode",{parentName:"li"},"Log4j")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"JUnit")),(0,l.kt)("li",{parentName:"ul"},"Internal is where project-a depends on project-b"),(0,l.kt)("li",{parentName:"ul"},"they are established using the Maven coordinates"),(0,l.kt)("li",{parentName:"ul"},"relationships are decribed as dependencies"),(0,l.kt)("li",{parentName:"ul"},"projects can inherit project relationships")),(0,l.kt)("h4",{id:"transitive-dependencies"},"transitive dependencies"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"it is a dependency of a dependency"),(0,l.kt)("li",{parentName:"ul"},"provides a mechanism to only declare dependencies that you want",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"thus you do not need to manage what dependencies is required from the dependencies that you need"))),(0,l.kt)("li",{parentName:"ul"},"rules",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"when 2 versions of the same artifact are needed",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the closest to the actual project wins",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"e.g: actual project <- A needs package abc version 1.0 <- B needs package abc version 1.2",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"package abc vesion 1.0 wins"))))),(0,l.kt)("li",{parentName:"ul"},"if ",(0,l.kt)("inlineCode",{parentName:"li"},"dependencyManagement")," tag is used",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"the chosen version will be used"))),(0,l.kt)("li",{parentName:"ul"},"if declaring in local dependency",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"local overrides all other transitive dependencies")))))))),(0,l.kt)("h3",{id:"best-practices"},"Best Practices"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"grouping common dependencies"),(0,l.kt)("li",{parentName:"ul"},"can be done using multiple POM files",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"allows other projects to reuse POM file"))),(0,l.kt)("li",{parentName:"ul"},"choosing inheritance vs multi-module relationship",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"multi-module: used when components are unrelated"),(0,l.kt)("li",{parentName:"ul"},"inheritance: used when projects share dependencies"))),(0,l.kt)("li",{parentName:"ul"},"proper indentation for ",(0,l.kt)("inlineCode",{parentName:"li"},"pom.xml")," file"),(0,l.kt)("li",{parentName:"ul"},"follow a standard layout where coordinates are listed first")),(0,l.kt)("h2",{id:"maven-plugins"},"Maven Plugins"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a plugin is a collection of 1 or more goals"),(0,l.kt)("li",{parentName:"ul"},"a goal is a unit of work in Maven",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"can view goals of a plugin in the maven plugin website")))),(0,l.kt)("h3",{id:"core-plugins"},"Core plugins"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"list of core plugins",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Compiler plugin",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"contains goals for compiling source code and unit tests"))),(0,l.kt)("li",{parentName:"ul"},"Surefire plugin",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"used for executing unit tests and generating reports"))),(0,l.kt)("li",{parentName:"ul"},"others",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"clean, deploy, failsafe, install, resources, site, verifier"))))),(0,l.kt)("li",{parentName:"ul"},"Maven also allows creating of custom plugins",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"it can be written in multiple languages",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"java, Groovy, Ruby, ..."))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://maven.apache.org/plugins/index.html"},"list of maven plugins url")),(0,l.kt)("li",{parentName:"ul"},"example of using a plugin and goal in the terminal",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"plugin: compiler, goal: compile",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn compiler:compile")))))),(0,l.kt)("h3",{id:"packaging-tools-plugin"},"Packaging tools plugin"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"list of packaging tools plugins",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"JAR plugin",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"creates JAR or Jave Archive files"))),(0,l.kt)("li",{parentName:"ul"},"others",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"ear, ejb, rar, war, app-client/acr, shade, source, jlink, jmod"))))),(0,l.kt)("li",{parentName:"ul"},"example of using a plugin and goal in the terminal",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"plugin: jar, goal: jar",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn jar:jar")))))),(0,l.kt)("h3",{id:"reporting-plugins"},"Reporting plugins"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"list of reporting plugins",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"changelog plugin"),(0,l.kt)("li",{parentName:"ul"},"changes plugin"),(0,l.kt)("li",{parentName:"ul"},"checkstyle plugin"),(0,l.kt)("li",{parentName:"ul"},"doap plugin"),(0,l.kt)("li",{parentName:"ul"},"docck plugin"),(0,l.kt)("li",{parentName:"ul"},"javadoc plugin"),(0,l.kt)("li",{parentName:"ul"},"jdeps plugin"),(0,l.kt)("li",{parentName:"ul"},"jxr plugin"),(0,l.kt)("li",{parentName:"ul"},"linkcheck plugin"),(0,l.kt)("li",{parentName:"ul"},"pmd plugin"),(0,l.kt)("li",{parentName:"ul"},"project-info-reports plugin"),(0,l.kt)("li",{parentName:"ul"},"surefire-report plugin"))),(0,l.kt)("li",{parentName:"ul"},"example of using a plugin and goal in the terminal",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"plugin: javadoc, goal: javadoc",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"javadoc auto saves report in ",(0,l.kt)("inlineCode",{parentName:"li"},"target/site/apidocs/")," directory"),(0,l.kt)("li",{parentName:"ul"},"launch the ",(0,l.kt)("inlineCode",{parentName:"li"},"index.html")," file to view generated report",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn javadoc:javadoc")))))))),(0,l.kt)("h3",{id:"tools-plugins"},"Tools plugins"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"list of tools plugins",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"antrun, artifact, archetype, assembly, dependency, enforcer, gpg, help, invoker, jarsigner, jdeprscan, patch, pdf, plugin, release, remote-resources, scm, scm-publish, scripting, stage, toolchains, wrapper"))),(0,l.kt)("li",{parentName:"ul"},"use help to find out more about a plugin",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"example: archetype",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn help:describe -DgroupId=org.apache.maven.plugins -DartifactId=maven-archetype-plugin")))))),(0,l.kt)("h2",{id:"create-a-project-with-maven"},"Create a project with Maven"),(0,l.kt)("h3",{id:"sample-program"},"Sample program"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"mvn archetype:generate -DgroupId=com.projectname -DartifactId=appname -DarchetypeArtifactId=maven-archetype-quickstart -DInteractiveMode=false")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"View the full pom file contents",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"in the same directory where the ",(0,l.kt)("inlineCode",{parentName:"li"},"pom.xml")," file is located at",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn help:effective-pom"))))),(0,l.kt)("li",{parentName:"ul"},"install the all dependencies and plugins",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn install"),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},"if a compilation error were to occur due to old version issue, add the following into the ",(0,l.kt)("inlineCode",{parentName:"li"},"pom.xml")," file, just above the ",(0,l.kt)("inlineCode",{parentName:"li"},"dependencies")," tag",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<properties>\n  <maven.compiler.source>18</maven.compiler.source>\n  <maven.compiler.target>18</maven.compiler.target>\n</properties>\n")))))),(0,l.kt)("li",{parentName:"ul"},"run the app",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"method 1",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"-cp")," flag is used for class search path",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"it will search directories and look for ",(0,l.kt)("inlineCode",{parentName:"li"},"zip/jar")," files"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"appname-1.0-SNAPSHOT")," is correct if default version is used",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"java -cp target/appname-1.0-SNAPSHOT.jar com.projectname.App"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"appname-0.0.1")," is correct if ",(0,l.kt)("inlineCode",{parentName:"li"},"0.0.1")," version is set",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"java -cp target/appname-0.0.1.jar com.projectname.App"))))),(0,l.kt)("li",{parentName:"ul"},"method 2",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"maven-jar-plugin"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>3.0.2</version>\n        <configuration>\n          <archive>\n            <manifest>\n              <mainClass>com.domainname.appname.Main</mainClass>\n            </manifest>\n          </archive>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n  ...\n</project>\n")),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"java -jar target/appname-1.0-SNAPSHOT.jar"))))),(0,l.kt)("li",{parentName:"ul"},"method 3",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"exec-maven-plugin"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>exec-maven-plugin</artifactId>\n        <version>1.5.0</version>\n        <configuration>\n          <mainClass>com.dockerapp.App</mainClass>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n  ...\n</project>\n")),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn clean package exec:java"))))),(0,l.kt)("li",{parentName:"ul"},"method 4",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"run with docker using maven",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<project>\n  ...\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>3.0.2</version>\n        <configuration>\n          <archive>\n            <manifest>\n              <mainClass>com.domainname.appname.Main</mainClass>\n            </manifest>\n          </archive>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n    <profiles>\n      <profile>\n        <id>docker</id>\n        <build>\n          <plugins>\n            <plugin>\n              <groupId>io.fabric8</groupId>\n              <artifactId>docker-maven-plugin</artifactId>\n              <version>0.20.1</version>\n              <configuration>\n                <images>\n                  <image>\n                    <name>hellojava</name>\n                    <build>\n                      <from>openjdk:latest</from>\n                      <assembly>\n                        <descriptorRef>artifact</descriptorRef>\n                      </assembly>\n                      <cmd>java -jar maven/${project.name}-${project.version}.jar</cmd>\n                    </build>\n                    <run>\n                      <wait>\n                        <log>Hello World!</log>\n                      </wait>\n                    </run>\n                  </image>\n                </images>\n              </configuration>\n              <executions>\n                <execution>\n                  <id>docker:build</id>\n                  <phase>package</phase>\n                  <goals>\n                    <goal>build</goal>\n                  </goals>\n                </execution>\n                <execution>\n                  <id>docker:start</id>\n                  <phase>install</phase>\n                  <goals>\n                    <goal>run</goal>\n                    <goal>logs</goal>\n                  </goals>\n                </execution>\n              </executions>\n            </plugin>\n          </plugins>\n        </build>\n      </profile>\n    </profiles>\n  ...\n</project>\n"))),(0,l.kt)("li",{parentName:"ul"},"packaging",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn package -Pdocker"))),(0,l.kt)("li",{parentName:"ul"},"package and run",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn install -Pdocker")))))))),(0,l.kt)("h3",{id:"web-app"},"Web app"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"mvn archetype:generate -DgroupId=com.projectname -DartifactId=webappname -DarchetypeArtifactId=maven-archetype-webapp -DInteractiveMode=false")),(0,l.kt)("h2",{id:"unit-testing-with-maven"},"Unit testing with Maven"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Maven provides built-in support for unit testing"),(0,l.kt)("li",{parentName:"ul"},"JUnit is used to test app"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Test/")," directory is automatically created with a test app"),(0,l.kt)("li",{parentName:"ul"},"run test",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn test")))),(0,l.kt)("h2",{id:"add-resources-folder"},"Add resources folder"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"add resources folder to add files for inputs",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"can be ",(0,l.kt)("inlineCode",{parentName:"li"},"txt")," files"),(0,l.kt)("li",{parentName:"ul"},"use ",(0,l.kt)("inlineCode",{parentName:"li"},"Scanner")," library to read file in ",(0,l.kt)("inlineCode",{parentName:"li"},"resources")," folder"))),(0,l.kt)("li",{parentName:"ul"},"for ",(0,l.kt)("inlineCode",{parentName:"li"},"main")," folder",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"create ",(0,l.kt)("inlineCode",{parentName:"li"},"resources")," folder in ",(0,l.kt)("inlineCode",{parentName:"li"},"main")," folder"))),(0,l.kt)("li",{parentName:"ul"},"for ",(0,l.kt)("inlineCode",{parentName:"li"},"test")," folder",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"create ",(0,l.kt)("inlineCode",{parentName:"li"},"resources")," folder in ",(0,l.kt)("inlineCode",{parentName:"li"},"test"),"folder")))),(0,l.kt)("h2",{id:"packaging-app"},"Packaging App"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"packaging information is stored in ",(0,l.kt)("inlineCode",{parentName:"li"},"pom.xml")," file",(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<packaging>jar</packaging>\n"))),(0,l.kt)("li",{parentName:"ul"},"default is ",(0,l.kt)("inlineCode",{parentName:"li"},"jar")," if the type is omitted"),(0,l.kt)("li",{parentName:"ul"},"run package",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"also works with ",(0,l.kt)("inlineCode",{parentName:"li"},"mvn install"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"mvn test"),(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn package"))),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"clean")," optional command to remove issues with other Maven operations",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"mvn clean package"))),(0,l.kt)("li",{parentName:"ul"},"add ",(0,l.kt)("inlineCode",{parentName:"li"},"site")," optional command to generate ",(0,l.kt)("inlineCode",{parentName:"li"},"surefire")," documentation for us",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("inlineCode",{parentName:"p"},"mvn clean package site"))))))))}s.isMDXComponent=!0},20081:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/mavenProjectStructure-24ff117c7c759855c14312b7fb2064d5.png"},32290:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pomStructure-2274608905e4e7b6ad7fa33322f3c9db.png"}}]);