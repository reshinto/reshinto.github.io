"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[8080],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>u});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,y=d["".concat(p,".").concat(u)]||d[u]||f[u]||s;return r?n.createElement(y,o(o({ref:t},l),{},{components:r})):n.createElement(y,o({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},75857:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>f,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const s={},o="Example 2",i={unversionedId:"interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/example2",id:"interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/example2",title:"Example 2",description:"",source:"@site/docs/interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/example2.md",sourceDirName:"interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python",slug:"/interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/example2",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/example2",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/example2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/AbstractFactory/python/"},next:{title:"Swift Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/AbstractFactory/swift/"}},p={},c=[],l={toc:c};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"example-2"},"Example 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Shape2DInterface:\n    def draw(self): pass\n\n\nclass Shape3DInterface:\n    def build(self): pass\n\n\n# === concrete shape classes ===\nclass Circle(Shape2DInterface):\n    def draw(self):\n        print("Circle.draw")\n\n\nclass Square(Shape2DInterface):\n    def draw(self):\n        print("Square.draw")\n\n\nclass Sphere(Shape3DInterface):\n    def build(self):\n        print("Sphere.build")\n\n\nclass Cube(Shape3DInterface):\n    def build(self):\n        print("Cube.build")\n\n\n# === Abstract shape factory ===\nclass ShapeFactoryInterface:\n    def getShape(sides): pass\n\n\n# === Concrete shape factories ===\nclass Shape2DFactory(ShapeFactoryInterface):\n    @staticmethod\n    def getShape(sides):\n        if sides == 1:\n            return Circle()\n        if sides == 4:\n            return Square()\n        assert 0, "Bad 2D shape creation: shape not defined for " + sides + "sides"\n\n\nclass Shape3DFactory(ShapeFactoryInterface):\n    @staticmethod\n    def getShape(sides):\n        """here, sides refers to the number of faces"""\n        if sides == 1:\n            return Sphere()\n        if sides == 6:\n            return Cube()\n        assert 0, "Bad 3D shape creation: shape not defined for " + sides + "faces"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from AbstractFactory import Shape2DFactory, Shape3DFactory\n\ns2 = Shape2DFactory()\nprint(s2.getShape(1))\ns2.getShape(1).draw()\n\ns3 = Shape3DFactory()\nprint(s3.getShape(1))\ns3.getShape(1).build()\n")))}f.isMDXComponent=!0}}]);