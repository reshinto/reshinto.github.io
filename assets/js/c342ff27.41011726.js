"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[9184],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>s});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=r.createContext({}),c=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,l=m(e,["components","mdxType","originalType","parentName"]),u=c(t),s=a,v=u["".concat(d,".").concat(s)]||u[s]||p[s]||o;return t?r.createElement(v,i(i({ref:n},l),{},{components:t})):r.createElement(v,i({ref:n},l))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var m={};for(var d in n)hasOwnProperty.call(n,d)&&(m[d]=n[d]);m.originalType=e,m.mdxType="string"==typeof e?e:a,i[1]=m;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},47707:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>m,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={},i="Java Example",m={unversionedId:"interviewPrep/designPatterns/Behavioral_patterns/Command/java/readme",id:"interviewPrep/designPatterns/Behavioral_patterns/Command/java/readme",title:"Java Example",description:"- commands",source:"@site/docs/interviewPrep/designPatterns/Behavioral_patterns/Command/java/readme.md",sourceDirName:"interviewPrep/designPatterns/Behavioral_patterns/Command/java",slug:"/interviewPrep/designPatterns/Behavioral_patterns/Command/java/",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Command/java/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Behavioral_patterns/Command/java/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Go Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Command/go/"},next:{title:"JavaScript Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Command/javascript/"}},d={},c=[],l={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"java-example"},"Java Example"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"commands"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"commands/Command.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package refactoring_guru.command.example.commands;\n\nimport refactoring_guru.command.example.editor.Editor;\n\npublic abstract class Command {\n    public Editor editor;\n    private String backup;\n\n    Command(Editor editor) {\n        this.editor = editor;\n    }\n\n    void backup() {\n        backup = editor.textField.getText();\n    }\n\n    public void undo() {\n        editor.textField.setText(backup);\n    }\n\n    public abstract boolean execute();\n}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"commands/CommandHistory.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package refactoring_guru.command.example.commands;\n\nimport java.util.Stack;\n\npublic class CommandHistory {\n    private Stack<Command> history = new Stack<>();\n\n    public void push(Command c) {\n        history.push(c);\n    }\n\n    public Command pop() {\n        return history.pop();\n    }\n\n    public boolean isEmpty() { return history.isEmpty(); }\n}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"commands/CopyCommand.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package refactoring_guru.command.example.commands;\n\nimport refactoring_guru.command.example.editor.Editor;\n\npublic class CopyCommand extends Command {\n\n    public CopyCommand(Editor editor) {\n        super(editor);\n    }\n\n    @Override\n    public boolean execute() {\n        editor.clipboard = editor.textField.getSelectedText();\n        return false;\n    }\n}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"commands/CutCommand.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package refactoring_guru.command.example.commands;\n\nimport refactoring_guru.command.example.editor.Editor;\n\npublic class CutCommand extends Command {\n\n    public CutCommand(Editor editor) {\n        super(editor);\n    }\n\n    @Override\n    public boolean execute() {\n        if (editor.textField.getSelectedText().isEmpty()) return false;\n\n        backup();\n        String source = editor.textField.getText();\n        editor.clipboard = editor.textField.getSelectedText();\n        editor.textField.setText(cutString(source));\n        return true;\n    }\n\n    private String cutString(String source) {\n        String start = source.substring(0, editor.textField.getSelectionStart());\n        String end = source.substring(editor.textField.getSelectionEnd());\n        return start + end;\n    }\n}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"commands/PasteCommand.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package refactoring_guru.command.example.commands;\n\nimport refactoring_guru.command.example.editor.Editor;\n\npublic class PasteCommand extends Command {\n\n    public PasteCommand(Editor editor) {\n        super(editor);\n    }\n\n    @Override\n    public boolean execute() {\n        if (editor.clipboard == null || editor.clipboard.isEmpty()) return false;\n\n        backup();\n        editor.textField.insert(editor.clipboard, editor.textField.getCaretPosition());\n        return true;\n    }\n}\n"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"editor/Editor.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'package refactoring_guru.command.example.editor;\n\nimport refactoring_guru.command.example.commands.*;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class Editor {\n    public JTextArea textField;\n    public String clipboard;\n    private CommandHistory history = new CommandHistory();\n\n    public void init() {\n        JFrame frame = new JFrame("Text editor (type & use buttons, Luke!)");\n        JPanel content = new JPanel();\n        frame.setContentPane(content);\n        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n        content.setLayout(new BoxLayout(content, BoxLayout.Y_AXIS));\n        textField = new JTextArea();\n        textField.setLineWrap(true);\n        content.add(textField);\n        JPanel buttons = new JPanel(new FlowLayout(FlowLayout.CENTER));\n        JButton ctrlC = new JButton("Ctrl+C");\n        JButton ctrlX = new JButton("Ctrl+X");\n        JButton ctrlV = new JButton("Ctrl+V");\n        JButton ctrlZ = new JButton("Ctrl+Z");\n        Editor editor = this;\n        ctrlC.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                executeCommand(new CopyCommand(editor));\n            }\n        });\n        ctrlX.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                executeCommand(new CutCommand(editor));\n            }\n        });\n        ctrlV.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                executeCommand(new PasteCommand(editor));\n            }\n        });\n        ctrlZ.addActionListener(new ActionListener() {\n            @Override\n            public void actionPerformed(ActionEvent e) {\n                undo();\n            }\n        });\n        buttons.add(ctrlC);\n        buttons.add(ctrlX);\n        buttons.add(ctrlV);\n        buttons.add(ctrlZ);\n        content.add(buttons);\n        frame.setSize(450, 200);\n        frame.setLocationRelativeTo(null);\n        frame.setVisible(true);\n    }\n\n    private void executeCommand(Command command) {\n        if (command.execute()) {\n            history.push(command);\n        }\n    }\n\n    private void undo() {\n        if (history.isEmpty()) return;\n\n        Command command = history.pop();\n        if (command != null) {\n            command.undo();\n        }\n    }\n}\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Demo.java"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},"package refactoring_guru.command.example;\n\nimport refactoring_guru.command.example.editor.Editor;\n\npublic class Demo {\n    public static void main(String[] args) {\n        Editor editor = new Editor();\n        editor.init();\n    }\n}\n")))))}p.isMDXComponent=!0}}]);