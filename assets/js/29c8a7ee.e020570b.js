"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[55636],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>d});var t=n(67294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},p=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),f=s(n),d=i,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||a;return n?t.createElement(m,l(l({ref:r},p),{},{components:n})):t.createElement(m,l({ref:r},p))}));function d(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=f;var o={};for(var c in r)hasOwnProperty.call(r,c)&&(o[c]=r[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},38725:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var t=n(83117),i=(n(67294),n(3905));const a={},l="Python Example",o={unversionedId:"interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python/readme",id:"interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python/readme",title:"Python Example",description:"Violate SRP",source:"@site/docs/interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python/readme.md",sourceDirName:"interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python",slug:"/interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python/",permalink:"/docs/interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/python/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JavaScript Example",permalink:"/docs/interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/javascript/"},next:{title:"TypeScript Example",permalink:"/docs/interviewPrep/design_principles/SOLID/SingleResponsibilityPrinciple/typescript/"}},c={},s=[{value:"Violate SRP",id:"violate-srp",level:2},{value:"Pass SRP",id:"pass-srp",level:2}],p={toc:s};function u(e){let{components:r,...n}=e;return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"python-example"},"Python Example"),(0,i.kt)("h2",{id:"violate-srp"},"Violate SRP"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'class CalorieTracker:\n    def __init__(self, max_calories):\n        self.max_calories = max_calories\n        self.current_calories = 0\n\n    # 1st reason to change: how we track the calories\n    def track_calories(self, calorie_count):\n        self.current_calories += calorie_count\n        if self.current_calories > self.max_calories:\n          self.log_calorie_surplus()\n\n    # 2nd reason to change: how we log the calories\n    def log_calorie_surplus(self):\n        print("Max calories exceeded")\n\n\ncalorie_tracker = CalorieTracker(2000)\ncalorie_tracker.track_calories(500)\ncalorie_tracker.track_calories(1000)\ncalorie_tracker.track_calories(700)\n')),(0,i.kt)("h2",{id:"pass-srp"},"Pass SRP"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def log_message(message):\n    print(message)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from logger import log_message\n\nclass CalorieTracker:\n    def __init__(self, max_calories):\n        self.max_calories = max_calories\n        self.current_calories = 0\n\n    def track_calories(self, calorie_count):\n        self.current_calories += calorie_count\n        if self.current_calories > self.max_calories:\n          log_message("Max calories exceeded")\n\n\ncalorie_tracker = CalorieTracker(2000)\ncalorie_tracker.track_calories(500)\ncalorie_tracker.track_calories(1000)\ncalorie_tracker.track_calories(700)\n')))}u.isMDXComponent=!0}}]);