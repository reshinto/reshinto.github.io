"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[94809],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},74429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=n(83117),a=(n(67294),n(3905));const o={},i="Go Example",p={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Proxy/go/readme",id:"interviewPrep/designPatterns/Structural_patterns/Proxy/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Proxy/go",slug:"/interviewPrep/designPatterns/Structural_patterns/Proxy/go/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/java/"}},s={},l=[],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"go-example"},"Go Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype application struct {\n}\n\nfunc (a *application) handleRequest(url, method string) (int, string) {\n    if url == "/app/status" && method == "GET" {\n        return 200, "Ok"\n    }\n\n    if url == "/create/user" && method == "POST" {\n        return 201, "User Created"\n    }\n    return 404, "Not Ok"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype nginx struct {\n    application       *application\n    maxAllowedRequest int\n    rateLimiter       map[string]int\n}\n\nfunc newNginxServer() *nginx {\n    return &nginx{\n        application:       &application{},\n        maxAllowedRequest: 2,\n        rateLimiter:       make(map[string]int),\n    }\n}\n\nfunc (n *nginx) handleRequest(url, method string) (int, string) {\n    allowed := n.checkRateLimiting(url)\n    if !allowed {\n        return 403, "Not Allowed"\n    }\n    return n.application.handleRequest(url, method)\n}\n\nfunc (n *nginx) checkRateLimiting(url string) bool {\n    if n.rateLimiter[url] == 0 {\n        n.rateLimiter[url] = 1\n    }\n    if n.rateLimiter[url] > n.maxAllowedRequest {\n        return false\n    }\n    n.rateLimiter[url] = n.rateLimiter[url] + 1\n    return true\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype server interface {\n    handleRequest(string, string) (int, string)\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n\n    nginxServer := newNginxServer()\n    appStatusURL := "/app/status"\n    createuserURL := "/create/user"\n\n    httpCode, body := nginxServer.handleRequest(appStatusURL, "GET")\n    fmt.Printf("\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n", appStatusURL, httpCode, body)\n\n    httpCode, body = nginxServer.handleRequest(appStatusURL, "GET")\n    fmt.Printf("\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n", appStatusURL, httpCode, body)\n\n    httpCode, body = nginxServer.handleRequest(appStatusURL, "GET")\n    fmt.Printf("\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n", appStatusURL, httpCode, body)\n\n    httpCode, body = nginxServer.handleRequest(createuserURL, "POST")\n    fmt.Printf("\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n", appStatusURL, httpCode, body)\n\n    httpCode, body = nginxServer.handleRequest(createuserURL, "GET")\n    fmt.Printf("\\nUrl: %s\\nHttpCode: %d\\nBody: %s\\n", appStatusURL, httpCode, body)\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Url: /app/status\nHttpCode: 200\nBody: Ok\n\nUrl: /app/status\nHttpCode: 200\nBody: Ok\n\nUrl: /app/status\nHttpCode: 403\nBody: Not Allowed\n\nUrl: /app/status\nHttpCode: 201\nBody: User Created\n\nUrl: /app/status\nHttpCode: 404\nBody: Not Ok\n")))}c.isMDXComponent=!0}}]);