"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[56242],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>g});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(r),g=a,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||i;return r?t.createElement(m,o(o({ref:n},p),{},{components:r})):t.createElement(m,o({ref:n},p))}));function g(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},88736:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var t=r(83117),a=(r(67294),r(3905));const i={},o="Go Example",c={unversionedId:"interviewPrep/designPatterns/Behavioral_patterns/Visitor/go/readme",id:"interviewPrep/designPatterns/Behavioral_patterns/Visitor/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Behavioral_patterns/Visitor/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Behavioral_patterns/Visitor/go",slug:"/interviewPrep/designPatterns/Behavioral_patterns/Visitor/go/",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Visitor/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Behavioral_patterns/Visitor/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Visitor/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Visitor/java/"}},l={},s=[],p={toc:s};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"go-example"},"Go Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n)\n\ntype areaCalculator struct {\n    area int\n}\n\nfunc (a *areaCalculator) visitForSquare(s *square) {\n    // Calculate area for square.\n    // Then assign in to the area instance variable.\n    fmt.Println("Calculating area for square")\n}\n\nfunc (a *areaCalculator) visitForCircle(s *circle) {\n    fmt.Println("Calculating area for circle")\n}\nfunc (a *areaCalculator) visitForrectangle(s *rectangle) {\n    fmt.Println("Calculating area for rectangle")\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype circle struct {\n    radius int\n}\n\nfunc (c *circle) accept(v visitor) {\n    v.visitForCircle(c)\n}\n\nfunc (c *circle) getType() string {\n    return "Circle"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype middleCoordinates struct {\n    x int\n    y int\n}\n\nfunc (a *middleCoordinates) visitForSquare(s *square) {\n    // Calculate middle point coordinates for square.\n    // Then assign in to the x and y instance variable.\n    fmt.Println("Calculating middle point coordinates for square")\n}\n\nfunc (a *middleCoordinates) visitForCircle(c *circle) {\n    fmt.Println("Calculating middle point coordinates for circle")\n}\nfunc (a *middleCoordinates) visitForrectangle(t *rectangle) {\n    fmt.Println("Calculating middle point coordinates for rectangle")\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype rectangle struct {\n    l int\n    b int\n}\n\nfunc (t *rectangle) accept(v visitor) {\n    v.visitForrectangle(t)\n}\n\nfunc (t *rectangle) getType() string {\n    return "rectangle"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype shape interface {\n    getType() string\n    accept(visitor)\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype square struct {\n    side int\n}\n\nfunc (s *square) accept(v visitor) {\n    v.visitForSquare(s)\n}\n\nfunc (s *square) getType() string {\n    return "Square"\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype visitor interface {\n    visitForSquare(*square)\n    visitForCircle(*circle)\n    visitForrectangle(*rectangle)\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n    square := &square{side: 2}\n    circle := &circle{radius: 3}\n    rectangle := &rectangle{l: 2, b: 3}\n\n    areaCalculator := &areaCalculator{}\n\n    square.accept(areaCalculator)\n    circle.accept(areaCalculator)\n    rectangle.accept(areaCalculator)\n\n    fmt.Println()\n    middleCoordinates := &middleCoordinates{}\n    square.accept(middleCoordinates)\n    circle.accept(middleCoordinates)\n    rectangle.accept(middleCoordinates)\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Calculating area for square\nCalculating area for circle\nCalculating area for rectangle\n\nCalculating middle point coordinates for square\nCalculating middle point coordinates for circle\nCalculating middle point coordinates for rectangle\n")))}u.isMDXComponent=!0}}]);