"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[8699],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(g,o(o({ref:t},p),{},{components:r})):n.createElement(g,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},24196:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={},o="Gamma Categorization",l={unversionedId:"interviewPrep/designPatterns/gamma_categorization",id:"interviewPrep/designPatterns/gamma_categorization",title:"Gamma Categorization",description:"- Design patterns are typically split into 3 categories",source:"@site/docs/interviewPrep/designPatterns/gamma_categorization.md",sourceDirName:"interviewPrep/designPatterns",slug:"/interviewPrep/designPatterns/gamma_categorization",permalink:"/docs/interviewPrep/designPatterns/gamma_categorization",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/gamma_categorization.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DESIGN PATTERNS: ELEMENTS OF REUSABLE OBJECT-ORIENTED SOFTWARE",permalink:"/docs/interviewPrep/designPatterns/design_pattern_introduction"},next:{title:"Introduction",permalink:"/docs/interviewPrep/system_design/01Introduction/"}},s={},c=[{value:"Creational Patterns",id:"creational-patterns",level:2},{value:"Structural Patterns",id:"structural-patterns",level:2},{value:"Behavioral Patterns",id:"behavioral-patterns",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"gamma-categorization"},"Gamma Categorization"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Design patterns are typically split into 3 categories",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"this is called Gamma Categorization after Erich Gamma, one of GoF authors")))),(0,a.kt)("h2",{id:"creational-patterns"},"Creational Patterns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"deal with creation (construction) of objects"),(0,a.kt)("li",{parentName:"ul"},"explicit (calling an constructor) vs implicit (Dependency Injection, reflection, etc.)"),(0,a.kt)("li",{parentName:"ul"},"wholesale (single statement) vs piecewise (step by step)")),(0,a.kt)("h2",{id:"structural-patterns"},"Structural Patterns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"concerned with the structure (eg class members)"),(0,a.kt)("li",{parentName:"ul"},"many patterns are wrappers that mimic the underlying class interface"),(0,a.kt)("li",{parentName:"ul"},"stress the importance of good API design")),(0,a.kt)("h2",{id:"behavioral-patterns"},"Behavioral Patterns"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"they are all different, no central theme"),(0,a.kt)("li",{parentName:"ul"},"using completely different object oriented mechanisms, so will have some overlap"),(0,a.kt)("li",{parentName:"ul"},"generally most of the behavioral design patterns are unique in their approach",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"it solves a problem in a particular way")))))}u.isMDXComponent=!0}}]);