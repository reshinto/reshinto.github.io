"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[97133],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),y=a,h=m["".concat(s,".").concat(y)]||m[y]||p[y]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7457:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(83117),a=(r(67294),r(3905));const o={},i="Asynchronous",l={unversionedId:"interviewPrep/concurrency_parallel_programming/asynchronous/readme",id:"interviewPrep/concurrency_parallel_programming/asynchronous/readme",title:"Asynchronous",description:"JavaScript / NodeJS",source:"@site/docs/interviewPrep/concurrency_parallel_programming/asynchronous/readme.md",sourceDirName:"interviewPrep/concurrency_parallel_programming/asynchronous",slug:"/interviewPrep/concurrency_parallel_programming/asynchronous/",permalink:"/docs/interviewPrep/concurrency_parallel_programming/asynchronous/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/concurrency_parallel_programming/asynchronous/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Three Number Sum",permalink:"/docs/interviewPrep/codingTests/medium/arrays/threeNumberSum"},next:{title:"Threads",permalink:"/docs/interviewPrep/concurrency_parallel_programming/multithread/"}},s={},c=[{value:"JavaScript / NodeJS",id:"javascript--nodejs",level:2},{value:"Promises",id:"promises",level:3},{value:"Async",id:"async",level:3},{value:"async library",id:"async-library",level:4}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"asynchronous"},"Asynchronous"),(0,a.kt)("h2",{id:"javascript--nodejs"},"JavaScript / NodeJS"),(0,a.kt)("h3",{id:"promises"},"Promises"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use promises whenever you are using asynchronous or blocking code"),(0,a.kt)("li",{parentName:"ul"},"resolve maps to then and reject maps to catch for all practical purposes"),(0,a.kt)("li",{parentName:"ul"},"Make sure to write both .catch and .then methods for all the promises"),(0,a.kt)("li",{parentName:"ul"},"If something needs to be done in both cases use finally"),(0,a.kt)("li",{parentName:"ul"},"We only get one shot at mutating each promise"),(0,a.kt)("li",{parentName:"ul"},"We can add multiple handlers to a single promise"),(0,a.kt)("li",{parentName:"ul"},"The return type of all the methods in the Promise object, regardless of whether they are static methods or prototype methods, is again\na Promise"),(0,a.kt)("li",{parentName:"ul"},"In Promise.all, the order of the promises are maintained in the values variable, irrespective of which promise was first resolved")),(0,a.kt)("h3",{id:"async"},"Async"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"async functions return a promise"),(0,a.kt)("li",{parentName:"ul"},"async functions use an implicit Promise to return results",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Even if you don\u2019t return a promise explicitly, the async function makes sure that your code is passed through a promise"))),(0,a.kt)("li",{parentName:"ul"},"await blocks the code execution within the async function, of which it (await statement) is a part"),(0,a.kt)("li",{parentName:"ul"},"There can be multiple await statements within a single async function"),(0,a.kt)("li",{parentName:"ul"},"When using async await, make sure you use try catch for error handling"),(0,a.kt)("li",{parentName:"ul"},"Be extra careful when using await within loops and iterators",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"You might fall into the trap of writing sequentially-executing code when it could have been easily done in parallel"))),(0,a.kt)("li",{parentName:"ul"},"await is always for a single Promise"),(0,a.kt)("li",{parentName:"ul"},"Promise creation starts the execution of asynchronous functionality"),(0,a.kt)("li",{parentName:"ul"},"await only blocks the code execution within the async function",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"It only makes sure that the next line is executed when the promise resolves"),(0,a.kt)("li",{parentName:"ul"},"So, if an asynchronous activity has already started, await will not have any effect on it")))),(0,a.kt)("h4",{id:"async-library"},"async library"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"npm i async")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'async.map(["foo.txt", "bar.txt"], fs.stat, (error, results) => {\n  console.log(results);\n});\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'async.parallel(\n  [\n    (callback) => {\n      setTimeout(callback, 1000);\n    },\n    (callback) => {\n      setTimeout(callback, 1000);\n    },\n  ],\n  (error, results) => {\n    console.log("I took 2 seconds.");\n  }\n);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'async.waterfall(\n  [\n    (callback) => {\n      setTimeout(callback, 1000);\n    },\n    (callback) => {\n      setTimeout(callback, 1000);\n    },\n  ],\n  (error, results) => {\n    console.log("I took 2 seconds.");\n  }\n);\n')))}p.isMDXComponent=!0}}]);