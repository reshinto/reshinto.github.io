"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[4755],{3905:(r,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>d});var t=n(67294);function a(r,e,n){return e in r?Object.defineProperty(r,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):r[e]=n,r}function o(r,e){var n=Object.keys(r);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(r);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.push.apply(n,t)}return n}function i(r){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(r,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(n,e))}))}return r}function s(r,e){if(null==r)return{};var n,t,a=function(r,e){if(null==r)return{};var n,t,a={},o=Object.keys(r);for(t=0;t<o.length;t++)n=o[t],e.indexOf(n)>=0||(a[n]=r[n]);return a}(r,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);for(t=0;t<o.length;t++)n=o[t],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(r,n)&&(a[n]=r[n])}return a}var c=t.createContext({}),l=function(r){var e=t.useContext(c),n=e;return r&&(n="function"==typeof r?r(e):i(i({},e),r)),n},p=function(r){var e=l(r.components);return t.createElement(c.Provider,{value:e},r.children)},y={inlineCode:"code",wrapper:function(r){var e=r.children;return t.createElement(t.Fragment,{},e)}},u=t.forwardRef((function(r,e){var n=r.components,a=r.mdxType,o=r.originalType,c=r.parentName,p=s(r,["components","mdxType","originalType","parentName"]),u=l(n),d=a,f=u["".concat(c,".").concat(d)]||u[d]||y[d]||o;return n?t.createElement(f,i(i({ref:e},p),{},{components:n})):t.createElement(f,i({ref:e},p))}));function d(r,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof r||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=r,s.mdxType="string"==typeof r?r:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},81812:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var t=n(87462),a=(n(67294),n(3905));const o={},i="Insertion Sort",s={unversionedId:"interviewPrep/codingTests/easy/sorting/insertionSort",id:"interviewPrep/codingTests/easy/sorting/insertionSort",title:"Insertion Sort",description:"Sample Input",source:"@site/docs/interviewPrep/codingTests/easy/sorting/insertionSort.md",sourceDirName:"interviewPrep/codingTests/easy/sorting",slug:"/interviewPrep/codingTests/easy/sorting/insertionSort",permalink:"/docs/interviewPrep/codingTests/easy/sorting/insertionSort",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/codingTests/easy/sorting/insertionSort.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Bubble Sort",permalink:"/docs/interviewPrep/codingTests/easy/sorting/bubbleSort"},next:{title:"Selection Sort",permalink:"/docs/interviewPrep/codingTests/easy/sorting/selectionSort"}},c={},l=[],p={toc:l};function y(r){let{components:e,...n}=r;return(0,a.kt)("wrapper",(0,t.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"insertion-sort"},"Insertion Sort"),(0,a.kt)("p",null,"Sample Input\n",(0,a.kt)("inlineCode",{parentName:"p"},"array = [8, 5, 2, 9, 5, 6, 3]"),"\nSample Output\n",(0,a.kt)("inlineCode",{parentName:"p"},"[2, 3, 5, 5, 6, 8, 9]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# solution 1\ndef insertionSort(array):\n  # Write your code here.\n  i = 0\n  while i < len(array) - 1:\n    for j in range(i + 1, -1, -1):\n      if j > 0 and array[j] < array[j - 1]:\n        array[j], array[j - 1] = array[j - 1], array[j]\n    i += 1\n  return array\n\n\n# solution 2\ndef insertionSort(array):\n  # Write your code here.\n  for i in range(1, len(array)):\n  j = i\n  while j > 0 and array[j] < array[j - 1]:\n    array[j], array[j-1] = array[j-1], array[j]\n    j -= 1\n  return array\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// solution 1\nfunction insertionSort(array) {\n  // Write your code here.\n  let i = 0;\n  while (i < array.length - 1) {\n    for (let j = i + 1; j >= 0; j--) {\n      if (j > 0 && array[j] < array[j - 1]) {\n        [array[j], array[j - 1]] = [array[j - 1], array[j]];\n      }\n    }\n    i++;\n  }\n  return array;\n}\n\n// solution 2\nfunction insertionSort(array) {\n  // Write your code here.\n  for (let i = 1; i < array.length; i++) {\n    let j = i;\n    while (j > 0 && array[j] < array[j - 1]) {\n      [array[j], array[j - 1]] = [array[j - 1], array[j]];\n      j--;\n    }\n  }\n  return array;\n}\n")))}y.isMDXComponent=!0}}]);