"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[3382],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),f=a,d=u["".concat(p,".").concat(f)]||u[f]||m[f]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},64125:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(83117),a=(r(67294),r(3905));const o={},i="Example 2",l={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Bridge/python/example2",id:"interviewPrep/designPatterns/Structural_patterns/Bridge/python/example2",title:"Example 2",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Bridge/python/example2.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Bridge/python",slug:"/interviewPrep/designPatterns/Structural_patterns/Bridge/python/example2",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Bridge/python/example2",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Bridge/python/example2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Bridge/python/"},next:{title:"Swift Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Bridge/swift/"}},p={},c=[],s={toc:c};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"example-2"},"Example 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class BlueConcreteImplementation:\n    def log(self):\n        return "blue"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class RedConcreteImplementation:\n    def log(self):\n        return "red"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class ShapeAbstract:\n    def __init__(self, color):\n        self.color = color\n\n    def log_me(self):\n        print(f"I am a {self.color.log()} shape.")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from ShapeAbstract import ShapeAbstract\n\n\nclass TriangleAbstraction(ShapeAbstract):\n    def __init__(self, color):\n        super().__init__(color)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from ShapeAbstract import ShapeAbstract\n\n\nclass CircleRefinedAbstraction(ShapeAbstract):\n    def __init__(self, color):\n        super().__init__(color)\n\n    def log_me(self):\n        print(f"I am a {self.color.log()} circle.")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from CircleRefinedAbstraction import CircleRefinedAbstraction\nfrom TriangleAbstraction import TriangleAbstraction\nfrom RedConcreteImplementation import RedConcreteImplementation\nfrom BlueConcreteImplementation import BlueConcreteImplementation\n\n\nif __name__ == "__main__":\n    circle = CircleRefinedAbstraction(RedConcreteImplementation())\n    triangle = TriangleAbstraction(BlueConcreteImplementation())\n\n    circle.log_me()\n\n    triangle.log_me()\n')))}m.isMDXComponent=!0}}]);