"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[35560],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),d=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=d(e.components);return n.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(t),f=o,b=u["".concat(c,".").concat(f)]||u[f]||p[f]||a;return t?n.createElement(b,i(i({ref:r},s),{},{components:t})):n.createElement(b,i({ref:r},s))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},60571:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=t(83117),o=(t(67294),t(3905));const a={},i="Example 2",l={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Decorator/python/example2",id:"interviewPrep/designPatterns/Structural_patterns/Decorator/python/example2",title:"Example 2",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Decorator/python/example2.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Decorator/python",slug:"/interviewPrep/designPatterns/Structural_patterns/Decorator/python/example2",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Decorator/python/example2",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Decorator/python/example2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Decorator/python/"},next:{title:"Example 3",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Decorator/python/example3"}},c={},d=[],s={toc:d};function p(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"example-2"},"Example 2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'class WindowInterface:\n    def build(self): pass\n\n\nclass AbstractWindowDecorator(WindowInterface):\n    """\n    Maintains a reference to a window object and define an interface\n    that conforms to a window\'s interface.\n    """\n\n    def __init__(self, window):\n        self._window = window\n\n    def build(self): pass\n\n\nclass Window(WindowInterface):\n    def build(self):\n        print("Building window")\n\n\nclass BorderDecorator(AbstractWindowDecorator):\n    def add_border(self):\n        print("Adding border")\n\n    def build(self):\n        self.add_border()\n        self._window.build()\n\n\nclass VerticalSBDecorator(AbstractWindowDecorator):\n    def add_vertical_scroll_bar(self):\n        print("Adding vertical scroll bar")\n\n    def build(self):\n        self.add_vertical_scroll_bar()\n        self._window.build()\n\n\nclass HorizontalSBDecorator(AbstractWindowDecorator):\n    def add_horizontal_scroll_bar(self):\n        print("Adding horizontal scroll bar")\n\n    def build(self):\n        self.add_horizontal_scroll_bar()\n        self._window.build()\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from Decorator import Window, BorderDecorator, VerticalSBDecorator, HorizontalSBDecorator\n\n# Build a window\nw = Window()\nw.build()\n\n# Add a border to the window before building a window\nwb = BorderDecorator(w)\nwb.build()\n\n# Add a vertical scroll, then border before building a window\nwbv = VerticalSBDecorator(wb)\nwbv.build()\n\n# Add a horizontal scroll, then vertical scroll, then border before building a window\nbest_window = HorizontalSBDecorator(wbv)\nbest_window.build()\n")))}p.isMDXComponent=!0}}]);