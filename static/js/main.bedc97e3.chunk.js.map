{"version":3,"sources":["redux/utility.js","components/Card.js","pages/Home.js","utility.js","redux/actions/portfolioAction.js","redux/types.js","pages/New.js","Routes.js","redux/reducers/portfolioReducer.js","redux/store.js","components/headers/header.js","App.js","serviceWorker.js","index.js"],"names":["db","useStyles","makeStyles","theme","card","maxWidth","margin","spacing","media","height","Media","props","loading","p","classes","Card","className","CardHeader","title","Skeleton","width","style","marginBottom","projectName","subheader","tech","variant","CardMedia","image","imgURL","CardContent","Fragment","Typography","color","component","projectDescription","display","justifyContent","marginTop","target","rel","href","projectURL","deployedURL","CardComponent","Home","this","getPortfolios","portfolios","categoryArr","Object","keys","length","map","cat","i","key","textAlign","oldStr","strArr","split","newStrArr","forEach","strElement","push","charAt","toUpperCase","slice","join","capsStr","Grid","container","item","xs","justify","project","j","React","Component","mapDispatchToProps","dispatch","state","axios","get","then","res","type","payload","data","catch","err","console","log","connect","portfolioReducer","New","category","handleSubmit","e","preventDefault","projectsArr","newProject","undefined","addProject","alert","onChange","prop","setState","value","onSubmit","DialogContent","TextField","name","autoFocus","label","fullWidth","DialogActions","Button","post","Routes","exact","path","initialState","action","oldObject","updatedProperties","middleware","thunk","reducers","combineReducers","enhancer","composeWithDevTools","applyMiddleware","store","createStore","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bedc97e3.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\nexport const db = \"https://asia-east2-portfolio-server-65b51.cloudfunctions.net/api/portfolios\";\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LanguageIcon from '@material-ui/icons/Language';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n    margin: theme.spacing(2),\n  },\n  media: {\n    height: 190,\n  },\n}));\n\nfunction Media(props) {\n  const { loading = false, p } = props;\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        title={loading ? (\n          <Skeleton\n            height={10} width=\"80%\" style={{marginBottom: 6 }} />\n        ) : p.projectName}\n        subheader={loading ? (\n          <Skeleton height={10} width=\"40%\" />\n        ) : (\n          `Built with ${p.tech}`\n        )}\n      />\n      {loading ? (\n        <Skeleton variant=\"rect\" className={classes.media} />\n      ) : (\n        <CardMedia\n          className={classes.media}\n          image={p.imgURL}\n          title={p.projectName}\n        />\n      )}\n\n      <CardContent>\n        {loading ? (\n          <React.Fragment>\n            <Skeleton height={10} style={{ marginBottom: 6 }} />\n            <Skeleton height={10} width=\"80%\" />\n          </React.Fragment>\n        ) : (\n          <>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {p.projectDescription}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  marginTop: \"10px\"\n                }}\n            >\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={p.projectURL}\n                style={{color: \"black\"}}\n              >\n                <GitHubIcon />\n              </a>\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={p.deployedURL}\n                style={{color: \"black\"}}\n              >\n                <LanguageIcon />\n              </a>\n            </Typography>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nMedia.propTypes = {\n  loading: PropTypes.bool,\n};\n\nexport default function CardComponent(props) {\n  const {p} = props;\n  return (\n    <div>\n      <Media p={p}/>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPortfolios } from \"../redux/actions/portfolioAction\";\nimport {capsStr} from \"../utility\";\nimport Grid from '@material-ui/core/Grid';\nimport Card from \"../components/Card\";\n\nclass Home extends React.Component {\n  componentDidMount() {\n    this.props.getPortfolios();\n  }\n\n  render() {\n    const {portfolios} = this.props;\n    let categoryArr = [];\n    categoryArr = Object.keys(portfolios);\n    return (\n      <div>\n        {categoryArr.length !== 0 ? (\n          categoryArr.map((cat, i) => (\n            <div key={i}>\n              <h2 style={{textAlign: \"center\"}}>{capsStr(cat)}</h2>\n              <hr />\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Grid container justify=\"center\" spacing={2}>\n                    {portfolios[cat].map((project, j) => (\n                      <Card key={j} p={project} />\n                    ))}\n                  </Grid>\n              </Grid>\n            </Grid>\n            </div>\n          ))\n        ) : \"loading...\"}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    portfolios: state.portfolioReducer.portfolios,\n  };\n};\n\nconst mapDispatchToProps = {\n  getPortfolios: () => getPortfolios()\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","export const capsStr = (oldStr) => {\n  const strArr = oldStr.split(/(?=[A-Z])/);\n  const newStrArr = [];\n  strArr.forEach(strElement => {\n    newStrArr.push(strElement.charAt(0).toUpperCase() + strElement.slice(1));\n  });\n  return newStrArr.join(\" \");\n}\n","import axios from \"axios\";\nimport {db} from \"../utility\";\nimport * as actionTypes from \"../types\";\n\nexport const getPortfolios = () => (dispatch, state) => {\n  axios\n    .get(db)\n    .then(res => {\n      dispatch({\n        type: actionTypes.GET_PORTFOLIOS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const addProject = (\n  category,\n  projectsArr\n) => (dispatch, state) => {\n  const newProject = {};\n  newProject[`${category}`] = projectsArr;\n  axios\n    .post(\n      `${db}/update`,\n      newProject\n    )\n    .then(res => {\n      dispatch({\n        type: actionTypes.ADD_PROJECT,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n","export const GET_PORTFOLIOS = \"GET_PORTFOLIOS\";\nexport const ADD_PROJECT = \"ADD_PROJECT\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addProject } from \"../redux/actions/portfolioAction\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass New extends React.Component {\n  state = {\n    category: \"\",\n    projectName: \"\",\n    projectDescription: \"\",\n    projectURL: \"\",\n    tech: [],\n    imgURL: \"\",\n    deployedURL: \"\"\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const {\n      category,\n      projectName,\n      projectDescription,\n      projectURL,\n      tech,\n      imgURL,\n      deployedURL\n    } = this.state;\n    const {portfolios} = this.props;\n    let projectsArr;\n\n    if (portfolios[category] === undefined) {\n      projectsArr = [];\n    } else {\n      projectsArr = portfolios[category]\n    }\n    const newProject = {\n      projectName,\n      projectDescription,\n      projectURL,\n      tech,\n      imgURL,\n      deployedURL\n    }\n    projectsArr.push(newProject);\n    this.props.addProject(category, projectsArr);\n    alert(`${projectName} has been added successfully!`);\n  };\n\n  onChange = prop => e => this.setState({ [prop]: e.target.value });\n\n  render() {\n    const {\n      category,\n      projectName,\n      projectDescription,\n      projectURL,\n      tech,\n      imgURL,\n      deployedURL\n    } = this.state;\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"category\"\n              value={category}\n              onChange={this.onChange(\"category\")}\n              autoFocus\n              margin=\"dense\"\n              label=\"category\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"projectName\"\n              value={projectName}\n              onChange={this.onChange(\"projectName\")}\n              margin=\"dense\"\n              label=\"project name\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"projectDescription\"\n              value={projectDescription}\n              onChange={this.onChange(\"projectDescription\")}\n              margin=\"dense\"\n              label=\"project description\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"projectURL\"\n              value={projectURL}\n              onChange={this.onChange(\"projectURL\")}\n              margin=\"dense\"\n              label=\"project url\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"imgURL\"\n              value={imgURL}\n              onChange={this.onChange(\"imgURL\")}\n              margin=\"dense\"\n              label=\"image url\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"deployedURL\"\n              value={deployedURL}\n              onChange={this.onChange(\"deployedURL\")}\n              margin=\"dense\"\n              label=\"deployed url\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent>\n            <TextField\n              type=\"text\"\n              name=\"tech\"\n              value={tech}\n              onChange={this.onChange(\"tech\")}\n              margin=\"dense\"\n              label=\"technologies used\"\n              fullWidth\n            />\n          </DialogContent>\n\n          <DialogActions\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\"\n            }}\n          >\n            <Button color=\"primary\" type=\"submit\">\n              Add Project\n            </Button>\n          </DialogActions>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    portfolios: state.portfolioReducer.portfolios,\n  };\n};\n\nconst mapDispatchToProps = {\n  addProject: (category, projectsArr) => addProject(category, projectsArr)\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(New);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport New from \"./pages/New\";\n\nconst Routes = () => (\n  <>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/new\" component={New} />\n  </>\n);\n\nexport default Routes;\n","import * as actionTypes from \"../types\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  portfolios: {},\n};\n\nconst getPortfolios = (state, action) => {\n  return updateObject(state, {\n    portfolios: action.payload\n  });\n};\n\nconst portfolioReducer = (state=initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_PORTFOLIOS:\n      return getPortfolios(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default portfolioReducer;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk from \"redux-thunk\";\nimport portfolioReducer from \"./reducers/portfolioReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst reducers = combineReducers({\n  portfolioReducer,\n});\n\nconst enhancer = composeWithDevTools(applyMiddleware(...middleware));\nconst store = createStore(reducers, initialState, enhancer);\n\nexport default store;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <h1 style={{textAlign: \"center\"}}>\n      Welcome to Terence's portfolio website\n    </h1>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport store from \"./redux/store\";\nimport Header from \"./components/headers/header\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Header />\n        <Routes />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}