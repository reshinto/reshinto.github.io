"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[8037],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>y});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function u(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?u(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},u=Object.keys(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)t=u[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),m=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=m(e.components);return n.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,u=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=m(t),y=a,f=p["".concat(s,".").concat(y)]||p[y]||c[y]||u;return t?n.createElement(f,o(o({ref:r},l),{},{components:t})):n.createElement(f,o({ref:r},l))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var u=t.length,o=new Array(u);o[0]=p;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var m=2;m<u;m++)o[m]=t[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},54789:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>u,metadata:()=>i,toc:()=>m});var n=t(83117),a=(t(67294),t(3905));const u={},o="Two Number Sum",i={unversionedId:"interviewPrep/codingTests/easy/arrays/twoNumberSum",id:"interviewPrep/codingTests/easy/arrays/twoNumberSum",title:"Two Number Sum",description:"Write a function that takes in a non-empty array of distinct integers and an",source:"@site/docs/interviewPrep/codingTests/easy/arrays/twoNumberSum.md",sourceDirName:"interviewPrep/codingTests/easy/arrays",slug:"/interviewPrep/codingTests/easy/arrays/twoNumberSum",permalink:"/docs/interviewPrep/codingTests/easy/arrays/twoNumberSum",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/codingTests/easy/arrays/twoNumberSum.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tournament Winner",permalink:"/docs/interviewPrep/codingTests/easy/arrays/tournamentWinner"},next:{title:"Validate Subsequence",permalink:"/docs/interviewPrep/codingTests/easy/arrays/validateSubsequence"}},s={},m=[],l={toc:m};function c(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"two-number-sum"},"Two Number Sum"),(0,a.kt)("p",null,"Write a function that takes in a non-empty array of distinct integers and an\ninteger representing a target sum. If any two numbers in the input array sum\nup to the target sum, the function should return them in an array, in any\norder. If no two numbers sum up to the target sum, the function should return\nan empty array."),(0,a.kt)("p",null,"Note that the target sum has to be obtained by summing two different integers\nin the array; you can't add a single integer to itself in order to obtain the\ntarget sum."),(0,a.kt)("p",null,"You can assume that there will be at most one pair of numbers summing up to\nthe target sum."),(0,a.kt)("p",null,"Sample Input\n",(0,a.kt)("inlineCode",{parentName:"p"},"array = [3, 5, -4, 8, 11, 1, -1, 6]"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"targetSum = 10"),"\nSample Output\n",(0,a.kt)("inlineCode",{parentName:"p"},"[-1, 11]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# solution 1\ndef twoNumberSum(array, targetSum):\n  # Write your code here.\n  arrLength = len(array)\n  for i in range(arrLength - 1):\n    firstNum = array[i]\n    for j in range(i + 1, arrLength):\n      secondNum = array[j]\n      if firstNum + secondNum == targetSum:\n        return [firstNum, secondNum]\n  return []\n\n\n# solution 2\ndef twoNumberSum(array, targetSum):\n  # Write your code here.\n  nums = {}\n  for num in array:\n    potentialNum = targetSum - num\n    if potentialNum in nums:\n      return [potentialNum, num]\n    nums[num] = True\n  return []\n\n\n# solution 3\ndef twoNumberSum(array, targetSum):\n  # Write your code here.\n  array.sort()\n  left = 0\n  right = len(array) - 1\n  while left < right:\n    currentSum = array[left] + array[right]\n    if currentSum == targetSum:\n      return [array[left], array[right]]\n    elif currentSum < targetSum:\n      left += 1\n    elif currentSum > targetSum:\n      right -= 1\n  return []\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// solution 1\nfunction twoNumberSum(array, targetSum) {\n  // Write your code here.\n  for (let i = 0; i < array.length - 1; i++) {\n    const firstNum = array[i];\n    for (let j = i + 1; j < array.length; j++) {\n      const secondNum = array[j];\n      if (firstNum + secondNum === targetSum) {\n        return [firstNum, secondNum];\n      }\n    }\n  }\n  return [];\n}\n\n// solution 2\nfunction twoNumberSum(array, targetSum) {\n  // Write your code here.\n  const nums = {};\n  for (let i = 0; i < array.length; i++) {\n    let potentialNum = targetSum - array[i];\n    if (nums[potentialNum]) {\n      return [potentialNum, array[i]];\n    }\n    nums[array[i]] = true;\n  }\n  return [];\n}\n\n// solution 3\nfunction twoNumberSum(array, targetSum) {\n  // Write your code here.\n  array.sort((a, b) => a - b);\n  let left = 0;\n  let right = array.length - 1;\n  while (left < right) {\n    let currentSum = array[left] + array[right];\n    if (currentSum === targetSum) {\n      return [array[left], array[right]];\n    } else if (currentSum < targetSum) {\n      left++;\n    } else if (currentSum > targetSum) {\n      right--;\n    }\n  }\n  return [];\n}\n")))}c.isMDXComponent=!0}}]);