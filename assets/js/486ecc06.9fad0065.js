"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[7702],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),h=p(r),m=n,d=h["".concat(s,".").concat(m)]||h[m]||u[m]||i;return r?a.createElement(d,l(l({ref:t},c),{},{components:r})):a.createElement(d,l({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},73537:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const i={},l="Flyweight design pattern",o={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Flyweight/readme",id:"interviewPrep/designPatterns/Structural_patterns/Flyweight/readme",title:"Flyweight design pattern",description:"- It allows programs to support vast quantities of objects by keeping their memory consumption low",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Flyweight",slug:"/interviewPrep/designPatterns/Structural_patterns/Flyweight/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Facade design pattern",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Facade/"},next:{title:"Proxy design pattern",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/"}},s={},p=[{value:"Structure",id:"structure",level:2},{value:"When to use",id:"when-to-use",level:2}],c={toc:p};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"flyweight-design-pattern"},"Flyweight design pattern"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"It allows programs to support vast quantities of objects by keeping their memory consumption low"),(0,n.kt)("li",{parentName:"ul"},"it is achieved by sharing parts of object state between multiple objects",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"thus allowing it to save RAM by caching the same data used by different objects")))),(0,n.kt)("h2",{id:"structure"},"Structure"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"Flyweight",src:r(46604).Z,width:"1276",height:"860"})),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Flyweight pattern is merely an optimization."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Before applying it, make sure your program does have the RAM consumption problem related to having a massive number of similar objects in memory at the same time."),(0,n.kt)("li",{parentName:"ul"},"Make sure that this problem can\u2019t be solved in any other meaningful way."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Flyweight class contains the portion of the original object\u2019s state that can be shared between multiple objects."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The same flyweight object can be used in many different contexts."),(0,n.kt)("li",{parentName:"ul"},"The state stored inside a flyweight is called intrinsic."),(0,n.kt)("li",{parentName:"ul"},"The state passed to the flyweight\u2019s methods is called extrinsic."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Context class contains the extrinsic state, unique across all original objects."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"When a context is paired with one of the flyweight objects, it represents the full state of the original object."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Usually, the behavior of the original object remains in the flyweight class."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"In this case, whoever calls a flyweight\u2019s method must also pass appropriate bits of the extrinsic state into the method\u2019s parameters."),(0,n.kt)("li",{parentName:"ul"},"On the other hand, the behavior can be moved to the context class, which would use the linked flyweight merely as a data object."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Client calculates or stores the extrinsic state of flyweights."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"From the client\u2019s perspective, a flyweight is a template object which can be configured at runtime by passing some contextual data into parameters of its methods."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The Flyweight Factory manages a pool of existing flyweights."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"With the factory, clients don\u2019t create flyweights directly."),(0,n.kt)("li",{parentName:"ul"},"Instead, they call the factory, passing it bits of the intrinsic state of the desired flyweight."),(0,n.kt)("li",{parentName:"ul"},"The factory looks over previously created flyweights and either returns an existing one that matches search criteria or creates a new one if nothing is found.")))),(0,n.kt)("h2",{id:"when-to-use"},"When to use"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it has a single purpose, which is to minimize memory intake",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"thus it is not required if program doesn't struggle with a shortage of RAM")))))}u.isMDXComponent=!0},46604:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/flyweight-b6819aae273c1ba268ed4f6cb503687a.png"}}]);