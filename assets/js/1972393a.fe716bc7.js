"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[45733],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=u;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},43568:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(83117),o=(n(67294),n(3905));const i={},s="Windows Example",a={unversionedId:"Technologies/others/tox/windows/readme",id:"Technologies/others/tox/windows/readme",title:"Windows Example",description:"",source:"@site/docs/Technologies/others/tox/windows/readme.md",sourceDirName:"Technologies/others/tox/windows",slug:"/Technologies/others/tox/windows/",permalink:"/docs/Technologies/others/tox/windows/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/others/tox/windows/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mac Example",permalink:"/docs/Technologies/others/tox/mac/"},next:{title:"Husky",permalink:"/docs/Technologies/pre-hooks/javascript/husky/"}},c={},p=[],l={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"windows-example"},"Windows Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'[tox]\nenvlist = default\nisolated_build = True\nskip-missing-interpreter = True\nskipsdist=True\n\n[testenv]\ndeps =\n    -rrequirements.txt\n    -rtest-requirements.txt\nwhitelist_externals =\n    bash\n    cmd\n    copy\ncommands =\n    cmd /c "copy .env.example .env"\n    pre-commit install -f --hook-type pre-commit\n    pre-commit install --hook-type commit-msg\n    cmd /c "copy .\\.hooks\\pre-commit .git\\hooks\\pre-commit"\n    cmd /c "copy .\\.hooks\\commit-msg .git\\hooks\\commit-msg"\n\n[testenv:run]\nskip_install = true\ncommands =\n    uvicorn src.map:app --reload --header server:app-api --port 8080\n\n[testenv:test]\nskip_install = true\ncommands =\n    pylint app --exit-zero\n    pytest\n    coverage report\n\n[testenv:test-all]\nskip_install = true\ncommands =\n    pylint app --exit-zero\n    pytest\n    ./postman/run-api-tests.sh $0 $1 $2 {posargs}\n    coverage report\n')))}m.isMDXComponent=!0}}]);