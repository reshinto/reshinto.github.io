"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[7209],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>m});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},s=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=c(r),m=o,u=s["".concat(p,".").concat(m)]||s[m]||f[m]||i;return r?t.createElement(u,a(a({ref:n},d),{},{components:r})):t.createElement(u,a({ref:n},d))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=s;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}s.displayName="MDXCreateElement"},8305:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=r(83117),o=(r(67294),r(3905));const i={},a="Go Example",l={unversionedId:"interviewPrep/designPatterns/Creational_patterns/Prototype/go/readme",id:"interviewPrep/designPatterns/Creational_patterns/Prototype/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Creational_patterns/Prototype/go",slug:"/interviewPrep/designPatterns/Creational_patterns/Prototype/go/",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/java/"}},p={},c=[],d={toc:c};function f(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"go-example"},"Go Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype file struct {\n    name string\n}\n\nfunc (f *file) print(indentation string) {\n    fmt.Println(indentation + f.name)\n}\n\nfunc (f *file) clone() inode {\n    return &file{name: f.name + "_clone"}\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype folder struct {\n    children []inode\n    name      string\n}\n\nfunc (f *folder) print(indentation string) {\n    fmt.Println(indentation + f.name)\n    for _, i := range f.children {\n        i.print(indentation + indentation)\n    }\n}\n\nfunc (f *folder) clone() inode {\n    cloneFolder := &folder{name: f.name + "_clone"}\n    var tempChildren []inode\n    for _, i := range f.children {\n        copy := i.clone()\n        tempChildren = append(tempChildren, copy)\n    }\n    cloneFolder.children = tempChildren\n    return cloneFolder\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype inode interface {\n    print(string)\n    clone() inode\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n    file1 := &file{name: "File1"}\n    file2 := &file{name: "File2"}\n    file3 := &file{name: "File3"}\n\n    folder1 := &folder{\n        children: []inode{file1},\n        name:      "Folder1",\n    }\n\n    folder2 := &folder{\n        children: []inode{folder1, file2, file3},\n        name:      "Folder2",\n    }\n    fmt.Println("\\nPrinting hierarchy for Folder2")\n    folder2.print("  ")\n\n    cloneFolder := folder2.clone()\n    fmt.Println("\\nPrinting hierarchy for clone Folder")\n    cloneFolder.print("  ")\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Printing hierarchy for Folder2\n  Folder2\n    Folder1\n        File1\n    File2\n    File3\n\nPrinting hierarchy for clone Folder\n  Folder2_clone\n    Folder1_clone\n        File1_clone\n    File2_clone\n    File3_clone\n")))}f.isMDXComponent=!0}}]);