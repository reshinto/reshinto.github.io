"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[47326],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),l=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),y=l(t),f=a,m=y["".concat(o,".").concat(f)]||y[f]||u[f]||s;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=y;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<s;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},13987:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>l});var r=t(83117),a=(t(67294),t(3905));const s={},i="Python Example",p={unversionedId:"interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python/readme",id:"interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python/readme",title:"Python Example",description:"Violate DIP",source:"@site/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python/readme.md",sourceDirName:"interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python",slug:"/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python/",permalink:"/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/python/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JavaScript Example",permalink:"/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/javascript/"},next:{title:"TypeScript",permalink:"/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/typescript/"}},o={},l=[{value:"Violate DIP",id:"violate-dip",level:2},{value:"Pass DIP",id:"pass-dip",level:2}],c={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"python-example"},"Python Example"),(0,a.kt)("h2",{id:"violate-dip"},"Violate DIP"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# Violates the dependency inversion principle\n# store has to be rewritten to change the payment service from stripe to paypal\nclass Store:\n    def __init__(self, user):\n        # self.stripe = Stripe(user)\n        self.paypal = Paypal()\n        self.user = user\n\n    def purchase_bike(self, quantity):\n        # self.stripe.make_payment(200 * quantity * 100)\n        self.paypal.make_payment(self.user, 200 * quantity)\n\n    def purchase_helmet(self, quantity):\n        # self.stripe.make_payment(15 * quantity * 100)\n        self.paypal.make_payment(self.user, 15 * quantity)\n\n\nclass Stripe:\n    def __init__(self, user):\n        self.user = user\n\n    def make_payment(self, amount_in_cents):\n        print(\n            f"{self.user} made payment of ${amount_in_cents / 100} with Stripe",\n        )\n\n\nclass Paypal:\n    def make_payment(self, user, amount_in_dollars):\n        print(f"{user} made payment of ${amount_in_dollars} with Paypal")\n\n\nstore = Store("John")\nstore.purchase_bike(2)\nstore.purchase_helmet(2)\n')),(0,a.kt)("h2",{id:"pass-dip"},"Pass DIP"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# does not change regardless of payment services\nclass Store:\n    def __init__(self, payment_processor):\n        self.payment_processor = payment_processor\n\n    def purchase_bike(self, quantity):\n        self.payment_processor.pay(200 * quantity)\n\n    def purchase_helmet(self, quantity):\n        self.payment_processor.pay(15 * quantity)\n\n\n# behaves as a wrapper\nclass StripePaymentProcessor:\n    def __init__(self, user):\n        self.stripe = Stripe(user)\n\n    def pay(self, amount_in_dollars):\n        self.stripe.make_payment(amount_in_dollars * 100)\n\n\nclass Stripe:\n    def __init__(self, user):\n        self.user = user\n\n    def make_payment(self, amount_in_cents):\n        print(\n            f"{self.user} made payment of ${int(amount_in_cents / 100)} with Stripe",\n        )\n\n\n# behaves as a wrapper\nclass PaypalPaymentProcessor:\n    def __init__(self, user):\n        self.paypal = Paypal()\n        self.user = user\n\n    def pay(self, amount_in_dollars):\n        self.paypal.make_payment(self.user, amount_in_dollars)\n\n\nclass Paypal:\n    def make_payment(self, user, amount_in_dollars):\n        print(f"{user} made payment of $${amount_in_dollars} with Paypal")\n\n\nstore = Store(StripePaymentProcessor("John"))\nstore.purchase_bike(2)\nstore.purchase_helmet(2)\n\nstore2 = Store(PaypalPaymentProcessor("John2"))\nstore2.purchase_bike(2)\nstore2.purchase_helmet(2)\n')))}u.isMDXComponent=!0}}]);