"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[92727],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),a=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},s=function(e){var n=a(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=a(r),m=i,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?t.createElement(f,p(p({ref:n},s),{},{components:r})):t.createElement(f,p({ref:n},s))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,p=new Array(o);p[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,p[1]=l;for(var a=2;a<o;a++)p[a]=r[a];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},86699:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=r(83117),i=(r(67294),r(3905));const o={},p="Dependency Inversion Principle",l={unversionedId:"interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/readme",id:"interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/readme",title:"Dependency Inversion Principle",description:"- High level modules should not import anything from low-level modules",source:"@site/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/readme.md",sourceDirName:"interviewPrep/design_principles/SOLID/DependencyInversionPrinciple",slug:"/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/",permalink:"/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/design_principles/SOLID/DependencyInversionPrinciple/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TypeScript Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Proxy/typescript/"},next:{title:"Interface Segregation Principle",permalink:"/docs/interviewPrep/design_principles/SOLID/InterfaceSegregationPrinciple/"}},c={},a=[],s={toc:a};function d(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"dependency-inversion-principle"},"Dependency Inversion Principle"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"High level modules should not import anything from low-level modules",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"both should depend on abstractions",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g.: interfaces"))))),(0,i.kt)("li",{parentName:"ul"},"Abstractions should not depend on details",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"details (concrete implementations) should depend on abstractions")))))}d.isMDXComponent=!0}}]);