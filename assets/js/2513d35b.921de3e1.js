"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[1808],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,f=c["".concat(l,".").concat(d)]||c[d]||m[d]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},1858:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=r(83117),a=(r(67294),r(3905));const i={},o="CAP Theorem",s={unversionedId:"interviewPrep/system_design/cap_theorem",id:"interviewPrep/system_design/cap_theorem",title:"CAP Theorem",description:"- CAP theorem states that it is impossible for a distributed software system",source:"@site/docs/interviewPrep/system_design/cap_theorem.md",sourceDirName:"interviewPrep/system_design",slug:"/interviewPrep/system_design/cap_theorem",permalink:"/docs/interviewPrep/system_design/cap_theorem",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/system_design/cap_theorem.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SQL (Structured Query Language) vs. NoSQL",permalink:"/docs/interviewPrep/system_design/SQL_vs_NoSQL"},next:{title:"Consistent Hashing",permalink:"/docs/interviewPrep/system_design/consistent_hashing"}},l={},p=[],u={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cap-theorem"},"CAP Theorem"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"CAP theorem states that it is impossible for a distributed software system",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"to simultaneously provide more than 2 out of 3 of the following guarantees (CAP)",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Consistency, Availability, and Partition tolerance"))),(0,a.kt)("li",{parentName:"ul"},"When we design a distributed system, trading off among CAP is almost the first thing we want to consider"),(0,a.kt)("li",{parentName:"ul"},"CAP theorem says while designing a distributed system we can pick only 2 of the following three options: ### Consistency\n",(0,a.kt)("em",{parentName:"li"}," All nodes see the same data at the same time\n")," Consistency is achieved by updating several nodes before allowing further reads ### Availability\n",(0,a.kt)("em",{parentName:"li"}," Every request gets a response on success/failure\n")," Availability is achieved by replicating the data across different servers ### Partition tolerance\n",(0,a.kt)("em",{parentName:"li"}," The system continues to work despite message loss or partial failure\n")," A system that is partition-tolerant can sustain any amount of network failure\n",(0,a.kt)("em",{parentName:"li"}," that doesn\u2019t result in a failure of the entire network\n")," Data is sufficiently replicated across combinations of nodes ","*"," and networks to keep the system up through intermittent outages\n",(0,a.kt)("img",{parentName:"li",src:"https://github.com/reshinto/Basic_technologies_revision/raw/master/interviewPrep/system_design/images/cap_theorem.png",alt:"alt text",title:"CAP Theorem"})))),(0,a.kt)("li",{parentName:"ul"},"We cannot build a general data store that is",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"continually available, sequentially consistent, and tolerant to any partition failures"),(0,a.kt)("li",{parentName:"ul"},"We can only build a system that has any 2 of these three properties",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Because, to be consistent, all nodes should see the same set of updates in the same order",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"But if the network suffers a partition",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"updates in one partition might not make it to the other partitions",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"before a client reads from the out-of-date partition after having read from the up-to-date one",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The only thing that can be done to cope with this possibility is",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"to stop serving requests from the out-of-date partition",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"but then the service is no longer 100% available")))))))))))))))))))}m.isMDXComponent=!0}}]);