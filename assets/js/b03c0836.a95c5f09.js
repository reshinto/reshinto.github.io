"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[31883],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=i(n),d=a,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||p;return n?r.createElement(k,o(o({ref:t},c),{},{components:n})):r.createElement(k,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,o=new Array(p);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var i=2;i<p;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},94839:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>p,metadata:()=>l,toc:()=>i});var r=n(83117),a=(n(67294),n(3905));const p={},o="Enzyme",l={unversionedId:"Technologies/automatedTests/javascript/enzyme/readme",id:"Technologies/automatedTests/javascript/enzyme/readme",title:"Enzyme",description:"- url",source:"@site/docs/Technologies/automatedTests/javascript/enzyme/readme.md",sourceDirName:"Technologies/automatedTests/javascript/enzyme",slug:"/Technologies/automatedTests/javascript/enzyme/",permalink:"/docs/Technologies/automatedTests/javascript/enzyme/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/automatedTests/javascript/enzyme/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Java Spring Boot tests",permalink:"/docs/Technologies/automatedTests/java/springboot/"},next:{title:"Mocha & Chai",permalink:"/docs/Technologies/automatedTests/javascript/mochaAndChai"}},s={},i=[{value:"Setup",id:"setup",level:2},{value:"installation (does not include in the create-react-app)",id:"installation-does-not-include-in-the-create-react-app",level:3},{value:"file setup in xxx.test.js",id:"file-setup-in-xxxtestjs",level:3},{value:"prevent data-test attribute from displaying in production",id:"prevent-data-test-attribute-from-displaying-in-production",level:3},{value:"Tests",id:"tests",level:2}],c={toc:i};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"enzyme"},"Enzyme"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://enzymejs.github.io/enzyme/"},"url"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Creates virtual DOM for testing")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Allows testing without a browser")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Can search through DOM"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"have jQuery style selector"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Can simulate simple events")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Has shallow rendering"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"render components only 1 level deep"),(0,a.kt)("li",{parentName:"ul"},"render parent, but use placeholders for children",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"children components won't be rendered",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"allows cleaner & quicker testing"))))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Provides access to props & states"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"allows manipulation of values"),(0,a.kt)("li",{parentName:"ul"},"enable examining / testing for values")))),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("h3",{id:"installation-does-not-include-in-the-create-react-app"},"installation (does not include in the create-react-app)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"install the enzyme-adapter-react-version based on the react version you are using",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"npm i --save-dev ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ratehub/check-prop-types#readme"},"check-prop-types")," enzyme ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/FormidableLabs/enzyme-matchers/tree/master/packages/jest-enzyme#readme"},"jest-enzyme")," enzyme-adapter-react-16"))),(0,a.kt)("li",{parentName:"ul"},"or",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"yarn add --dev ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ratehub/check-prop-types#readme"},"check-prop-types")," enzyme ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/FormidableLabs/enzyme-matchers/tree/master/packages/jest-enzyme#readme"},"jest-enzyme")," enzyme-adapter-react-16")))),(0,a.kt)("h3",{id:"file-setup-in-xxxtestjs"},"file setup in xxx.test.js"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"remove the ",(0,a.kt)("inlineCode",{parentName:"li"},'import {render} from "@testing-library/react";'),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"this is because we will be using enzyme instead"))),(0,a.kt)("li",{parentName:"ul"},"import the following")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import Enzyme, {shallow} from "enzyme"; // Enzyme not required if configured in setupTests.js\nimport EnzymeAdapter from "enzyme-adapter-react-16"; // version depends on react version, only required if setupTests.js is not created\nimport checkPropTypes from "check-prop-types"; // only required if checking prop types\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Configure enzyme",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"doing this requires the following to be written in every test file")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"Enzyme.configure({adapter: new EnzymeAdapter()});\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"create a ",(0,a.kt)("inlineCode",{parentName:"li"},"setupTests.js")," file in the src directory to enable auto configuration",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"non create-react-apps must create a ",(0,a.kt)("inlineCode",{parentName:"li"},"jest.config.js")," file with the following configuration",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'module.exports = {\n  setupFilesAfterEnv: ["<rootDir>/src/setupTests.js"]\n}\n'))),(0,a.kt)("li",{parentName:"ul"},"once the following file has been configured, this fill will always run first before running the tests")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import Enzyme from "enzyme";\nimport EnzymeAdapter from "enzyme-adapter-react-16";\n\nEnzyme.configure({adapter: new EnzymeAdapter()});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a setup function to enable shallow rendering")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const setup = (props = {}, state = null) => {\n  return shallow(<App {...props} />);\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Enable default props and overriding")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const defaultProps = {success: false};\n\nconst setup = (props = {}, state = null) => {\n  const setupProps = {...defaultProps, ...props}; // ...props will overwrite defaultProps\n  return shallow(<App {...setupProps} />);\n};\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a function to find the component")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'export const findByTestAttr = (wrapper, val) => {\n  return wrapper.find(`[data-test="${val}"]`);\n};\n')),(0,a.kt)("h3",{id:"prevent-data-test-attribute-from-displaying-in-production"},"prevent data-test attribute from displaying in production"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"install the required library",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"npm i --save-dev ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/babel-plugin-react-remove-properties"},"babel-plugin-react-remove-properties")))),(0,a.kt)("li",{parentName:"ul"},"enable modifying of React settings",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"npm run eject"))),(0,a.kt)("li",{parentName:"ul"},"edit the babel settings in the package.json file")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'"babel": {\n  "env": {\n    "production": {\n      "plugins": [\n        ["react-remove-properties", {"properties": ["data-test"]}]\n      ]\n    }\n  },\n  "presets": ["react-app"]\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"build production",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"npm run build"))),(0,a.kt)("li",{parentName:"ul"},"install a static server to run the production code",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"npm i -g serve"))),(0,a.kt)("li",{parentName:"ul"},"run server",(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"serve -s build")))),(0,a.kt)("h2",{id:"tests"},"Tests"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"shallow rendering",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"useful to constrain yourself to testing a component as a unit"),(0,a.kt)("li",{parentName:"ul"},"ensure that your tests aren't indirectly asserting on behavior of child components")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("renders without crashing", () => {\n  const wrapper = shallow(<App />); // test fails if error is thrown\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"debug",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"returns DOM / HTML as a string of the wrapper for debugging purposes"),(0,a.kt)("li",{parentName:"ul"},"useful to print out to the console when tests are not passing when you expect them to")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("renders without crashing", () => {\n  const wrapper = shallow(<App />); // test fails if error is thrown\n  console.log(wrapper.debug());\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"render without error")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("renders without error", () => {\n  const wrapper = setup();\n  const appComponent = findByTestAttr(wrapper, "component-app");\n  expect(appComponent.length).toBe(1);\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"using beforeEach to reuse code for all tests inside a describe")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'describe("describe the tests purpose", () => {\n  let wrapper;\n  beforeEach(() => {\n    wrapper = setup();\n  });\n  test("test something", () => {\n    const appComponent = findByTestAttr(wrapper, "component-app");\n    expect(appComponent.length).toBe(1);\n  });\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"test initial state value")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("counter starts at 0", () => {\n  const wrapper = setup();\n  const initialCounterState = wrapper.state("counter"); // counter is the variable in the state\n  expect(initialCounterState).toBe(0);\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"test clicking of button & state change")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("clicking button increments counter display", () => {\n  const counter = 7;\n  const wrapper = setup(null, {counter});\n\n  // find button and click\n  const button = findByTestAttr(wrapper, "increment-button");\n  button.simulate("click");\n\n  // find display and test value\n  const counterDisplay = findByTestAttr(wrapper, "counter-display");\n  expect(counterDisplay.text()).toContain(counter + 1);\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"test props")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("renders no text when \'success\' prop is false", () => {\n  const wrapper = setup({success: false});\n  const component = findByTestAttr(wrapper, "component-app");\n  expect(component.text()).toBe("");\n});\n\ntest("renders non-empty message when \'success\' prop is true", () => {\n  const wrapper = setup({success: false});\n  const message = findByTestAttr(wrapper, "component-message");\n  expect(message.text().length).not.toBe(0);\n});\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"test prop types")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'test("does not throw warning with expected props", () => {\n  const exprectedProps = {success: false};\n  // replace ComponentName to the name of the component you are testing\n  const propError = checkPropTypes(\n    ComponentName.propTypes,\n    expectedProps,\n    "prop",\n    ComponentName.name\n  );\n  expect(propError).toBeUndefined();\n});\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'// can be refactored\nimport checkPropTypes from "check-prop-types";\n\nexport const checkProps = (component, conformingProps) => {\n  const propError = checkPropTypes(\n    component.propTypes,\n    conformingProps,\n    "prop",\n    component.name\n  );\n  expect(propError).toBeUndefined();\n};\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'// refactored to\ntest("does not throw warning with expected props", () => {\n  const exprectedProps = {success: false};\n  checkProps(Congrats, expectedProps);\n});\n')))}u.isMDXComponent=!0}}]);