"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[1952],{3905:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>d});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),s=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},p=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=o,y=u["".concat(c,".").concat(d)]||u[d]||m[d]||a;return n?t.createElement(y,i(i({ref:r},p),{},{components:n})):t.createElement(y,i({ref:r},p))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6444:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var t=n(7462),o=(n(7294),n(3905));const a={},i="Move Element To End",l={unversionedId:"interviewPrep/codingTests/medium/arrays/moveElementToEnd",id:"interviewPrep/codingTests/medium/arrays/moveElementToEnd",title:"Move Element To End",description:"You're given an array of integers and an integer. Write a function that moves",source:"@site/docs/interviewPrep/codingTests/medium/arrays/moveElementToEnd.md",sourceDirName:"interviewPrep/codingTests/medium/arrays",slug:"/interviewPrep/codingTests/medium/arrays/moveElementToEnd",permalink:"/docs/interviewPrep/codingTests/medium/arrays/moveElementToEnd",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/codingTests/medium/arrays/moveElementToEnd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Monotonic Array",permalink:"/docs/interviewPrep/codingTests/medium/arrays/monotonicArray"},next:{title:"Smallest Difference",permalink:"/docs/interviewPrep/codingTests/medium/arrays/smallestDifference"}},c={},s=[],p={toc:s};function m(e){let{components:r,...n}=e;return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"move-element-to-end"},"Move Element To End"),(0,o.kt)("p",null,"  You're given an array of integers and an integer. Write a function that moves\nall instances of that integer in the array to the end of the array and returns\nthe array."),(0,o.kt)("p",null,"  The function should perform this in place (i.e., it should mutate the input\narray) and doesn't need to maintain the order of the other integers."),(0,o.kt)("p",null,"  Sample Input\n",(0,o.kt)("inlineCode",{parentName:"p"},"array = [2, 1, 2, 2, 2, 3, 4, 2]"),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"toMove = 2")),(0,o.kt)("p",null,"  Sample Output\n",(0,o.kt)("inlineCode",{parentName:"p"},"[1, 3, 4, 2, 2, 2, 2, 2] // the numbers 1, 3, and 4 could be ordered differently")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def moveElementToEnd(array, toMove):\n  # Write your code here.\n  L = 0\n  R = len(array) - 1\n  while L < R:\n    v1 = array[L]\n    v2 = array[R]\n    if v1 == toMove and v2 != toMove:\n      array[L], array[R] = array[R], array[L]\n    if v1 != toMove:\n      L += 1\n    if v2 == toMove:\n      R -= 1\n  return array\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function moveElementToEnd(array, toMove) {\n  // Write your code here.\n  let L = 0;\n  let R = array.length - 1;\n  while (L < R) {\n    const v1 = array[L];\n    const v2 = array[R];\n    if (v1 === toMove && v2 !== toMove) {\n      [array[L], array[R]] = [array[R], array[L]];\n    }\n    if (v1 !== toMove) {\n      L += 1;\n    }\n    if (v2 === toMove) {\n      R -= 1;\n    }\n  }\n  return array;\n}\n")))}m.isMDXComponent=!0}}]);