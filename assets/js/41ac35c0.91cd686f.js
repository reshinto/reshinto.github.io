"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[68765],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,E=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(E,s(s({ref:t},u),{},{components:n})):r.createElement(E,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},12721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(83117),a=(n(67294),n(3905));const o={},s="Init Example",i={unversionedId:"Technologies/database/SQL/postgreSQL/example/init",id:"Technologies/database/SQL/postgreSQL/example/init",title:"Init Example",description:"",source:"@site/docs/Technologies/database/SQL/postgreSQL/example/init.md",sourceDirName:"Technologies/database/SQL/postgreSQL/example",slug:"/Technologies/database/SQL/postgreSQL/example/init",permalink:"/docs/Technologies/database/SQL/postgreSQL/example/init",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/database/SQL/postgreSQL/example/init.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PostgreSQL",permalink:"/docs/Technologies/database/SQL/postgreSQL/"},next:{title:"Queries Example",permalink:"/docs/Technologies/database/SQL/postgreSQL/example/queries"}},l={},c=[],u={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"init-example"},"Init Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE IF NOT EXISTS students (\n  student_id SERIAL NOT NULL UNIQUE PRIMARY KEY,\n  name VARCHAR(50) NOT NULL CHECK (name ~ '^([A-Za-z]|[0-9]){3,}$'),\n  surname VARCHAR(50) NOT NULL,\n  date_of_birth DATE,\n  phone_number INTEGER NOT NULL,\n  primary_skill VARCHAR(128) NOT NULL,\n  created_datetime TIMESTAMP NOT NULL DEFAULT now(),\n  updated_datetime TIMESTAMP NOT NULL DEFAULT now()\n);\n\nINSERT INTO students (name, surname, phone_number, primary_skill)\nSELECT\n  left(md5(random()::text), 50),\n  left(md5(random()::text), 50),\n  floor(random() * 9999999 + 80000000)::int,\n  left(md5(random()::text), 128)\nFROM generate_series(2, 100000) s(i);\n\nINSERT INTO students (student_id, name, surname, date_of_birth, phone_number, primary_skill)\nVALUES (100000, 'John', 'Doe', '1990-01-01', 89654321, 'Java');\n\n\nCREATE TABLE IF NOT EXISTS subjects (\n  subject_id SERIAL NOT NULL UNIQUE PRIMARY KEY,\n  subject_name VARCHAR(128) NOT NULL,\n  tutor VARCHAR(128) NOT NULL\n);\n\nINSERT INTO subjects (subject_name, tutor)\nSELECT\n  left(md5(random()::text), 128),\n  left(md5(random()::text), 128)\nFROM generate_series(2, 1000) s(i);\n\nINSERT INTO subjects (subject_id, subject_name, tutor)\nVALUES (1000, 'Programming', 'John Doe');\n\n\nCREATE TABLE IF NOT EXISTS exam_results (\n  exam_result_id SERIAL NOT NULL UNIQUE PRIMARY KEY,\n  student_id INTEGER NOT NULL REFERENCES students(student_id) ON DELETE CASCADE,\n  subject_id INTEGER NOT NULL REFERENCES subjects(subject_id) ON DELETE CASCADE,\n  mark float NOT NULL\n);\n\nINSERT INTO exam_results (student_id, subject_id, mark)\nSELECT\n  floor(random() * 99999 + 1)::int,\n  floor(random() * 999 + 1)::int,\n  random() * 10\nFROM generate_series(2, 1000000) s(i);\n\nINSERT INTO exam_results (exam_result_id, student_id, subject_id, mark)\nVALUES (1000000, 100000, 1000, 2);\n")))}m.isMDXComponent=!0}}]);