"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[54099],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,y=d["".concat(p,".").concat(f)]||d[f]||u[f]||i;return t?r.createElement(y,c(c({ref:n},s),{},{components:t})):r.createElement(y,c({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,c=new Array(i);c[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},60974:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(83117),o=(t(67294),t(3905));const i={},c="TypeScript",a={unversionedId:"interviewPrep/designPatterns/Creational_patterns/Prototype/typescript/readme",id:"interviewPrep/designPatterns/Creational_patterns/Prototype/typescript/readme",title:"TypeScript",description:"",source:"@site/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/typescript/readme.md",sourceDirName:"interviewPrep/designPatterns/Creational_patterns/Prototype/typescript",slug:"/interviewPrep/designPatterns/Creational_patterns/Prototype/typescript/",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/typescript/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/typescript/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Example 2",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Prototype/swift/example2"},next:{title:"Singleton",permalink:"/docs/interviewPrep/designPatterns/Creational_patterns/Singleton/"}},p={},l=[],s={toc:l};function u(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"typescript"},"TypeScript"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * Prototype Design Pattern\n *\n * Intent: Lets you copy existing objects without making your code dependent on\n * their classes.\n */\n\n/**\n * The example class that has cloning ability. We\'ll see how the values of field\n * with different types will be cloned.\n */\nclass Prototype {\n  public primitive: any;\n  public component: object;\n  public circularReference: ComponentWithBackReference;\n\n  public clone(): this {\n    const clone = Object.create(this);\n\n    clone.component = Object.create(this.component);\n\n    // Cloning an object that has a nested object with backreference\n    // requires special treatment. After the cloning is completed, the\n    // nested object should point to the cloned object, instead of the\n    // original object. Spread operator can be handy for this case.\n    clone.circularReference = {\n      ...this.circularReference,\n      prototype: {...this},\n    };\n\n    return clone;\n  }\n}\n\nclass ComponentWithBackReference {\n  public prototype;\n\n  constructor(prototype: Prototype) {\n    this.prototype = prototype;\n  }\n}\n\n/**\n * The client code.\n */\nfunction clientCode() {\n  const p1 = new Prototype();\n  p1.primitive = 245;\n  p1.component = new Date();\n  p1.circularReference = new ComponentWithBackReference(p1);\n\n  const p2 = p1.clone();\n  if (p1.primitive === p2.primitive) {\n    console.log(\n      "Primitive field values have been carried over to a clone. Yay!"\n    );\n  } else {\n    console.log("Primitive field values have not been copied. Booo!");\n  }\n  if (p1.component === p2.component) {\n    console.log("Simple component has not been cloned. Booo!");\n  } else {\n    console.log("Simple component has been cloned. Yay!");\n  }\n\n  if (p1.circularReference === p2.circularReference) {\n    console.log("Component with back reference has not been cloned. Booo!");\n  } else {\n    console.log("Component with back reference has been cloned. Yay!");\n  }\n\n  if (p1.circularReference.prototype === p2.circularReference.prototype) {\n    console.log(\n      "Component with back reference is linked to original object. Booo!"\n    );\n  } else {\n    console.log("Component with back reference is linked to the clone. Yay!");\n  }\n}\n\nclientCode();\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Primitive field values have been carried over to a clone. Yay!\nSimple component has been cloned. Yay!\nComponent with back reference has been cloned. Yay!\nComponent with back reference is linked to the clone. Yay!\n")))}u.isMDXComponent=!0}}]);