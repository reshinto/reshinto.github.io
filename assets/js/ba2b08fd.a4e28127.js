"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[44037],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>c});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=u(r),c=n,h=d["".concat(s,".").concat(c)]||d[c]||p[c]||l;return r?a.createElement(h,o(o({ref:t},m),{},{components:r})):a.createElement(h,o({ref:t},m))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var u=2;u<l;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3166:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=r(83117),n=(r(67294),r(3905));const l={},o="Leader Election",i={unversionedId:"interviewPrep/system_design/16LeaderElection/readme",id:"interviewPrep/system_design/16LeaderElection/readme",title:"Leader Election",description:"- a form of algorithmic democracy, is how servers in a distributed system chooses a master node",source:"@site/docs/interviewPrep/system_design/16LeaderElection/readme.md",sourceDirName:"interviewPrep/system_design/16LeaderElection",slug:"/interviewPrep/system_design/16LeaderElection/",permalink:"/docs/interviewPrep/system_design/16LeaderElection/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/system_design/16LeaderElection/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Rendezvous Hashing example",permalink:"/docs/interviewPrep/system_design/11Hashing/rendezvousHashingExample/"},next:{title:"Etcd leader election example",permalink:"/docs/interviewPrep/system_design/16LeaderElection/etcdExample/"}},s={},u=[{value:"When to use example",id:"when-to-use-example",level:2},{value:"Terms Used",id:"terms-used",level:2},{value:"Consensus Algorithm",id:"consensus-algorithm",level:3},{value:"Paxos &amp; Raft",id:"paxos--raft",level:4},{value:"Can also use another 3rd tools that implements Paxos &amp; Raft",id:"can-also-use-another-3rd-tools-that-implements-paxos--raft",level:4},{value:"How to use Etcd to implement your own simple leader election",id:"how-to-use-etcd-to-implement-your-own-simple-leader-election",level:4}],m={toc:u};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"leader-election"},"Leader Election"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a form of algorithmic democracy, is how servers in a distributed system chooses a master node"),(0,n.kt)("li",{parentName:"ul"},"in other words, it is the process by which nodes in a cluster (for instance, servers in a set of servers) elect a leader amongst them",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it is responsible for primary operations of the service that these nodes support"),(0,n.kt)("li",{parentName:"ul"},"when correctly implemented, leader election guarantees that all nodes in the cluster know which 1 is the leader at any given time"),(0,n.kt)("li",{parentName:"ul"},"can elect a new leader if the leader dies for whatever reason")))),(0,n.kt)("h2",{id:"when-to-use-example"},"When to use example"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"when you need to connect a third party service to a database",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you would need a service to connect them",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"problem would arise if this single machine or service fails"),(0,n.kt)("li",{parentName:"ul"},"solution would be to introduce redundancy, adding multiple servers",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a new problem would arise where we do not want to replicate sensitive requests like payments across multiple servers, such requests should only be done once"),(0,n.kt)("li",{parentName:"ul"},"solution is to use Leader Election",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"instead of having all servers to do the same thing, via leader election, the servers will elect the leader and only the leader would perform the sensitive request",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"if anything happens to the leader, a new leader will be elected from the rest of the servers and will take over"),(0,n.kt)("li",{parentName:"ul"},"the act of all servers to provide consensus to allow a server to become the leader is difficult to implement, which is something you do not do by yourself"),(0,n.kt)("li",{parentName:"ul"},"the consensus algorithm is used and applied for this case")))))))))))),(0,n.kt)("h2",{id:"terms-used"},"Terms Used"),(0,n.kt)("h3",{id:"consensus-algorithm"},"Consensus Algorithm"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a type of complex algorithms used to have multiple entities agree on a single data value",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"like who the leader is amongst a group of machines"),(0,n.kt)("li",{parentName:"ul"},"2 popular consensus algorithms are Paxos and Raft")))),(0,n.kt)("h4",{id:"paxos--raft"},"Paxos & Raft"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"when implemented correctly, allow for the synchronization of certain operations even in a distributed setting")),(0,n.kt)("h4",{id:"can-also-use-another-3rd-tools-that-implements-paxos--raft"},"Can also use another 3rd tools that implements Paxos & Raft"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Etcd or ZooKeeper",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"these tools aren't meant to be used for leader election but allows you to implement your own leader election a in very easy way"))),(0,n.kt)("li",{parentName:"ul"},"Etcd is a strongly consistent and highly available key-value store that's often used to implement leader election in a system",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"implements Raft consensus algorithm"))),(0,n.kt)("li",{parentName:"ul"},"ZooKeeper is a strongly consistent, highly available key-value store, often used to store important configuration or to perform leader election")),(0,n.kt)("h4",{id:"how-to-use-etcd-to-implement-your-own-simple-leader-election"},"How to use Etcd to implement your own simple leader election"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"have multiple servers communicate with Etcd with the key-value store"),(0,n.kt)("li",{parentName:"ul"},"at any given point of time, you would have 1 special key-value pair in the Etcd key-value store",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"that key-value pair would represent who the leader is",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the key is leader or some special key that represents the leader"),(0,n.kt)("li",{parentName:"ul"},"value is the name of the server or IP address of the server"))))),(0,n.kt)("li",{parentName:"ul"},"because Etcd guarantees high availability and strong consistency",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you know that the value of the leader in the key-value pair at any given point in time is correct for any machine that is reading from it")))))}p.isMDXComponent=!0}}]);