"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[23471],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var i=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},l=Object.keys(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)a=l[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=i.createContext({}),u=function(e){var t=i.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(a),m=n,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return a?i.createElement(h,r(r({ref:t},c),{},{components:a})):i.createElement(h,r({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var u=2;u<l;u++)r[u]=a[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}d.displayName="MDXCreateElement"},96981:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var i=a(83117),n=(a(67294),a(3905));const l={},r="Introduction to AWS services",o={unversionedId:"Technologies/database/cloud/AWS/readme",id:"Technologies/database/cloud/AWS/readme",title:"Introduction to AWS services",description:"AWS intro before",source:"@site/docs/Technologies/database/cloud/AWS/readme.md",sourceDirName:"Technologies/database/cloud/AWS",slug:"/Technologies/database/cloud/AWS/",permalink:"/docs/Technologies/database/cloud/AWS/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/database/cloud/AWS/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Queries Example",permalink:"/docs/Technologies/database/SQL/postgreSQL/example/queries"},next:{title:"DynamoDB",permalink:"/docs/Technologies/database/cloud/AWS/databases/dynamodb"}},s={},u=[{value:"DNS (Route 53 service)",id:"dns-route-53-service",level:2},{value:"Load Balancer (Elastic Load Balancer service)",id:"load-balancer-elastic-load-balancer-service",level:2},{value:"Web Backend Layer",id:"web-backend-layer",level:2},{value:"Application Layer (similar to Web Backend Layer)",id:"application-layer-similar-to-web-backend-layer",level:2},{value:"(API Gateway service)",id:"api-gateway-service",level:2},{value:"User Pools (Cognito service)",id:"user-pools-cognito-service",level:2},{value:"Cache (Elastic Cache service)",id:"cache-elastic-cache-service",level:2},{value:"Databases",id:"databases",level:2},{value:"Relational Database",id:"relational-database",level:3},{value:"Aurora",id:"aurora",level:4},{value:"RDS (Relational Database Service)",id:"rds-relational-database-service",level:4},{value:"NoSQL Database",id:"nosql-database",level:3},{value:"DynamoDB",id:"dynamodb",level:4},{value:"DocumentDB",id:"documentdb",level:4},{value:"OpenSearch",id:"opensearch",level:4},{value:"Packaged Infrastructure",id:"packaged-infrastructure",level:2},{value:"Elastic Beanstalk service",id:"elastic-beanstalk-service",level:3},{value:"App Runner service (new)",id:"app-runner-service-new",level:3},{value:"Lightsail service",id:"lightsail-service",level:3},{value:"AppSync service",id:"appsync-service",level:3},{value:"Cached Content",id:"cached-content",level:2},{value:"CloudFront service",id:"cloudfront-service",level:3},{value:"Deployment Orchestration",id:"deployment-orchestration",level:2},{value:"Code Commit service",id:"code-commit-service",level:3},{value:"Code Build service",id:"code-build-service",level:3},{value:"Code Deploy service",id:"code-deploy-service",level:3},{value:"Code Pipeline service",id:"code-pipeline-service",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"CloudWatch service",id:"cloudwatch-service",level:3},{value:"CloudTrail service",id:"cloudtrail-service",level:3},{value:"Identity and Access Management (IAM) service",id:"identity-and-access-management-iam-service",level:2},{value:"Infrastructure as code",id:"infrastructure-as-code",level:2},{value:"Cloud Formation service",id:"cloud-formation-service",level:3},{value:"Cloud Development Kit (CDK) service",id:"cloud-development-kit-cdk-service",level:3},{value:"Rapid Development",id:"rapid-development",level:2},{value:"Amplify service",id:"amplify-service",level:3},{value:"Serverless Application Model (SAM) service",id:"serverless-application-model-sam-service",level:3},{value:"Event Coordination",id:"event-coordination",level:2},{value:"Simple Notification Service (SNS) service",id:"simple-notification-service-sns-service",level:3},{value:"Simple Queue Service (SQS) Queue service",id:"simple-queue-service-sqs-queue-service",level:3},{value:"EventBridge service",id:"eventbridge-service",level:3},{value:"Step Function service",id:"step-function-service",level:3},{value:"General Object Storage",id:"general-object-storage",level:2},{value:"Simple Storage (S3) service",id:"simple-storage-s3-service",level:3},{value:"Analytical Processing",id:"analytical-processing",level:2},{value:"Elastic MapReduce (EMR) service",id:"elastic-mapreduce-emr-service",level:3},{value:"Athena service",id:"athena-service",level:3},{value:"Data Warehouse",id:"data-warehouse",level:2},{value:"Redshift service",id:"redshift-service",level:3},{value:"Dashboarding",id:"dashboarding",level:2},{value:"QuickSight service",id:"quicksight-service",level:3},{value:"Network Boundary",id:"network-boundary",level:2},{value:"Virtual Private Cloud (VPC) service",id:"virtual-private-cloud-vpc-service",level:3}],c={toc:u};function p(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,i.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction-to-aws-services"},"Introduction to AWS services"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"AWS intro before",src:a(48590).Z,width:"1219",height:"597"}),"\n",(0,n.kt)("img",{alt:"AWS intro after",src:a(18213).Z,width:"1227",height:"635"})),(0,n.kt)("h2",{id:"dns-route-53-service"},"DNS (Route 53 service)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is where you define all the DNS configuration",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"where you are going to route traffic to from the internet"),(0,n.kt)("li",{parentName:"ul"},"supports health checks on endpoints and any traffic shaping that you want to do"))),(0,n.kt)("li",{parentName:"ul"},"will be used frequently when defining externally facing APIs or endpoints"),(0,n.kt)("li",{parentName:"ul"},"the DNS will point to a load balancer"),(0,n.kt)("li",{parentName:"ul"},"DNS can also be point to the API Gateway which then points to the load balancer")),(0,n.kt)("h2",{id:"load-balancer-elastic-load-balancer-service"},"Load Balancer (Elastic Load Balancer service)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"2 variations",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"application load balancer",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it operates at the L7 layer"),(0,n.kt)("li",{parentName:"ul"},"for those that want to use content from http headers to route the traffic"))),(0,n.kt)("li",{parentName:"ol"},"network load balancer",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it operates at the L4 layer"),(0,n.kt)("li",{parentName:"ul"},"it is a bit more cost effective and supports higher throughput limits")))))),(0,n.kt)("h2",{id:"web-backend-layer"},"Web Backend Layer"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"this is where the request from the frontend touches the backend"),(0,n.kt)("li",{parentName:"ul"},"services available",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"EC2"),": Elastic Compute Cloud service",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you rent virtual machines that you pay for by the hour"),(0,n.kt)("li",{parentName:"ul"},"it is convenient because with EC2 machines, you can set them up to do whatever you please",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"can be used to hold backend databases, wordpress blog, rest api, etc."))),(0,n.kt)("li",{parentName:"ul"},"cons is that you have to do a lot of setup and configuration by yourself to use it"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," service",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it is a serverless compute infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you define, write and deploy functions",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the functions are snippets of code that can be small or large pieces of code"))),(0,n.kt)("li",{parentName:"ul"},"you do not need to worry about the infrastructure compared to EC2"),(0,n.kt)("li",{parentName:"ul"},"AWS will handle the deployment of the application onto a container and scaling the application whenever the number of requests to the lambda function increase"))),(0,n.kt)("li",{parentName:"ul"},"it is a paper invocation",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"so its cost effective for application workloads that have bursty traffic patterns"),(0,n.kt)("li",{parentName:"ul"},"it also good for applications that have traffic during the day and almost nothing during the evening"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ECS"),": Elastic Container Service service",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"there is a variation of it called ",(0,n.kt)("inlineCode",{parentName:"li"},"EKS"),": Elastic Kubernetes Service"),(0,n.kt)("li",{parentName:"ul"},"it helps you manage containers, setup servers with integrated load balancing and auto scaling, facilitate your deployments to those containers")))))),(0,n.kt)("h2",{id:"application-layer-similar-to-web-backend-layer"},"Application Layer (similar to Web Backend Layer)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it doesn't really change in terms of the compute options"),(0,n.kt)("li",{parentName:"ul"},"you have the same kind of fundamental building blocks that are available to you regardless whether its your web backend layer or your kind of business logic heavy application layer")),(0,n.kt)("h2",{id:"api-gateway-service"},"(API Gateway service)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"helps to facilitate the creation of the rest apis, and hosting those apis"),(0,n.kt)("li",{parentName:"ul"},"it offers additional functionality on top of just using a load balancer to distribute the traffic to different nodes"),(0,n.kt)("li",{parentName:"ul"},"features it offers",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"api throttling"),(0,n.kt)("li",{parentName:"ul"},"authorization on an api",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"useful if you want to build a private api that can only be accessible from users in a user pool"),(0,n.kt)("li",{parentName:"ul"},"the api gateway can be setup to validate a token by integrating with the user pool service or can be defined on your own"))),(0,n.kt)("li",{parentName:"ul"},"model validations",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can define what types of models your api supports, then have that validation performed before the request actually gets to the Web Backend Layer")))))),(0,n.kt)("h2",{id:"user-pools-cognito-service"},"User Pools (Cognito service)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows you to create user pools with features like login and registration"),(0,n.kt)("li",{parentName:"ul"},"users will sign up for accounts directly within cognito using the hosted UI, or you can integrate with other 3rd party identity providers such as (google, facebook, amazon, etc.)")),(0,n.kt)("h2",{id:"cache-elastic-cache-service"},"Cache (Elastic Cache service)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it has 2 flavors",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Memcache"),(0,n.kt)("li",{parentName:"ul"},"Radis",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"most popular"))))),(0,n.kt)("li",{parentName:"ul"},"it is based on key value lookups"),(0,n.kt)("li",{parentName:"ul"},"you have to worry about hosting that infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you would need to own a cluster of memory optimized nodes"),(0,n.kt)("li",{parentName:"ul"},"you have to worry about the maintenance, and alarming of that cluster",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"such as node replacement, hardware failures")))))),(0,n.kt)("h2",{id:"databases"},"Databases"),(0,n.kt)("h3",{id:"relational-database"},"Relational Database"),(0,n.kt)("h4",{id:"aurora"},"Aurora"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"most popular because it is more hands-off"),(0,n.kt)("li",{parentName:"ul"},"it is an in-house built amazon database",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it compatible with both MySQL and PostgreSQL"))),(0,n.kt)("li",{parentName:"ul"},"makes it easier for administration monitoring, auto scaling, storage auto scaling, compute auto scaling"),(0,n.kt)("li",{parentName:"ul"},"it offers the data rest api that you can use call your database"),(0,n.kt)("li",{parentName:"ul"},"it also offers a serverless compute model",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you don't need to worry about provisioning any type of hardware behind the scenes"),(0,n.kt)("li",{parentName:"ul"},"by using this, it offers auto scaling type of database")))),(0,n.kt)("h4",{id:"rds-relational-database-service"},"RDS (Relational Database Service)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows you to select which database configuration you would like",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can pick from common database such as MySQL, PostgreSQL, Microsoft SQL Server, Oracle, Cassandra, etc."))),(0,n.kt)("li",{parentName:"ul"},"this is where most customers would be comfortable in"),(0,n.kt)("li",{parentName:"ul"},"you would need to worry about provisioning any type of hardware behind the scenes")),(0,n.kt)("h3",{id:"nosql-database"},"NoSQL Database"),(0,n.kt)("h4",{id:"dynamodb"},"DynamoDB"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"most popular"),(0,n.kt)("li",{parentName:"ul"},"it is optimized for key value lookups"),(0,n.kt)("li",{parentName:"ul"},"it is a fully managed database service",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"this means you do not need to worry about anything with regards to infrastructure or hardware"),(0,n.kt)("li",{parentName:"ul"},"only need to worry about the scaling configuration, while DynamoDB will handle the auto scaling for you behind the scenes")))),(0,n.kt)("h4",{id:"documentdb"},"DocumentDB"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a fully managed service"),(0,n.kt)("li",{parentName:"ul"},"it is compatible with MongoDB")),(0,n.kt)("h4",{id:"opensearch"},"OpenSearch"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a new name for ",(0,n.kt)("inlineCode",{parentName:"li"},"ElasticSearch")),(0,n.kt)("li",{parentName:"ul"},"it is good if you are looking for something that supports more flexible querying at scale",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"also allows powerful grouping features, and dynamic grouping"))),(0,n.kt)("li",{parentName:"ul"},"it also comes with ",(0,n.kt)("inlineCode",{parentName:"li"},"Kibana")," which is an open source dashboarding technology to take a look at your data inside your open search database"),(0,n.kt)("li",{parentName:"ul"},"it has been used quite effectively as a replacement to ",(0,n.kt)("inlineCode",{parentName:"li"},"RDS")," in some cases")),(0,n.kt)("h2",{id:"packaged-infrastructure"},"Packaged Infrastructure"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it makes your life easier as a developer"),(0,n.kt)("li",{parentName:"ul"},"it offers a combination of the different services"),(0,n.kt)("li",{parentName:"ul"},"it helps to abstract some of the complexity away from you at the sacrifice of configuration and control")),(0,n.kt)("h3",{id:"elastic-beanstalk-service"},"Elastic Beanstalk service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows you to setup any kind of web application",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"can be containerized"),(0,n.kt)("li",{parentName:"ul"},"makes it easier for you to set up your apps with different components",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"backend layer, load balancer, auto scaling and monitoring"))))),(0,n.kt)("li",{parentName:"ul"},"everything is managed at one spot"),(0,n.kt)("li",{parentName:"ul"},"you control the infrastructure with Elastic Beanstalk but its similar to an orchestrator service",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"where it would go to the services and provision what it needs for the type of application that you are trying to deploy onto it"))),(0,n.kt)("li",{parentName:"ul"},"it is orchestrating the deployment of your ",(0,n.kt)("inlineCode",{parentName:"li"},"EC2")," machines, load balancers, and any other stuff that you may need",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"however, you still have visibility or insight into that infrastructure"),(0,n.kt)("li",{parentName:"ul"},"you still need to worry about maintaining it")))),(0,n.kt)("h3",{id:"app-runner-service-new"},"App Runner service (new)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"all of the lower level components are abstracted away from you",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you just worry about your application configuration and deployment"),(0,n.kt)("li",{parentName:"ul"},"app runner will worry about deploying that onto your infrastructure and scaling it if it requires it"))),(0,n.kt)("li",{parentName:"ul"},"behind the scenes, it uses",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ECS service")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"fargate service"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it is a serverless mode for running containers where it uses provision containers that you can specify"),(0,n.kt)("li",{parentName:"ul"},"but you don't need to worry about the infrastructure")))))),(0,n.kt)("h3",{id:"lightsail-service"},"Lightsail service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is another pre-packaged services that makes your life easier"),(0,n.kt)("li",{parentName:"ul"},"similar to GoDaddy, DigitalOcean",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"where you select the type of stack that you want to set up for your application",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you select the different pre-packaged pricing models"),(0,n.kt)("li",{parentName:"ul"},"you don't have to worry about the details of which node type, where if you use ",(0,n.kt)("inlineCode",{parentName:"li"},"EC2")," directly you have to"))),(0,n.kt)("li",{parentName:"ul"},"you pick the different pre-packaged options for compute and the costs are reasonable"))),(0,n.kt)("li",{parentName:"ul"},"can deploy wordpress blog, or other kinds of applications, or containers"),(0,n.kt)("li",{parentName:"ul"},"you can add other components",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"such as load balancing, auto scaling"))),(0,n.kt)("li",{parentName:"ul"},"it is basically a more simplified version and safer, since it is very beginner friendly")),(0,n.kt)("h3",{id:"appsync-service"},"AppSync service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"a fully managed graphql as a service"),(0,n.kt)("li",{parentName:"ul"},"provides you with the graphql functionality where you can use it to integrate with other backend aws services such as ",(0,n.kt)("inlineCode",{parentName:"li"},"DynamoDB")),(0,n.kt)("li",{parentName:"ul"},"you can also use it to integrate with ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," functions if you want to have some custom resolvers"),(0,n.kt)("li",{parentName:"ul"},"it can also scale very well based on the level of traffic and is transparent to you as an administrator")),(0,n.kt)("h2",{id:"cached-content"},"Cached Content"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"anything that you want to cache",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"image files, javascript, html, css, etc.")))),(0,n.kt)("h3",{id:"cloudfront-service"},"CloudFront service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows you to deploy a ",(0,n.kt)("inlineCode",{parentName:"li"},"CloudFront")," distribution which replicates some of your content from the General Object Storage to regional nodes that are located all across the world close to your end users",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"this helps to get better performance for the static content"))),(0,n.kt)("li",{parentName:"ul"},"great for applications that want to optimize the experience for the user")),(0,n.kt)("h2",{id:"deployment-orchestration"},"Deployment Orchestration"),(0,n.kt)("h3",{id:"code-commit-service"},"Code Commit service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is for storing your source code"),(0,n.kt)("li",{parentName:"ul"},"you can either store your source code directly inside ",(0,n.kt)("inlineCode",{parentName:"li"},"Code Commit")," as a service",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"or you can integrate code commit with 3rd party providers such as github"))),(0,n.kt)("li",{parentName:"ul"},"by itself it is not impressive or powerful",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"its merits comes from being able to integrate with 3rd party providers")))),(0,n.kt)("h3",{id:"code-build-service"},"Code Build service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows you to take your source that's located in ",(0,n.kt)("inlineCode",{parentName:"li"},"Code Commit")," or any other 3rd party connected repository and then build that up into artifacts"),(0,n.kt)("li",{parentName:"ul"},"it also allows you to create and run tests in a test environment for your source code"),(0,n.kt)("li",{parentName:"ul"},"when you combine that with some other components, you can build sophisticated CICD pipelines that have multiple different steps in terms of running your unit tests and integration tests"),(0,n.kt)("li",{parentName:"ul"},"it is basically for building and testing your source code")),(0,n.kt)("h3",{id:"code-deploy-service"},"Code Deploy service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it takes the artifacts that are built in the ",(0,n.kt)("inlineCode",{parentName:"li"},"Code Build")," and then it would deploy it to the other services in the Web Backend Layer or Application Layer")),(0,n.kt)("h3",{id:"code-pipeline-service"},"Code Pipeline service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is the deployment orchestration service"),(0,n.kt)("li",{parentName:"ul"},"it allows you to define a workflow of the different stages that your application will run through",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"e.g.: source code -> build -> test -> deploy to test env -> run another tests -> deploy to prod")))),(0,n.kt)("h2",{id:"monitoring"},"Monitoring"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"need to know where to look to determine when things are going wrong and you need to step in",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"or when things are fine")))),(0,n.kt)("h3",{id:"cloudwatch-service"},"CloudWatch service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"kinda like an Umbrella service because it has a lot of different features that are inside",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"most important feature is the ability to evaluate your metrics on the AWS services"),(0,n.kt)("li",{parentName:"ul"},"i.e.: you can use ",(0,n.kt)("inlineCode",{parentName:"li"},"CloudWatch")," to view different metrics on your ",(0,n.kt)("inlineCode",{parentName:"li"},"EC2")," machines to see over time in chart format",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"such as cpu utilization, memory utilization"))),(0,n.kt)("li",{parentName:"ul"},"i.e.: for ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"what are the concurrent number of invocations or all the invocations in 1 day"))))),(0,n.kt)("li",{parentName:"ul"},"another useful feature is logging",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"many of the applications would be emitting application logs",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"in terms of what your application is doing"))),(0,n.kt)("li",{parentName:"ul"},"for other services are a kind of managed services that sit on their own",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"often these services will integrate with ",(0,n.kt)("inlineCode",{parentName:"li"},"CloudWatch")," to give you an Administration level events whenever things are happening on the services if you're using that piece of infrastructure"))))),(0,n.kt)("li",{parentName:"ul"},"new feature is Insights",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"lets you search over very large volumes of ",(0,n.kt)("inlineCode",{parentName:"li"},"CloudWatch")," data using similar to a SQL style language"))),(0,n.kt)("li",{parentName:"ul"},"basically it helps you monitor the state of your applications in your AWS")),(0,n.kt)("h3",{id:"cloudtrail-service"},"CloudTrail service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is the audit trail of the operations that are being performed on your infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the operations that are being performed and who is performing those operations"),(0,n.kt)("li",{parentName:"ul"},"i.e.: a Lambda function calling a database, a user deleting all your infrastructure"))),(0,n.kt)("li",{parentName:"ul"},"it will offer you different types of events that allow you to gain insight into who is accessing different services and what they are doing on those services",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the types of events can either be at the control or administration level",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"its is for when your infrastructure gets provisioned or deleted or modified"))),(0,n.kt)("li",{parentName:"ul"},"there is also data level events",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the collections of events is called Trails",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"data level events give you a little more granular data",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"when configured on the DyanamoDB, it will give you log information on every single request that comes to your table",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it is not recommended because it would be chewing through a lot of bandwidth for log storage, but can be enable or disabled"))))))))),(0,n.kt)("li",{parentName:"ul"},"insights event",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it is a proactive one where you can configure it to automatically monitor your account",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"AWS uses machine learning to monitor the ",(0,n.kt)("inlineCode",{parentName:"li"},"CloudTrail")," events for any anomalies"))),(0,n.kt)("li",{parentName:"ul"},"useful for being proactive about security threats")))))),(0,n.kt)("h2",{id:"identity-and-access-management-iam-service"},"Identity and Access Management (IAM) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a security management service for AWS"),(0,n.kt)("li",{parentName:"ul"},"you create high-level entities such as users or roles",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"and associated with these users are policies",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"policies are important because by default a user will not have any kind of permissions to do anything on AWS",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"unless you define a IAM policy that gives that user to perform that action"))))))),(0,n.kt)("li",{parentName:"ul"},"basically AWS security management uses an implicit deny operation",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you deny access to everything unless someone says otherwise"))),(0,n.kt)("li",{parentName:"ul"},"you create IAM policies and attached these policies to users",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can assign users to different groups that has policy permission set predefined and apply to anyone in the group"))),(0,n.kt)("li",{parentName:"ul"},"you can also use it to create accounts that users can log in directly",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a developer can have their own account")))),(0,n.kt)("h2",{id:"infrastructure-as-code"},"Infrastructure as code"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is the preferred way to create and manage your infrastructure"),(0,n.kt)("li",{parentName:"ul"},"no one really goes into the console anymore to create things and manage your infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"unless it's your first time doing it and you're just experimenting"))),(0,n.kt)("li",{parentName:"ul"},"its more preferred to write your infrastructure in a code format or configuration format that can be easily picked up and deployed to a new environment")),(0,n.kt)("h3",{id:"cloud-formation-service"},"Cloud Formation service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is one of the options that allows you to write your infrastructure in a code format or configuration format that can be easily picked up and deployed to a new environment"),(0,n.kt)("li",{parentName:"ul"},"it is a service that allows you to write json or yaml configuration files",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"then you upload these files to ",(0,n.kt)("inlineCode",{parentName:"li"},"Cloud Formation")," and it will be responsible for calling other AWS services to provision your infrastructure"),(0,n.kt)("li",{parentName:"ul"},"i.e.: you can write a template file that has a DynamoDB in it, and a Lambda function",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"once you upload the file into ",(0,n.kt)("inlineCode",{parentName:"li"},"Cloud Formation"),", it will go and create your Lambda function and DynamoDB table"))),(0,n.kt)("li",{parentName:"ul"},"it is convenient and quick, however, it has some downfalls",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"downfalls are writing your infrastructure as yaml or json is not really good",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CDK")," solves these problem")))))))),(0,n.kt)("h3",{id:"cloud-development-kit-cdk-service"},"Cloud Development Kit (CDK) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a method of writing your infrastructure as code that is a little more fluent for developers"),(0,n.kt)("li",{parentName:"ul"},"it involves you writing actual code",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"allowing you to be more expressive with your infrastructure definition files so that you can be a little more dynamic and structure your code in a much simpler way using functions"))),(0,n.kt)("li",{parentName:"ul"},"it is easy to use Higher Level Constructs",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"these constructs can contain an entire application specifications"),(0,n.kt)("li",{parentName:"ul"},"you can have a construct that's an entire serverless architecture",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"ie.g.: that contains ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," function, ",(0,n.kt)("inlineCode",{parentName:"li"},"DynamoDB")," table, etc."))))),(0,n.kt)("li",{parentName:"ul"},"behind the scenes, ",(0,n.kt)("inlineCode",{parentName:"li"},"CDK")," does generate the code you write into ",(0,n.kt)("inlineCode",{parentName:"li"},"Cloud Formation"),", then ",(0,n.kt)("inlineCode",{parentName:"li"},"Cloud Formation")," is the one that deploys that out into AWS"),(0,n.kt)("li",{parentName:"ul"},"there are outside AWS options you can use for Infrastructure as codes such as",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"i.e.: Terraform, Pulumi"),(0,n.kt)("li",{parentName:"ul"},"which can be used to integrate with AWS")))),(0,n.kt)("h2",{id:"rapid-development"},"Rapid Development"),(0,n.kt)("h3",{id:"amplify-service"},"Amplify service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a tool kit style service that allows you to rapidly build and deploy entire applications"),(0,n.kt)("li",{parentName:"ul"},"it is different because it is primarily a Cli tool, and it focuses on the functionality and not on the infrastructure of what you are trying to provision"),(0,n.kt)("li",{parentName:"ul"},"i.e.: you can run a simple command to add an api",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"behind the scenes, ",(0,n.kt)("inlineCode",{parentName:"li"},"Amplify")," will deploy maybe a ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," function with an ",(0,n.kt)("inlineCode",{parentName:"li"},"Api Gateway")))),(0,n.kt)("li",{parentName:"ul"},"it allows you to add things such as user authentication and authorization",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"behind the scenes it will give you a ",(0,n.kt)("inlineCode",{parentName:"li"},"Cognito")," user pool"))),(0,n.kt)("li",{parentName:"ul"},"you can add things such as a relational database",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"it will give you an ",(0,n.kt)("inlineCode",{parentName:"li"},"Aurora")," serverless database that you can use"))),(0,n.kt)("li",{parentName:"ul"},"it is good because of its abstraction, which is also a con because of that abstraction",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"the debugging of any problems that arises is a nightmare, because you need to dive into the different independent services, which is problem if you do not understand about the AWS services you are trying to debug"))),(0,n.kt)("li",{parentName:"ul"},"if you want to stay within a well-defined box then ",(0,n.kt)("inlineCode",{parentName:"li"},"Amplify")," is great",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"if you want to venture out of that box, writing your own ",(0,n.kt)("inlineCode",{parentName:"li"},"CDK")," would be recommended, and understand the AWS services")))),(0,n.kt)("h3",{id:"serverless-application-model-sam-service"},"Serverless Application Model (SAM) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is great in terms of providing shorthands of common infrastructure setups that would typically be written in ",(0,n.kt)("inlineCode",{parentName:"li"},"Cloud Formation")),(0,n.kt)("li",{parentName:"ul"},"there is ",(0,n.kt)("inlineCode",{parentName:"li"},"SAM")," templates that you can use that is similar to what those Higher Order Constructs do in ",(0,n.kt)("inlineCode",{parentName:"li"},"CDK")),(0,n.kt)("li",{parentName:"ul"},"it can handles much of the complexity of the setup for you"),(0,n.kt)("li",{parentName:"ul"},"it is also great for local testing of ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," functions",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"can use ",(0,n.kt)("inlineCode",{parentName:"li"},"SAM")," to build and run your ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," functions locally before you deploy them into AWS")))),(0,n.kt)("h2",{id:"event-coordination"},"Event Coordination"),(0,n.kt)("h3",{id:"simple-notification-service-sns-service"},"Simple Notification Service (SNS) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a pub sub service"),(0,n.kt)("li",{parentName:"ul"},"it is the pub in the sub"),(0,n.kt)("li",{parentName:"ul"},"it is responsible for publishing notifications to a topic",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a topic can have many different subscribers"))),(0,n.kt)("li",{parentName:"ul"},"the idea is that a domain model owner such as search query service puts an entry into its database, it wants to notify other services",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"those services will use an ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," topic that they publish to to notify other micro-services that something changed"),(0,n.kt)("li",{parentName:"ul"},"the subscribers can be many different types of infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can have other AWS services that are your subscribers such as a ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," function, you can have a http endpoint that exists on an ",(0,n.kt)("inlineCode",{parentName:"li"},"EC2")," instance"))))),(0,n.kt)("li",{parentName:"ul"},"basically if you want to tell other people about data or data changes, then use ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS"))),(0,n.kt)("h3",{id:"simple-queue-service-sqs-queue-service"},"Simple Queue Service (SQS) Queue service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is responsible for holding messages so that you can process them at a later time"),(0,n.kt)("li",{parentName:"ul"},"you define queues which can be connected to from many different types of compute infrastructure",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can connect queue to a ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," function or an ",(0,n.kt)("inlineCode",{parentName:"li"},"EC2")," machine or an ",(0,n.kt)("inlineCode",{parentName:"li"},"ECS")," task"),(0,n.kt)("li",{parentName:"ul"},"these infrastructure will pull your queue for new messages and then perform some type of action when it finds new messages in the queue"))),(0,n.kt)("li",{parentName:"ul"},"typically people set up an ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," to an ",(0,n.kt)("inlineCode",{parentName:"li"},"SQS"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"so the ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," topic being the publisher"),(0,n.kt)("li",{parentName:"ul"},"the ",(0,n.kt)("inlineCode",{parentName:"li"},"SQS")," being the subscriber"))),(0,n.kt)("li",{parentName:"ul"},"basically if you want to be notified of when something changes in someone else's data, use ",(0,n.kt)("inlineCode",{parentName:"li"},"SQS"))),(0,n.kt)("h3",{id:"eventbridge-service"},"EventBridge service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is similar to what ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," offers with some distinct benefits"),(0,n.kt)("li",{parentName:"ul"},"instead of ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," topics, ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," uses this concept of Event Buses",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can integrate your ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," Event Bus with many different kind of application actions all across AWS"),(0,n.kt)("li",{parentName:"ul"},"i.e.: you want to integrate your ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," with whenever an ",(0,n.kt)("inlineCode",{parentName:"li"},"EC2")," machine gets terminated",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"or whenever a ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," function gets updated"),(0,n.kt)("li",{parentName:"ul"},"or whenever the configuration on your ",(0,n.kt)("inlineCode",{parentName:"li"},"DynamoDB")," table gets changed"))),(0,n.kt)("li",{parentName:"ul"},"then you can define rules that specify who to deliver these events to",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"similar to how ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," has subscribers, ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," also has subscribers, and you define these rules and target groups of who to deliver these messages to depending on the type of event"))))),(0,n.kt)("li",{parentName:"ul"},"the benefits of ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," over ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," is that it has 2 important features",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"Schema Discovery",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"if you are using ",(0,n.kt)("inlineCode",{parentName:"li"},"SNS")," and you are publishing to your topic and someone is getting a message in your ",(0,n.kt)("inlineCode",{parentName:"li"},"SQS")," queue",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"what does the schema of that message look like"),(0,n.kt)("li",{parentName:"ul"},"what does the format of the message look like"),(0,n.kt)("li",{parentName:"ul"},"is it have a JSON, is it an XML file, does it have foo as a key and bar as a value, etc."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," allows you to define these schema definitions to help subscribers get access to the models that are going to be delivered from the ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")," Event Bus"),(0,n.kt)("li",{parentName:"ul"},"it also allows you to search through different schemas"))),(0,n.kt)("li",{parentName:"ol"},"3rd party integrations",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"an example of 3rd party integrations that you can work with is Shopify",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Shopify has native integration with ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"what that means is that any time someone places an order on your Shopify e-commerce website, that can be directly integrated into ",(0,n.kt)("inlineCode",{parentName:"li"},"EventBridge")),(0,n.kt)("li",{parentName:"ul"},"then you can have specify rules setup to deliver that notification to a micro-service or backend service that cares about those updates, or to General Object Storage")))))))))),(0,n.kt)("h3",{id:"step-function-service"},"Step Function service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it allows you to define workflows and different steps",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"i.e.: a starting step, x step, y step, etc."),(0,n.kt)("li",{parentName:"ul"},"you can have conditional logic in the step function workflow"),(0,n.kt)("li",{parentName:"ul"},"it allows you to build things like customer ordering workflow"))),(0,n.kt)("li",{parentName:"ul"},"you can have a fail safe and conditional logic in that workflow",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"so if anything fails, then a different path or a different choice is taken"))),(0,n.kt)("li",{parentName:"ul"},"it offers direct integration with many other AWS services",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can use a service like ",(0,n.kt)("inlineCode",{parentName:"li"},"Lambda")," to glue different parts of the workflow together and is serverless"))),(0,n.kt)("li",{parentName:"ul"},"basically it is a kind of orchestration service that allows you to define sophisticated and large workflows that may run through many steps")),(0,n.kt)("h2",{id:"general-object-storage"},"General Object Storage"),(0,n.kt)("h3",{id:"simple-storage-s3-service"},"Simple Storage (S3) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is just your kitchen sink of data storage"),(0,n.kt)("li",{parentName:"ul"},"very cheap and scalable"),(0,n.kt)("li",{parentName:"ul"},"you can store exabytes (1k PB) or petabytes (1k TB) of data"),(0,n.kt)("li",{parentName:"ul"},"you can move data over time into cold storage to get better price points"),(0,n.kt)("li",{parentName:"ul"},"typically you will store your assets in the ",(0,n.kt)("inlineCode",{parentName:"li"},"S3")," and then connect it to your ",(0,n.kt)("inlineCode",{parentName:"li"},"CloudFront")," distribution so that it can be replicated and serve to all your customers around the world"),(0,n.kt)("li",{parentName:"ul"},"it can be used to store any type of files",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"images, css, videos, etc."))),(0,n.kt)("li",{parentName:"ul"},"there are file sizes limits, refer to AWS website for more details")),(0,n.kt)("h2",{id:"analytical-processing"},"Analytical Processing"),(0,n.kt)("h3",{id:"elastic-mapreduce-emr-service"},"Elastic MapReduce (EMR) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a large-scale distributed data processing system"),(0,n.kt)("li",{parentName:"ul"},"it allows you to run many different frameworks including",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Spark clusters, Hive, Presto"),(0,n.kt)("li",{parentName:"ul"},"you can also run it in a serverless mode"))),(0,n.kt)("li",{parentName:"ul"},"it is a service where you are going to do just massive number crunching to perform some kind of analytics")),(0,n.kt)("h3",{id:"athena-service"},"Athena service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a completely serverless big data processing or analytics service"),(0,n.kt)("li",{parentName:"ul"},"how it works is that you can keep your data stored in ",(0,n.kt)("inlineCode",{parentName:"li"},"S3"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you don't need to load the data anywhere which is the case for ",(0,n.kt)("inlineCode",{parentName:"li"},"EMR")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Athena")," will directly connect to your ",(0,n.kt)("inlineCode",{parentName:"li"},"S3")," data, crawl your data, automatically detect the schema of the data, and then create tables that you can query using SQL"),(0,n.kt)("li",{parentName:"ul"},"so whenever you dispatch a job to ",(0,n.kt)("inlineCode",{parentName:"li"},"Athena")," it uses AWS infrastructure behind the scenes to prioritize the request"))),(0,n.kt)("li",{parentName:"ul"},"you can run massive queries on data that is already stored in ",(0,n.kt)("inlineCode",{parentName:"li"},"S3"))),(0,n.kt)("h2",{id:"data-warehouse"},"Data Warehouse"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"place to store data like business intelligence, or any types of analytics that we may want to perform on it"),(0,n.kt)("li",{parentName:"ul"},"we don't want to store those data in places like ",(0,n.kt)("inlineCode",{parentName:"li"},"DocumentDB")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"DynamoDB")," etc. because its not meant for it")),(0,n.kt)("h3",{id:"redshift-service"},"Redshift service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a Columnar style database that allows you to perform some very large queries concurrently"),(0,n.kt)("li",{parentName:"ul"},"it can support many users at the same time"),(0,n.kt)("li",{parentName:"ul"},"it is a little expensive"),(0,n.kt)("li",{parentName:"ul"},"it offers",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"serverless mode",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"pay per use type model"))),(0,n.kt)("li",{parentName:"ul"},"provision mode",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"where you can provision the nodes in a distributed way"))))),(0,n.kt)("li",{parentName:"ul"},"this where you will run your workloads for the kind of OLAP (Online Analytical Processing) style queries"),(0,n.kt)("li",{parentName:"ul"},"there is a connection you can do with ",(0,n.kt)("inlineCode",{parentName:"li"},"Redshift")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"S3"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"you can just deliver data to ",(0,n.kt)("inlineCode",{parentName:"li"},"S3")," and then set up an automatic load job to load that to ",(0,n.kt)("inlineCode",{parentName:"li"},"Redshit")," so that it can be available for this OLAP style querying"))),(0,n.kt)("li",{parentName:"ul"},"good for data engineers, business intelligence users, anyone that wants to interact with data at scale using SQL")),(0,n.kt)("h2",{id:"dashboarding"},"Dashboarding"),(0,n.kt)("h3",{id:"quicksight-service"},"QuickSight service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"it is a tool that is great for end users"),(0,n.kt)("li",{parentName:"ul"},"you give users their independent logins they can access whether it be in ",(0,n.kt)("inlineCode",{parentName:"li"},"Redshit")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"S3")," or anything else"),(0,n.kt)("li",{parentName:"ul"},"it can create business facing dashboards")),(0,n.kt)("h2",{id:"network-boundary"},"Network Boundary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"offers a service that allows you to isolate all of your resources into specific isolated network")),(0,n.kt)("h3",{id:"virtual-private-cloud-vpc-service"},"Virtual Private Cloud (VPC) service"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"allows you to create your own ",(0,n.kt)("inlineCode",{parentName:"li"},"VPC"),"s that are basically private networking spaces for your infrastructure to exist in"),(0,n.kt)("li",{parentName:"ul"},"it is completely separate from all other AWS accounts, and it is just your networking space"),(0,n.kt)("li",{parentName:"ul"},"you can connect your ",(0,n.kt)("inlineCode",{parentName:"li"},"VPC")," to other ",(0,n.kt)("inlineCode",{parentName:"li"},"VPC"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"so as to be able to talk to other services or different account"))),(0,n.kt)("li",{parentName:"ul"},"you can open up your ",(0,n.kt)("inlineCode",{parentName:"li"},"VPC")," so that your infrastructure is callable from the public internet"),(0,n.kt)("li",{parentName:"ul"},"you can have very large ",(0,n.kt)("inlineCode",{parentName:"li"},"VPC")," that host many different micro-services or service oriented architectures"),(0,n.kt)("li",{parentName:"ul"},"basically you can use ",(0,n.kt)("inlineCode",{parentName:"li"},"VPC")," to isolate your resources from any other systems, and also allows you to find some security rules to make sure that your infrastructure is protected from any outside actor")))}p.isMDXComponent=!0},18213:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/aws_intro_after-da906759245cfd1c988b610599d5be85.png"},48590:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/aws_intro_before-db6b3e30d04c638f67f8daa2034b6e24.png"}}]);