"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[8332],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>d});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),f=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=f(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=f(r),d=a,m=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return r?t.createElement(m,o(o({ref:n},c),{},{components:r})):t.createElement(m,o({ref:n},c))}));function d(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var f=2;f<i;f++)o[f]=r[f];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},57082:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>f});var t=r(83117),a=(r(67294),r(3905));const i={},o="Smallest Difference",s={unversionedId:"interviewPrep/codingTests/medium/arrays/smallestDifference",id:"interviewPrep/codingTests/medium/arrays/smallestDifference",title:"Smallest Difference",description:"Write a function that takes in two non-empty arrays of integers, finds the",source:"@site/docs/interviewPrep/codingTests/medium/arrays/smallestDifference.md",sourceDirName:"interviewPrep/codingTests/medium/arrays",slug:"/interviewPrep/codingTests/medium/arrays/smallestDifference",permalink:"/docs/interviewPrep/codingTests/medium/arrays/smallestDifference",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/codingTests/medium/arrays/smallestDifference.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Move Element To End",permalink:"/docs/interviewPrep/codingTests/medium/arrays/moveElementToEnd"},next:{title:"Spiral Traverse",permalink:"/docs/interviewPrep/codingTests/medium/arrays/spiralTraverse"}},l={},f=[],c={toc:f};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"smallest-difference"},"Smallest Difference"),(0,a.kt)("p",null,"Write a function that takes in two non-empty arrays of integers, finds the\npair of numbers (one from each array) whose absolute difference is closest to\nzero, and returns an array containing these two numbers, with the number from\nthe first array in the first position."),(0,a.kt)("p",null,"Note that the absolute difference of two integers is the distance between\nthem on the real number line. For example, the absolute difference of -5 and 5\nis 10, and the absolute difference of -5 and -4 is 1."),(0,a.kt)("p",null,"You can assume that there will only be one pair of numbers with the smallest\ndifference."),(0,a.kt)("p",null,"Sample Input\n",(0,a.kt)("inlineCode",{parentName:"p"},"arrayOne = [-1, 5, 10, 20, 28, 3]"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"arrayTwo = [26, 134, 135, 15, 17]"),"\nSample Output\n",(0,a.kt)("inlineCode",{parentName:"p"},"[28, 26]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# solution 1\ndef smallestDifference(arrayOne, arrayTwo):\n  # Write your code here.\n  result = []\n  diff = None\n  for v1 in arrayOne:\n    for v2 in arrayTwo:\n      v = abs(v1 - v2)\n      if diff is None or v < diff:\n        diff = v\n        result = [v1, v2]\n  return result\n\n\n# solution 2\ndef smallestDifference(arrayOne, arrayTwo):\n  # Write your code here.\n  arrayOne.sort()\n  arrayTwo.sort()\n  L1 = 0\n  L2 = 0\n  R1 = len(arrayOne)\n  R2 = len(arrayTwo)\n  diff = None\n  result = []\n  while L1 < R1 and L2 < R2:\n    v1 = arrayOne[L1]\n    v2 = arrayTwo[L2]\n    v = abs(v1 - v2)\n    if diff is None or v < diff:\n      diff = v\n      result = [v1, v2]\n    if v1 < v2:\n      L1 += 1\n    elif v2 < v1:\n      L2 += 1\n    else:\n      return [v1, v2]\n  return result\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function smallestDifference(arrayOne, arrayTwo) {\n  // Write your code here.\n  arrayOne.sort((a, b) => a - b);\n  arrayTwo.sort((a, b) => a - b);\n  let L1 = 0;\n  let L2 = 0;\n  let diff;\n  let result = [];\n  while (L1 < arrayOne.length && L2 < arrayTwo.length) {\n    const v1 = arrayOne[L1];\n    const v2 = arrayTwo[L2];\n    const v = Math.abs(v1 - v2);\n    if (!diff || v < diff) {\n      diff = v;\n      result = [v1, v2];\n    }\n    if (v1 < v2) {\n      L1++;\n    } else if (v2 < v1) {\n      L2++;\n    } else {\n      return [v1, v2];\n    }\n  }\n  return result;\n}\n")))}u.isMDXComponent=!0}}]);