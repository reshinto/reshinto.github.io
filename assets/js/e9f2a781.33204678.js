"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[74560],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),s=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(o,".").concat(f)]||d[f]||u[f]||i;return n?r.createElement(m,p(p({ref:t},l),{},{components:n})):r.createElement(m,p({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,p=new Array(i);p[0]=d;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:a,p[1]=c;for(var s=2;s<i;s++)p[s]=n[s];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67209:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=n(83117),a=(n(67294),n(3905));const i={},p="C# Example",c={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/readme",id:"interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/readme",title:"C# Example",description:"Example",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp",slug:"/interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/cSharp/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Example 2",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/cPlusPlus/example2"},next:{title:"Go Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/go/"}},o={},s=[],l={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"c-example"},"C# Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// Adapter Design Pattern\n//\n// Intent: Provides a unified interface that allows objects with incompatible\n// interfaces to collaborate.\n\nusing System;\n\nnamespace RefactoringGuru.DesignPatterns.Adapter.Conceptual\n{\n    // The Target defines the domain-specific interface used by the client code.\n    public interface ITarget\n    {\n        string GetRequest();\n    }\n\n    // The Adaptee contains some useful behavior, but its interface is\n    // incompatible with the existing client code. The Adaptee needs some\n    // adaptation before the client code can use it.\n    class Adaptee\n    {\n        public string GetSpecificRequest()\n        {\n            return "Specific request.";\n        }\n    }\n\n    // The Adapter makes the Adaptee\'s interface compatible with the Target\'s\n    // interface.\n    class Adapter : ITarget\n    {\n        private readonly Adaptee _adaptee;\n\n        public Adapter(Adaptee adaptee)\n        {\n            this._adaptee = adaptee;\n        }\n\n        public string GetRequest()\n        {\n            return $"This is \'{this._adaptee.GetSpecificRequest()}\'";\n        }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Adaptee adaptee = new Adaptee();\n            ITarget target = new Adapter(adaptee);\n\n            Console.WriteLine("Adaptee interface is incompatible with the client.");\n            Console.WriteLine("But with adapter client can call it\'s method.");\n\n            Console.WriteLine(target.GetRequest());\n        }\n    }\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Adaptee interface is incompatible with the client.\nBut with adapter client can call it's method.\nThis is 'Specific request.'\n")))}u.isMDXComponent=!0}}]);