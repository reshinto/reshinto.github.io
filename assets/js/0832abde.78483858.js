"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[8630],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(a),c=i,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||r;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function c(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},61864:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=a(83117),i=(a(67294),a(3905));const r={},l="XML (eXtensible Markup Language)",o={unversionedId:"languageSpecific/xml/readme",id:"languageSpecific/xml/readme",title:"XML (eXtensible Markup Language)",description:"- became a W3C recommendation or standard in 1998",source:"@site/docs/languageSpecific/xml/readme.md",sourceDirName:"languageSpecific/xml",slug:"/languageSpecific/xml/",permalink:"/docs/languageSpecific/xml/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/languageSpecific/xml/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Virtual Environment",permalink:"/docs/languageSpecific/python/virtualEnv"},next:{title:"PROGRAMMING LANGUAGE SYNTAX COMPARISON",permalink:"/docs/"}},d={},s=[{value:"What is XML used for",id:"what-is-xml-used-for",level:2},{value:"XML related technologies",id:"xml-related-technologies",level:2},{value:"Describing Data with XML",id:"describing-data-with-xml",level:2},{value:"Pros and Cons of XML",id:"pros-and-cons-of-xml",level:2},{value:"Types of XML Content",id:"types-of-xml-content",level:2},{value:"View Groups, Root View, Parent",id:"view-groups-root-view-parent",level:2},{value:"Linear Layout",id:"linear-layout",level:3},{value:"Relative Layout",id:"relative-layout",level:3},{value:"XML element (tags)",id:"xml-element-tags",level:2},{value:"Attribute names, these must be inside the XML element tags",id:"attribute-names-these-must-be-inside-the-xml-element-tags",level:2},{value:"Attribute names for <code>&lt;TextView attributeNames/&gt;</code>",id:"attribute-names-for-textview-attributenames",level:3},{value:"Attribute names for <code>&lt;ImageView attributeNames/&gt;</code>",id:"attribute-names-for-imageview-attributenames",level:3},{value:"Density-Independent Pixels (dp)",id:"density-independent-pixels-dp",level:2}],p={toc:s};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"xml-extensible-markup-language"},"XML (eXtensible Markup Language)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"became a W3C recommendation or standard in 1998"),(0,i.kt)("li",{parentName:"ul"},"it is a tag-based syntax, similar to HTML",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"XML is NOT a replacement for HTML"))),(0,i.kt)("li",{parentName:"ul"},"X means eXtensible",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"can use existing tags"),(0,i.kt)("li",{parentName:"ul"},"or can make your own tags",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"any app that can read XML, will be able to parse and read"))))),(0,i.kt)("li",{parentName:"ul"},"XML is the foundation of several Web technologies",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g.:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"XHTML: HTML formatted as XML syntax"),(0,i.kt)("li",{parentName:"ul"},"RSS/ATOM: used for publishing, such as blogs"),(0,i.kt)("li",{parentName:"ul"},"AJAX: asynchronous JavaScript and XML, XML is the X in AJAX"),(0,i.kt)("li",{parentName:"ul"},"Web services: using APIs over the web",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"XML can be used to exchange data over the web")))))))),(0,i.kt)("h2",{id:"what-is-xml-used-for"},"What is XML used for"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"used to structure and describe information"),(0,i.kt)("li",{parentName:"ul"},"purpose is to take in information and apply structure and meaning to it"),(0,i.kt)("li",{parentName:"ul"},"it was intended to be used over the internet"),(0,i.kt)("li",{parentName:"ul"},"used to exchange data between disparate systems that may have never been intended to talk with each other",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g.: using XML to bridge the gap between a very old computer system to a new application so as to allow data to be accessed by newer systems")))),(0,i.kt)("h2",{id:"xml-related-technologies"},"XML related technologies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"technologies that make working with XML to solve certain problems easier and more productive"),(0,i.kt)("li",{parentName:"ul"},"e.g.:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"XPath"),": eXtensible Path Language",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it's called XPath because it uses a path-life syntax to perform queries on XML data"),(0,i.kt)("li",{parentName:"ul"},"XPath is similar to how files are organized on the computer",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"~/dev/example/file")))),(0,i.kt)("li",{parentName:"ul"},"used to find and extract information from XML documents"),(0,i.kt)("li",{parentName:"ul"},"a sort of a derivative form of ",(0,i.kt)("inlineCode",{parentName:"li"},"XQuery"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"but is used for extracting information from XML in an advanced way"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"XSLT"),": XML Stylesheet Language Transformations",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"a kind of CSS"),(0,i.kt)("li",{parentName:"ul"},"can be used to style XML information, important word is trsnformations"),(0,i.kt)("li",{parentName:"ul"},"provides a way of taking XML information and transforming it into something else",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"transforming into any file (e.g.: pdf, text, webpage, any file format)"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"XQuery"),": XML Query",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"a type of SQL for XML"),(0,i.kt)("li",{parentName:"ul"},"a way of extracting data from XML as if it were a database"),(0,i.kt)("li",{parentName:"ul"},"provides more advanced querying than ",(0,i.kt)("inlineCode",{parentName:"li"},"XPath")),(0,i.kt)("li",{parentName:"ul"},"can build complex queries that search multiple XML files to extract and join information"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Xpointer")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"XLink"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"create links between and within XML documents"),(0,i.kt)("li",{parentName:"ul"},"similar to link tag in HTML, but more powerful")))))),(0,i.kt)("h2",{id:"describing-data-with-xml"},"Describing Data with XML"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"raw data",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"Joe Marini\n- +1 (415) 555-1234 (home)\n- +1 (800) 555-9867 (work)\n- +1 (510) 555-1212 (mobile)\n- joe@joe.com\n"))),(0,i.kt)("li",{parentName:"ul"},"xml data",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<BusinessCard>\n  <name>Joe Marini</name>\n  <phone type="home">+1 (415) 555-1234</phone>\n  <phone type="work">+1 (800) 555-9867</phone>\n  <phone type="mobile">+1 (510) 555-1212</phone>\n  <email>joe@joe.com</email>\n</BusinessCard>\n')))),(0,i.kt)("h2",{id:"pros-and-cons-of-xml"},"Pros and Cons of XML"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"pros"),(0,i.kt)("th",{parentName:"tr",align:null},"cons"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML keeps content separate from presentation.")," You can take the data that your app uses & store it separately from how its's presented to users"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML is not suitable for very large data sets.")," might not be efficient if storing MB of data")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML is an open format that can be read by many apps.")," Many apps also have ability to output XML"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Some formats like JSON might be better for storing data"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML can be used on both the client and the server.")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"Some data types like images aren't represented well.")," Can try to encode images and insert into XML documents but can get ugly quickly")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML has widespread support in multiple languages and runtimes.")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML can quickly become difficult to read when complex"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"XML makes it possible for disparate systems to exchange data.")),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h2",{id:"types-of-xml-content"},"Types of XML Content"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"XML Document Declaration"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it is optional, but W3C recommends it"),(0,i.kt)("li",{parentName:"ul"},"it identifies the file as XML document"),(0,i.kt)("li",{parentName:"ul"},"provides a place for the encoding and standalone attributes"),(0,i.kt)("li",{parentName:"ul"},"must be at very beginning, no whitespace before it"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"encoding")," attribute defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"UTF-8")," if it is not included"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"standalone")," attribute identifies whether or not the document stands by itself or depends on something else",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Elements (Tags) and Attributes"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Elements")," must have valid names",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"can begin with underscore ",(0,i.kt)("inlineCode",{parentName:"li"},"_")," or letter",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"followed by letters, digits, periods, hyphens, underscores"))),(0,i.kt)("li",{parentName:"ul"},"cannot use the string ",(0,i.kt)("inlineCode",{parentName:"li"},"xml")," in any case combination because the W3C reserves that"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Attributes")," are specified on opening element tags",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"must start with letter or underscore",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"can be followed by digits, letters, hypens, periods, underscores"))),(0,i.kt)("li",{parentName:"ul"},'attributes that begin with "xml" are reserved'),(0,i.kt)("li",{parentName:"ul"},"attributes appear only once on a given element")))),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<element attribute="value">\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"valid tag names"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<_Element1>\n\n<My.Element>\n\n<My-Element_Name>\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"invalid tag names"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<1Tag> \x3c!-- can\'t begin with a number --\x3e\n\n<#Elem&ent> \x3c!-- invalid characters in name --\x3e\n\n<XmL> \x3c!-- the string "xml" is reserved --\x3e\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Comments"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"can go almost anywhere except",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"inside element brackets"),(0,i.kt)("li",{parentName:"ul"},"before the document declaration")))),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- This is an XML comment --\x3e\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"valid comments",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<element>\n  \x3c!-- comment --\x3e\n</element>\n"))),(0,i.kt)("li",{parentName:"ul"},"invalid comments",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<element \x3c!-- comment --\x3e >\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Character Data"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"specified using CDATA and are part of document content"),(0,i.kt)("li",{parentName:"ul"},"the actual contents of CDATA sections are not parsed by XML parser",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it skips the internal content and doesn't try to figure what kind of data might be in there"))),(0,i.kt)("li",{parentName:"ul"},"typically used to contain unescaped textual data (characters that aren't legal within parsed XML)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g.: &, <, >")))),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<![CDATA[This is unparsed text & data]]>\n")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"invalid xml",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<script>\n  function f(a, b) {\n    return a < b;  // invalid because < is illegal in XML\n  }\n<\/script>\n"))),(0,i.kt)("li",{parentName:"ul"},"valid xml by using CDATA",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<script>\n  <![CDATA[\n    function f(a, b) {\n      return a < b;\n    }\n  ]]>\n<\/script>\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Processing Instructions"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"a way for XML content to deliver special instructions to XML parser",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<?targetName instruction ?>\n"))),(0,i.kt)("li",{parentName:"ul"},'"xml" target name is reserved'),(0,i.kt)("li",{parentName:"ul"},"can start with number or letter, then followed by digits, letters, hyphens, periods, underscores"),(0,i.kt)("li",{parentName:"ul"},"e.g.: app has multiple spell checking modes",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<?SpellCheckMode mode="us-english" ?>\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Entity References"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"help shorten and modularize XML documents"),(0,i.kt)("li",{parentName:"ul"},"provide markup for illegal characters"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"General entities"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"replaces by parser with a full string"),(0,i.kt)("li",{parentName:"ul"},"e.g.:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"&copyright;\n&author;\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Character entities"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"&#60;\n&amp;\n&quot;\n")))))),(0,i.kt)("h2",{id:"view-groups-root-view-parent"},"View Groups, Root View, Parent"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"contains Child groups"),(0,i.kt)("li",{parentName:"ul"},"these child groups are Siblings of each other")),(0,i.kt)("h3",{id:"linear-layout"},"Linear Layout"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<LinearLayout attributeNames <TextView attributeNames /> /LinearLayound>")),(0,i.kt)("li",{parentName:"ul"},"align Views in a linear layout vertically or horizontally: TextView, ImageView"),(0,i.kt)("li",{parentName:"ul"},"Attribute names for ",(0,i.kt)("inlineCode",{parentName:"li"},"<LinearLayout> /LinearLayout>"),(0,i.kt)("h4",{parentName:"li",id:"xmlnsandroidhttpschemasandroidcomapkresandroid"},'xmlns:android="',(0,i.kt)("a",{parentName:"h4",href:"http://schemas.android.com/apk/res/android%22"},'http://schemas.android.com/apk/res/android"')),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  * this is used to specify that all of these attributes here belong to android\n  * Must add XML namespace declaration in opening tag of root view of XML file\n")),(0,i.kt)("h4",{parentName:"li",id:"orientation"},"orientation"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'  * android:orientation="vertical"\n  * android:orientation="horizontal"\n')),(0,i.kt)("h4",{parentName:"li",id:"size"},"Size"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'  * wrap_content\n      * android:layout_width="wrap_content"\n      * android:layout_height="wrap_content"\n  * match_parent\n      * use this to match device size\n      * android:layout_width="match_parent"\n      * android:layout_height="match_parent"\n')))),(0,i.kt)("h3",{id:"relative-layout"},"Relative Layout"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"can position children relative to the parent"),(0,i.kt)("li",{parentName:"ul"},"can position children relative to other children views"),(0,i.kt)("li",{parentName:"ul"},"Attribute names for ",(0,i.kt)("inlineCode",{parentName:"li"},"<RelativeLayout> </RelativeLayout>"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"same as LinearLayout, except orientation is not included")),(0,i.kt)("h4",{parentName:"li",id:"xmlnsandroidhttpschemasandroidcomapkresandroid-1"},'xmlns:android="',(0,i.kt)("a",{parentName:"h4",href:"http://schemas.android.com/apk/res/android%22"},'http://schemas.android.com/apk/res/android"')),(0,i.kt)("h4",{parentName:"li",id:"size-1"},"Size")),(0,i.kt)("li",{parentName:"ul"},"child attribute names",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'use android:layout_alignParentTop="true"'),(0,i.kt)("li",{parentName:"ul"},'use android:layout_alignParentBottom="true"'),(0,i.kt)("li",{parentName:"ul"},'use android:layout_alignParentLeft="true"'),(0,i.kt)("li",{parentName:"ul"},'use android:layout_alignParentRight="true"'),(0,i.kt)("li",{parentName:"ul"},'use android:layout_centerHorizontal="true"'),(0,i.kt)("li",{parentName:"ul"},'use android:padding="xxdp"'),(0,i.kt)("li",{parentName:"ul"},"Assign view ID names",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'android:id="@+id/textView_A"',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"is required when declaring id name for the first time"))),(0,i.kt)("li",{parentName:"ul"},"textView_A is the id name"))))),(0,i.kt)("li",{parentName:"ul"},"positioning children relative to other views",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'android:layout_toLeftOf="@id/textView_A"'),(0,i.kt)("li",{parentName:"ul"},'android:layout_above="@id/textView_A"')))))),(0,i.kt)("h2",{id:"xml-element-tags"},"XML element (tags)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"TextView, ImageView, Button"),(0,i.kt)("li",{parentName:"ul"},"e.g.: ",(0,i.kt)("inlineCode",{parentName:"li"},"<TextView attributeNames/>"))),(0,i.kt)("h2",{id:"attribute-names-these-must-be-inside-the-xml-element-tags"},"Attribute names, these must be inside the XML element tags"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"e.g.: android:text, android:textColor, android:background, android:layout_width, etc.")),(0,i.kt)("h3",{id:"attribute-names-for-textview-attributenames"},"Attribute names for ",(0,i.kt)("inlineCode",{parentName:"h3"},"<TextView attributeNames/>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'* android:text="Hello World!"\n#### colors\n    * limited colors\n        * android:background="@android:color/darker_gray"\n        * android:textColor="@android:color/darker_gray"\n    * almost unlimited colors by using the HEX COLOR CODE\n        * android:background="#2196F3"\n        * android:textColor="#2196F3"\n#### height and width\n    * Set size with dp\n        * android:layout_height="150dp"\n        * android:layout_width="150dp"\n    * disadvantage: have to keep manually changing the size\n    * Use wrap_content to change the size automatically\n        * android:layout_width="wrap_content"\n        * android:layout_height="wrap_content"\n    * Use match_parent to have the same size as parent\n        * android:layout_width="match_parent"\n        * android:layout_height="match_parent"\n    * Use android:layout_weight="0"\n        * 0 is the default value or shares\n        * layout weight is the number of layout shares a child can hold\n        * the more shares a child have, the more space it can claim from the layout\n        * during horzontal orientation\n            * android:layout_width="0dp"  must be 0dp cuz dunno the size\n            * android:layout_weight="1"  higher the value, more space given\n        * during vertial orientation\n            * android:layout_height="0dp"\n            * android:layout_weight="1"\n#### change text size\n    * android:textSize="45sp"\n        * Scale Independent Pixels (sp)\n            * A unit of measure similar to dp\n            * Makes app consistent across different devices of different densities\n        * Used for FONTS cuz it adjusts based on user\'s prefs & settings for txt size\n    * android:textAppearance="?android:textAppearanceSmall"\n    * android:textAppearance="?android:textAppearanceMedium"\n    * android:textAppearance="?android:textAppearanceLarge"\n#### change text styles\n    * android:textStyle="bold"\n    * android:textStyle="italic"\n#### change position  !!!Use only for RelativeLayout\n    * android:layout_alignParentRight="true"\n    * android:layout_alignParentLeft="false"  false by default, dun need declare\n    * android:layout_alignParentTop="true"\n    * android:layout_alignParentBottom="false"\n#### Padding: spaces inside the box\n    * according to material design principles:\n        * set components align to 8dp baseline grid\n        * set type aligns to 4db baseline grid\n        * set toolbars align to 4db square baseline grid\n    * android:padding="8dp"  add spaces to all sides\n    * android:paddingLeft="8dp"\n    * android:paddingRight="8dp"\n    * android:paddingTop="8dp"\n    * android:paddingBottom="8dp"\n#### Margin: spaces outside the box\n    * android:layout_margin="8dp"  add spaces to all sides\n    * android:layout_marginLeft="8dp"\n    * android:layout_marginRight="8dp"\n    * android:layout_marginTop="8dp"\n    * android:layout_marginBottom="8dp"\n')),(0,i.kt)("h3",{id:"attribute-names-for-imageview-attributenames"},"Attribute names for ",(0,i.kt)("inlineCode",{parentName:"h3"},"<ImageView attributeNames/>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'* android:src="@drawable/cake"\n    * @ symbol is used to say we\'re referencing a resource in the Android app\n    * src is the source\n    * drawable is the resource type\n    * cake is the filename\n* android:layout_width="wrap_content"\n* android:layout_height="wrap_content"\n* scaleType\n    * scaleType tells the device how to scale up or scale down image,\n    * based on the bound of the <ImageView attributeNames/>\n    * android:scaleType="center"\n        * center does not change the size of the image, only center it\n    * android:scaleType="centerCrop"\n        * This scales down the image to fit the height & width of the view\n        * also maintain aspect ratio of the original image\n        * so it doesn\'t get distorted\n        * once it scaled down, image will be centered & cropped to fit view size\n        * creates a FULL BLEED IMAGE with edge to edge look without white borders\n')),(0,i.kt)("h2",{id:"density-independent-pixels-dp"},"Density-Independent Pixels (dp)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Pixels are the number of squares that mades the resolution of the device"),(0,i.kt)("li",{parentName:"ul"},"better device have more pixels in the same amount of space"),(0,i.kt)("li",{parentName:"ul"},"the number of pixedls in a fixed space is known as the SCREEN'S PIXEL DENSITY",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"e.g.: a button that takes up 2 pixels by 2 pixels, device size is standard"),(0,i.kt)("li",{parentName:"ul"},"More pixels = higher resolution = button size will shrink (become smaller)"),(0,i.kt)("li",{parentName:"ul"},"Therefore, to make button size the same size despite the changes in resolution"),(0,i.kt)("li",{parentName:"ul"},"need to use dp"))),(0,i.kt)("li",{parentName:"ul"},"Recommended to make touch target 48dp minimum (translates to 9mm in physical size)")))}m.isMDXComponent=!0}}]);