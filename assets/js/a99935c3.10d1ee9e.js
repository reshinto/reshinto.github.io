"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[14792],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>m});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),l=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),g=l(r),m=a,f=g["".concat(p,".").concat(m)]||g[m]||u[m]||i;return r?t.createElement(f,o(o({ref:n},c),{},{components:r})):t.createElement(f,o({ref:n},c))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=g;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},4691:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=r(83117),a=(r(67294),r(3905));const i={},o="Go Example",s={unversionedId:"interviewPrep/designPatterns/Behavioral_patterns/Mediator/go/readme",id:"interviewPrep/designPatterns/Behavioral_patterns/Mediator/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Behavioral_patterns/Mediator/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Behavioral_patterns/Mediator/go",slug:"/interviewPrep/designPatterns/Behavioral_patterns/Mediator/go/",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Mediator/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Behavioral_patterns/Mediator/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Mediator/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Behavioral_patterns/Mediator/java/"}},p={},l=[],c={toc:l};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"go-example"},"Go Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype freightTrain struct {\n    mediator mediator\n}\n\nfunc (g *freightTrain) arrive() {\n    if !g.mediator.canArrive(g) {\n        fmt.Println("FreightTrain: Arrival blocked, waiting")\n        return\n    }\n    fmt.Println("FreightTrain: Arrived")\n}\n\nfunc (g *freightTrain) depart() {\n    fmt.Println("FreightTrain: Leaving")\n    g.mediator.notifyAboutDeparture()\n}\n\nfunc (g *freightTrain) permitArrival() {\n    fmt.Println("FreightTrain: Arrival permitted")\n    g.arrive()\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype mediator interface {\n    canArrive(train) bool\n    notifyAboutDeparture()\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\ntype passengerTrain struct {\n    mediator mediator\n}\n\nfunc (g *passengerTrain) arrive() {\n    if !g.mediator.canArrive(g) {\n        fmt.Println("PassengerTrain: Arrival blocked, waiting")\n        return\n    }\n    fmt.Println("PassengerTrain: Arrived")\n}\n\nfunc (g *passengerTrain) depart() {\n    fmt.Println("PassengerTrain: Leaving")\n    g.mediator.notifyAboutDeparture()\n}\n\nfunc (g *passengerTrain) permitArrival() {\n    fmt.Println("PassengerTrain: Arrival permitted, arriving")\n    g.arrive()\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype stationManager struct {\n    isPlatformFree bool\n    trainQueue     []train\n}\n\nfunc newStationManger() *stationManager {\n    return &stationManager{\n        isPlatformFree: true,\n    }\n}\n\nfunc (s *stationManager) canArrive(t train) bool {\n    if s.isPlatformFree {\n        s.isPlatformFree = false\n        return true\n    }\n    s.trainQueue = append(s.trainQueue, t)\n    return false\n}\n\nfunc (s *stationManager) notifyAboutDeparture() {\n    if !s.isPlatformFree {\n        s.isPlatformFree = true\n    }\n    if len(s.trainQueue) > 0 {\n        firstTrainInQueue := s.trainQueue[0]\n        s.trainQueue = s.trainQueue[1:]\n        firstTrainInQueue.permitArrival()\n    }\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype train interface {\n    arrive()\n    depart()\n    permitArrival()\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\nfunc main() {\n    stationManager := newStationManger()\n\n    passengerTrain := &passengerTrain{\n        mediator: stationManager,\n    }\n    freightTrain := &freightTrain{\n        mediator: stationManager,\n    }\n\n    passengerTrain.arrive()\n    freightTrain.arrive()\n    passengerTrain.depart()\n}\n")))}u.isMDXComponent=!0}}]);