"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[2352],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(a),d=n,k=m["".concat(o,".").concat(d)]||m[d]||u[d]||i;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9159:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={},l="[Mocha](https://mochajs.org/) and [Chai](https://www.chaijs.com/) unit testing",s={unversionedId:"automatedTests/javascript/mochaAndChai",id:"automatedTests/javascript/mochaAndChai",title:"[Mocha](https://mochajs.org/) and [Chai](https://www.chaijs.com/) unit testing",description:"Basic setup",source:"@site/docs/automatedTests/javascript/mochaAndChai.md",sourceDirName:"automatedTests/javascript",slug:"/automatedTests/javascript/mochaAndChai",permalink:"/docs/automatedTests/javascript/mochaAndChai",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/automatedTests/javascript/mochaAndChai.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"[Enzyme](https://enzymejs.github.io/enzyme/)",permalink:"/docs/automatedTests/javascript/enzyme/"},next:{title:"SuperTest for testing the server (incomplete)",permalink:"/docs/automatedTests/javascript/superTest"}},o={},p=[{value:"Basic setup",id:"basic-setup",level:2},{value:"Installation",id:"installation",level:3},{value:"Create test file",id:"create-test-file",level:3},{value:"Enable ES6 support and to ensure it is transpiled correctly by installing babel",id:"enable-es6-support-and-to-ensure-it-is-transpiled-correctly-by-installing-babel",level:3},{value:"Create a .babelrc file",id:"create-a-babelrc-file",level:4},{value:"run tests",id:"run-tests",level:2},{value:"save the above command in the package.json script test area",id:"save-the-above-command-in-the-packagejson-script-test-area",level:3},{value:"run test automatically",id:"run-test-automatically",level:3},{value:"Mocha Keywords",id:"mocha-keywords",level:2},{value:"describe",id:"describe",level:3},{value:"it",id:"it",level:3},{value:"Chai keywords",id:"chai-keywords",level:2},{value:"expect",id:"expect",level:3}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mocha-and-chai-unit-testing"},(0,n.kt)("a",{parentName:"h1",href:"https://mochajs.org/"},"Mocha")," and ",(0,n.kt)("a",{parentName:"h1",href:"https://www.chaijs.com/"},"Chai")," unit testing"),(0,n.kt)("h2",{id:"basic-setup"},"Basic setup"),(0,n.kt)("h3",{id:"installation"},"Installation"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"npm i --save-dev mocha chai")),(0,n.kt)("h3",{id:"create-test-file"},"Create test file"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"if the file you wanna test is named as abc.js, create the same file but ends with test.js"),(0,n.kt)("li",{parentName:"ul"},"save all test files into a test folder",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},"abc.test.js")))),(0,n.kt)("h3",{id:"enable-es6-support-and-to-ensure-it-is-transpiled-correctly-by-installing-babel"},"Enable ES6 support and to ensure it is transpiled correctly by installing ",(0,n.kt)("a",{parentName:"h3",href:"https://babeljs.io/"},"babel")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"not required if not using import and export from ES6",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},"npm i --save-dev @babel/core @babel/preset-env @babel/register")))),(0,n.kt)("h4",{id:"create-a-babelrc-file"},"Create a .babelrc file"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"the content of the file must have the following")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n  "presets": ["@babel/preset-env"]\n}\n')),(0,n.kt)("h2",{id:"run-tests"},"run tests"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"without ES6 support",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},'mocha "test/',"*",(0,n.kt)("em",{parentName:"p"},"/"),'.js"'))),(0,n.kt)("li",{parentName:"ul"},"with ES6",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},'npx mocha "test/',"*",(0,n.kt)("em",{parentName:"p"},"/"),'.test.js" --recursive --require @babel/register')))),(0,n.kt)("h3",{id:"save-the-above-command-in-the-packagejson-script-test-area"},"save the above command in the package.json script test area"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'"scripts": {\n  "test": "npx mocha \'test/**/*.test.js\' --recursive --require @babel/register"\n},\n')),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"run test with ",(0,n.kt)("inlineCode",{parentName:"li"},"npm test"))),(0,n.kt)("h3",{id:"run-test-automatically"},"run test automatically"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"add ",(0,n.kt)("inlineCode",{parentName:"li"},"-watch")," into the script in the package.json file")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'"scripts": {\n  "test": "npx mocha \'test/**/*.test.js\' --recursive --require @babel/register -watch"\n},\n')),(0,n.kt)("h2",{id:"mocha-keywords"},"Mocha Keywords"),(0,n.kt)("h3",{id:"describe"},"describe"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Use to group similar tests together")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"it is a function that takes 2 basic arguments"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"1st arg is a string used to describe the group of tests we are running"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import {getLetterCount} from "./letter-count";\n\ndescribe("getLetterCount - basic functionality");\n'))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"2nd arg is a function that contains the actual tests we wanna run"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"inside this function, we can write more describes to curther categorize our tests")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'or write a mocha function called "it"'),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import {getLetterCount} from "./letter-count";\n\ndescribe("getLetterCount - basic functionality", () => {\n  it();\n});\n')))))))))),(0,n.kt)("h3",{id:"it"},"it"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"use to denote individual tests / individual pieces of functionality that we want to test")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"it is a function that takes 2 basic arguments"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"1st arg is a string to tell us what exact piece of functionality this test will be covering"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import {getLetterCount} from "./letter-count";\n\ndescribe("getLetterCount - basic functionality", () => {\n  it("returns an empty object when passed an empty string");\n});\n'))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"2nd arg is a function that contains the actual claims (assertions) we want to make about our code"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},'Need to use the "expect" keyword from chai library to make the assertions'),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"example:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'import {expect} from "chai";\nimport {getLetterCount} from "./letter-count";\n\ndescribe("getLetterCount - basic functionality", () => {\n  it("returns an empty object when passed an empty string", () => {\n    const expected = {};\n    const actual = getLetterCount("");\n    expect(actual).to.deep.equal(expected);\n  });\n});\n')))))))))),(0,n.kt)("h2",{id:"chai-keywords"},"Chai keywords"),(0,n.kt)("h3",{id:"expect"},(0,n.kt)("a",{parentName:"h3",href:"https://www.chaijs.com/api/bdd/"},"expect")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"to.",(0,n.kt)("a",{parentName:"li",href:"https://www.chaijs.com/api/bdd/#method_deep"},"deep"),".equal",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"compare 2 different objects",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"set actual to store the actual value of the return value of the function we want to test"),(0,n.kt)("li",{parentName:"ul"},"set expected as the value we expect the actual variable to be"),(0,n.kt)("li",{parentName:"ul"},'must use "deep" because we are comparing objects, which are stored at different memory locations',(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},'if "deep" is not used, result will be false even if the values are equal',(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"result will only return true if both objects are pointed to the same memory location")))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"expect(actual).to.deep.equal(expected);\n"))))))),(0,n.kt)("li",{parentName:"ul"},"to.equal",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"compare 2 values (numbers, string, boolean, etc.)")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"expect(actual).to.equal(expected);\n"))),(0,n.kt)("li",{parentName:"ul"},"to.be.",(0,n.kt)("a",{parentName:"li",href:"https://www.chaijs.com/api/bdd/#method_a"},"a"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},'check type ("function", "string", "object", "array", "null", "undefined", "error", "promise", etc.)')),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'expect(actual).to.be.a("function"); // words not starting with a vowel uses "a"\nexpect([]).to.be.an("array"); // object, array, undefined, error uses "an"\n')))))}u.isMDXComponent=!0}}]);