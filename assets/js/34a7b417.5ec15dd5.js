"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[3974],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),f=c(n),d=a,m=f["".concat(p,".").concat(d)]||f[d]||u[d]||i;return n?r.createElement(m,s(s({ref:t},l),{},{components:n})):r.createElement(m,s({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},38833:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const i={},s="Example 2",o={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Facade/python/example2",id:"interviewPrep/designPatterns/Structural_patterns/Facade/python/example2",title:"Example 2",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Facade/python/example2.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Facade/python",slug:"/interviewPrep/designPatterns/Structural_patterns/Facade/python/example2",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Facade/python/example2",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Facade/python/example2.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Python Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Facade/python/"},next:{title:"Swift Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Facade/swift/"}},p={},c=[],l={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"example-2"},"Example 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class Engine:\n    def __init__(self):\n        # how much the motor is spinning in revs per minute\n        self.spin = 0\n\n    def start(self, spin):\n        self.spin = min(spin, 3000)\n\n\nclass StarterMotor:\n    def __init__(self):\n        # how much the starter motor is spinning in revs per minute\n        self.spin = 0\n\n    def start(self, charge):\n        # if there is enough power then spin fast\n        if (charge > 50):\n            self.spin = 2500\n\n\nclass Battery:\n    def __init__(self):\n        # % charged, starts flat\n        self.charge = 0\n\n\nclass Car:\n    # the facade object that deals with the battery, engine and starter motor\n\n    def __init__(self):\n        self.battery = Battery()\n        self.starter = StarterMotor()\n        self.engine = Engine()\n\n    def turn_key(self):\n        self.starter.start(self.battery.charge)\n        self.engine.start(self.starter.spin)\n        if (self.engine.spin > 0):\n            print("Engine started")\n        else:\n            print("Engine not started")\n\n    def jump(self):\n        self.battery.charge = 100\n        print("Jumped")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from facade import Car\n\nc = Car()\nc.turn_key()  # engine not started because there is no charge\n\nc.jump()\nc.turn_key()  # engine starts because it has been charged\n")))}u.isMDXComponent=!0}}]);