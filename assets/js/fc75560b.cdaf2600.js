"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[5359],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,g=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},54147:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={},i="Java Spring Boot tests",s={unversionedId:"Technologies/automatedTests/java/springboot/readme",id:"Technologies/automatedTests/java/springboot/readme",title:"Java Spring Boot tests",description:"Sample",source:"@site/docs/Technologies/automatedTests/java/springboot/readme.md",sourceDirName:"Technologies/automatedTests/java/springboot",slug:"/Technologies/automatedTests/java/springboot/",permalink:"/docs/Technologies/automatedTests/java/springboot/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/automatedTests/java/springboot/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"UML (Unified Modeling Language)",permalink:"/docs/Technologies/UMLdiagrams/"},next:{title:"Enzyme",permalink:"/docs/Technologies/automatedTests/javascript/enzyme/"}},c={},l=[{value:"Sample",id:"sample",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"java-spring-boot-tests"},"Java Spring Boot tests"),(0,o.kt)("h2",{id:"sample"},"Sample"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"package com.example.demoapi;\n\nimport static org.assertj.core.api.AssertionsForClassTypes.assertThat;\nimport org.junit.jupiter.api.Test;\n\nclass DemoApiApplicationTests {\n\n    Calculator underTest = new Calculator();\n\n    @Test\n    void itShouldAddTwoNumbers() {\n        // given\n        int numberOne = 20;\n        int numberTwo = 30;\n\n        // when\n        int result = underTest.add(numberOne, numberTwo);\n\n        // then\n        int expected = 50;\n        assertThat(result).isEqualTo(expected);\n    }\n\n    class Calculator {\n        int add(int a, int b) {\n            return a + b;\n        }\n    }\n}\n")))}u.isMDXComponent=!0}}]);