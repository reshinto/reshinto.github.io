"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[1846],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>y});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=c(t),y=a,f=d["".concat(u,".").concat(y)]||d[y]||p[y]||i;return t?r.createElement(f,s(s({ref:n},l),{},{components:t})):r.createElement(f,s({ref:n},l))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1489:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=t(7462),a=(t(7294),t(3905));const i={},s="Validate Subsequence",o={unversionedId:"interviewPrep/codingTests/easy/arrays/validateSubsequence",id:"interviewPrep/codingTests/easy/arrays/validateSubsequence",title:"Validate Subsequence",description:"Given two non-empty arrays of integers, write a function that determines",source:"@site/docs/interviewPrep/codingTests/easy/arrays/validateSubsequence.md",sourceDirName:"interviewPrep/codingTests/easy/arrays",slug:"/interviewPrep/codingTests/easy/arrays/validateSubsequence",permalink:"/docs/interviewPrep/codingTests/easy/arrays/validateSubsequence",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/codingTests/easy/arrays/validateSubsequence.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Two Number Sum",permalink:"/docs/interviewPrep/codingTests/easy/arrays/twoNumberSum"},next:{title:"Find Closest Value In BST",permalink:"/docs/interviewPrep/codingTests/easy/binarySearchTrees/findClosestValueInBST"}},u={},c=[],l={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"validate-subsequence"},"Validate Subsequence"),(0,a.kt)("p",null,"Given two non-empty arrays of integers, write a function that determines\nwhether the second array is a subsequence of the first one."),(0,a.kt)("p",null,"A subsequence of an array is a set of numbers that aren't necessarily adjacent\nin the array but that are in the same order as they appear in the array. For\ninstance, the numbers ",(0,a.kt)("inlineCode",{parentName:"p"},"[1, 3, 4]")," form a subsequence of the array ",(0,a.kt)("inlineCode",{parentName:"p"},"[1, 2, 3, 4]"),"\n, and so do the numbers ",(0,a.kt)("inlineCode",{parentName:"p"},"[2, 4]"),".\nNote that a single number in an array and the array itself are both valid\nsubsequences of the array."),(0,a.kt)("p",null,"Sample Input\n",(0,a.kt)("inlineCode",{parentName:"p"},"array = [5, 1, 22, 25, 6, -1, 8, 10]"),"\n",(0,a.kt)("inlineCode",{parentName:"p"},"sequence = [1, 6, -1, 10]")),(0,a.kt)("p",null,"Sample Output\ntrue"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# Solution 1\ndef isValidSubsequence(array, sequence):\n  # Write your code here.\n  j = 0\n  sequenceLength = len(sequence)\n  for v in array:\n    if j == sequenceLength:\n      break\n    if v in sequence and sequence[j] == v:\n      j += 1\n  return j == sequenceLength\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function isValidSubsequence(array, sequence) {\n  // Write your code here.\n  let seqIdx = 0;\n  for (let i = 0; i < array.length; i++) {\n    if (seqIdx === sequence.length) break;\n    if (array[i] === sequence[seqIdx]) seqIdx++;\n  }\n  return seqIdx === sequence.length;\n}\n")))}p.isMDXComponent=!0}}]);