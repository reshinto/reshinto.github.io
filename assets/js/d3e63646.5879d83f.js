"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[2658],{3905:(e,t,r)=>{r.d(t,{Zo:()=>a,kt:()=>d});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=i.createContext({}),l=function(e){var t=i.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},a=function(e){var t=l(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,a=c(e,["components","mdxType","originalType","parentName"]),f=l(r),d=n,b=f["".concat(s,".").concat(d)]||f[d]||u[d]||o;return r?i.createElement(b,p(p({ref:t},a),{},{components:r})):i.createElement(b,p({ref:t},a))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,p[1]=c;for(var l=2;l<o;l++)p[l]=r[l];return i.createElement.apply(null,p)}return i.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4191:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=r(83117),n=(r(67294),r(3905));const o={},p="Liskov Substitution Principle",c={unversionedId:"interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple/readme",id:"interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple/readme",title:"Liskov Substitution Principle",description:"- if S is a subtype of T, then objects of type T may be replaced with objects of type S",source:"@site/docs/interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple/readme.md",sourceDirName:"interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple",slug:"/interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple/",permalink:"/docs/interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/design_principles/SOLID/LiskovSubstitutionPrinciple/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interface Segregation Principle",permalink:"/docs/interviewPrep/design_principles/SOLID/InterfaceSegregationPrinciple/"},next:{title:"Open Closed Principle",permalink:"/docs/interviewPrep/design_principles/SOLID/OpenClosedPrinciple/"}},s={},l=[],a={toc:l};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},a,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"liskov-substitution-principle"},"Liskov Substitution Principle"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"if S is a subtype of T, then objects of type T may be replaced with objects of type S",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"which means that every single usage of the parent class should be replaceable with its child class")))))}u.isMDXComponent=!0}}]);