"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[6330],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>p});var r=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,i=function(e,t){if(null==e)return{};var a,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=r.createContext({}),m=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},u=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=m(a),p=i,d=h["".concat(s,".").concat(p)]||h[p]||c[p]||o;return a?r.createElement(d,n(n({ref:t},u),{},{components:a})):r.createElement(d,n({ref:t},u))}));function p(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,n=new Array(o);n[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,n[1]=l;for(var m=2;m<o;m++)n[m]=a[m];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},40558:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>n,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var r=a(83117),i=(a(67294),a(3905));const o={},n="Algorithms",l={unversionedId:"interviewPrep/algorithms_and_techniques/readme",id:"interviewPrep/algorithms_and_techniques/readme",title:"Algorithms",description:"- it is any well-defined computational procedure that takes some value, or set of values as input and produces some value, or set of values, as output",source:"@site/docs/interviewPrep/algorithms_and_techniques/readme.md",sourceDirName:"interviewPrep/algorithms_and_techniques",slug:"/interviewPrep/algorithms_and_techniques/",permalink:"/docs/interviewPrep/algorithms_and_techniques/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/algorithms_and_techniques/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gradle",permalink:"/docs/Technologies/projectManagementTools/gradle/"},next:{title:"Big O Notation",permalink:"/docs/interviewPrep/algorithms_and_techniques/bigO"}},s={},m=[{value:"Algorithm Characteristics",id:"algorithm-characteristics",level:2},{value:"Common Algorithms",id:"common-algorithms",level:2},{value:"Search Algorithms",id:"search-algorithms",level:3},{value:"Sorting Algorithms",id:"sorting-algorithms",level:3},{value:"Computational Algorithms",id:"computational-algorithms",level:3},{value:"Collection Algorithms",id:"collection-algorithms",level:3},{value:"Algorithm Performance",id:"algorithm-performance",level:2},{value:"Correctness of Algorithm",id:"correctness-of-algorithm",level:2},{value:"Analyzing Algorithm",id:"analyzing-algorithm",level:2}],u={toc:m};function c(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"algorithms"},"Algorithms"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"it is any well-defined computational procedure that takes some value, or set of values as input and produces some value, or set of values, as output",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it is a sequence of computational steps that transform the input into the output"))),(0,i.kt)("li",{parentName:"ul"},"it is also a tool for solving a well-specified computational problem",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The statement of the problem specifies in general terms the desired input/output relationship"),(0,i.kt)("li",{parentName:"ul"},"The algorithm describes a specific computational procedure for achieving that input/output relationship")))),(0,i.kt)("h2",{id:"algorithm-characteristics"},"Algorithm Characteristics"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Algorithms usually have a specific set of input values that it can work with to get a result",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For example, sorting algorithms take collections of data values and try to order them"))),(0,i.kt)("li",{parentName:"ul"},"can also talk about the classification of an algorithm using a variety of criteria",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Some algorithms operate on their datasets sequentially, which means they are sequential in nature"),(0,i.kt)("li",{parentName:"ul"},"Whereas a parallel algorithm can split a dataset into smaller pieces and then work with each one at the same time"))),(0,i.kt)("li",{parentName:"ul"},"The algorithm can be exact by producing a known predictable value",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it can also be approximate by trying to find an answer that may not be consistent"),(0,i.kt)("li",{parentName:"ul"},"For example, a face recognition algorithm may not give the same answer every time with the same face"))),(0,i.kt)("li",{parentName:"ul"},"Algorithms can be deterministic, where they perform each step with an exact solution",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it can be non-deterministic if they try to find a solution using consecutive guesses that become more accurate over time")))),(0,i.kt)("h2",{id:"common-algorithms"},"Common Algorithms"),(0,i.kt)("h3",{id:"search-algorithms"},"Search Algorithms"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"it find specific data in structure",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"for example, a substring within a string"))),(0,i.kt)("li",{parentName:"ul"},"One of the most common types of algorithms you come across is search algorithms, which are used when you need to find a piece of data within a larger data structure",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For example, searching for a substring within a larger string, or perhaps searching for a file in a set of subfolder in the file system")))),(0,i.kt)("h3",{id:"sorting-algorithms"},"Sorting Algorithms"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Take a dataset and apply a sort to order it"),(0,i.kt)("li",{parentName:"ul"},"Sorting algorithms are another very common type used when working with ordered datasets",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"they take a dataset and put them in a specific order")))),(0,i.kt)("h3",{id:"computational-algorithms"},"Computational Algorithms"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Computational algorithms are used to get from one dataset to another",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"example, calculating whether a given number is a prime number, or perhaps converting a temperature from one scale to another")))),(0,i.kt)("h3",{id:"collection-algorithms"},"Collection Algorithms"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Work with collections of data",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"count specific items, navigate among data elements, filter out unwanted data etc."))),(0,i.kt)("li",{parentName:"ul"},"there are collection algorithms that involve manipulating or navigating between sets of data that are stored in a particular structure",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"examples, counting the number of specific items, filtering out unwanted data, etc.")))),(0,i.kt)("h2",{id:"algorithm-performance"},"Algorithm Performance"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"algorithms are designed to work with datasets and solve computational problems",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"it is important to understand how to talk about the performance of an algorithm"),(0,i.kt)("li",{parentName:"ul"},"This is an important factor in how you choose a particular algorithm for solving a computational problem, as well as understanding how your program will behave in different circumstances"))),(0,i.kt)("li",{parentName:"ul"},"if we want to measure how the performance of an algorithm changes based on the size of the input dataset",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"use the term called ",(0,i.kt)("inlineCode",{parentName:"li"},"Big-O notation")," to describe the performance of an algorithm",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This notation format is used to describe how a particular algorithm works as the input data set grows over time"),(0,i.kt)("li",{parentName:"ul"},"the reason the letter ",(0,i.kt)("inlineCode",{parentName:"li"},"O")," is used is that the rate at which the complexity of an algorithm grows is also called order of operation",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"It usually describes a worst-case scenario of how long it will take to complete a given operation"),(0,i.kt)("li",{parentName:"ul"},"it's important to note that many algorithms and data structures have more than one Big-O value"),(0,i.kt)("li",{parentName:"ul"},"For example, data structures can usually perform several types of operations, such as inserting or searching for values, each with its own order of operations")))))))),(0,i.kt)("h2",{id:"correctness-of-algorithm"},"Correctness of Algorithm"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"An algorithm is considered correct if, at any admissible (for a given problem) input, it finishes its work and produces a result that meets the requirements of the problem",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"In this case, the algorithm is said to solve the given computational problem"))),(0,i.kt)("li",{parentName:"ul"},"An incorrect algorithm (for some input) may not stop at all or give an incorrect result",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"but this does not mean that such algorithms are completely useless"),(0,i.kt)("li",{parentName:"ul"},"If errors are rare enough, or it is possible to control the frequency of errors, we may admit the use of incorrect algorithms"),(0,i.kt)("li",{parentName:"ul"},"It may be that initially we have a specific task with one data set, and we have compiled an algorithm",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Then some new data begins to arrive, there are not many of them, but with them the algorithm slows down significantly"),(0,i.kt)("li",{parentName:"ul"},"But since there is little such data so far, the algorithm is quite working")))))),(0,i.kt)("h2",{id:"analyzing-algorithm"},"Analyzing Algorithm"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Analyzing an algorithm has come to mean predicting the resources that the algorithm requires",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Occasionally, resources such as memory, communication bandwidth, or computer hardware are of primary concern, but most often it is computational time that we want to measure"),(0,i.kt)("li",{parentName:"ul"},"Generally, by analyzing several candidate algorithms for a problem, we can identify a most efficient one"),(0,i.kt)("li",{parentName:"ul"},"Such analysis may indicate more than one viable candidate, but we can often discard several inferior algorithms in the process"))),(0,i.kt)("li",{parentName:"ul"},"Before we can analyze an algorithm, we must have a model of the implementation technology that we will use, including a model for the resources of that technology and their costs",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"we will assume a generic one processor, random-access machine (RAM) model of computation as our implementation technology and understand that our algorithms will be implemented as computer programs"),(0,i.kt)("li",{parentName:"ul"},"In the RAM model, instructions are executed one after another, with no concurrent operations")))))}c.isMDXComponent=!0}}]);