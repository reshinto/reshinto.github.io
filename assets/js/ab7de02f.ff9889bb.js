"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[5046],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var i=n.createContext({}),c=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(i.Provider,{value:r},e.children)},g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},l=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),l=c(t),d=s,m=l["".concat(i,".").concat(d)]||l[d]||g[d]||o;return t?n.createElement(m,a(a({ref:r},u),{},{components:t})):n.createElement(m,a({ref:r},u))}));function d(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=t.length,a=new Array(o);a[0]=l;var p={};for(var i in r)hasOwnProperty.call(r,i)&&(p[i]=r[i]);p.originalType=e,p.mdxType="string"==typeof e?e:s,a[1]=p;for(var c=2;c<o;c++)a[c]=t[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}l.displayName="MDXCreateElement"},8004:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=t(7462),s=(t(7294),t(3905));const o={},a="Add Swagger to Express",p={unversionedId:"API/express/swagger/readme",id:"API/express/swagger/readme",title:"Add Swagger to Express",description:"Default express app",source:"@site/docs/API/express/swagger/readme.md",sourceDirName:"API/express/swagger",slug:"/API/express/swagger/",permalink:"/docs/API/express/swagger/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/API/express/swagger/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Express",permalink:"/docs/API/express/"},next:{title:"Flask",permalink:"/docs/API/flaskTutorial/"}},i={},c=[{value:"Default express app",id:"default-express-app",level:2},{value:"Add route infos into Swagger",id:"add-route-infos-into-swagger",level:3}],u={toc:c};function g(e){let{components:r,...o}=e;return(0,s.kt)("wrapper",(0,n.Z)({},u,o,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"add-swagger-to-express"},"Add Swagger to Express"),(0,s.kt)("h2",{id:"default-express-app"},"Default express app"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"npm i express"),(0,s.kt)("pre",{parentName:"blockquote"},(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'const express = require("express");\nconst app = express();\n'))),(0,s.kt)("p",null,"const port = process.env.PORT || 5000;"),(0,s.kt)("p",null,'// Routes\napp.get("/customers", (req, res) => {\nres.status(200).send("Customer results");\n});'),(0,s.kt)("p",null,'app.put("/customer", (req, res) => {\nres.status(200).send("Successfully updated customer");\n});'),(0,s.kt)("p",null,"app.listen(port, () => {\nconsole.log(",(0,s.kt)("inlineCode",{parentName:"p"},"Server is running on port ${port}"),");\n});"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'## Setup basic Swagger options\n> npm i swagger-ui-express swagger-jsdoc\n```javascript\nconst express = require("express");\nconst app = express();\nconst swaggerJsDoc = require("swagger-jsdoc");\nconst swaggerUi = require("swagger-ui-express");\n\nconst port = process.env.PORT || 5000;\n\n// for more info: https://swagger.io/specification/#infoObject\nconst swaggerOptions = {\n  swaggerDefinition: {\n    info: {\n      title: "Customer API",\n      description: "Customer API Information",\n      contact: {\n        name: "Amazing Developer",\n      },\n      servers: ["http://localhost:5000"],\n    },\n  },\n  // [\'.routes/*.js\']\n  apis: ["app.js"],\n};\n\nconst swaggerDocs = swaggerJsDoc(swaggerOptions);\n\napp.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocs));\n\n// Routes\napp.get("/customers", (req, res) => {\n  res.status(200).send("Customer results");\n});\n\napp.put("/customer", (req, res) => {\n  res.status(200).send("Successfully updated customer");\n});\n\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"verify at ",(0,s.kt)("inlineCode",{parentName:"li"},"http://localhost:5000/api-docs/")),(0,s.kt)("li",{parentName:"ul"},"result\n",(0,s.kt)("img",{alt:"Basic Swagger Setup",src:t(9815).Z,width:"1918",height:"868"}))),(0,s.kt)("h3",{id:"add-route-infos-into-swagger"},"Add route infos into Swagger"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},'const express = require("express");\nconst app = express();\nconst swaggerJsDoc = require("swagger-jsdoc");\nconst swaggerUi = require("swagger-ui-express");\n\nconst port = process.env.PORT || 5000;\n\n// for more info: https://swagger.io/specification/#infoObject\nconst swaggerOptions = {\n  swaggerDefinition: {\n    info: {\n      version: "1.0.0",\n      title: "Customer API",\n      description: "Customer API Information",\n      contact: {\n        name: "Amazing Developer"\n      },\n      servers: ["http://localhost:5000"]\n    }\n  },\n  // [\'.routes/*.js\']\n  apis: ["app.js"]\n};\n\nconst swaggerDocs = swaggerJsDoc(swaggerOptions);\napp.use("/api-docs", swaggerUi.serve, swaggerUi.setup(swaggerDocs));\n\n// Routes\n// indentatin in the swagger declaration is important\n/**\n * @swagger\n * /customers:\n *  get:\n *    description: Use to request all customers\n *    responses:\n *      \'200\':\n *        description: A successful response\n */\napp.get("/customers", (req, res) => {\n  res.status(200).send("Customer results");\n});\n\n/**\n * @swagger\n * /customers:\n *    put:\n *      description: Use to return all customers\n *    parameters:\n *      - name: customer\n *        in: query\n *        description: Name of our customer\n *        required: false\n *        schema:\n *          type: string\n *          format: string\n *    responses:\n *      \'201\':\n *        description: Successfully created user\n */\napp.put("/customer", (req, res) => {\n  res.status(200).send("Successfully updated customer");\n});\n\napp.listen(port, () => {\n  console.log(`Server listening on port ${port}`);\n});\n')),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Swagger Route Example",src:t(5395).Z,width:"1890",height:"1036"}),"\n",(0,s.kt)("img",{alt:"Swagger Route Content Example",src:t(1071).Z,width:"1886",height:"1246"})))}g.isMDXComponent=!0},9815:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/basicSwaggerSetup-02b8b1b97b0a8ce53b1e266e903a2a56.png"},1071:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/swaggerRouteContentExample-7e2748b8ce30f17d23b0ac8e4fea9687.png"},5395:(e,r,t)=>{t.d(r,{Z:()=>n});const n=t.p+"assets/images/swaggerRouteExample-e6dbbf44d6935b15b91d575b9609031d.png"}}]);