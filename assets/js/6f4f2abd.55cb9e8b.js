"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[99451],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),f=a,h=u["".concat(c,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(h,o(o({ref:t},l),{},{components:n})):r.createElement(h,o({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},49393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(83117),a=(n(67294),n(3905));const i={},o="Python Example",p={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Adapter/python/readme",id:"interviewPrep/designPatterns/Structural_patterns/Adapter/python/readme",title:"Python Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/python/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Adapter/python",slug:"/interviewPrep/designPatterns/Structural_patterns/Adapter/python/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/python/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/python/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JavaScript",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/javascript/"},next:{title:"Example 2",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Adapter/python/example2"}},c={},s=[],l={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"python-example"},"Python Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'"""\nAdapter Design Pattern\n\nIntent: Provides a unified interface that allows objects with incompatible\ninterfaces to collaborate.\n"""\n\n\nclass Target:\n    """\n    The Target defines the domain-specific interface used by the client code.\n    """\n\n    def request(self) -> str:\n        return "Target: The default target\'s behavior."\n\n\nclass Adaptee:\n    """\n    The Adaptee contains some useful behavior, but its interface is incompatible\n    with the existing client code. The Adaptee needs some adaptation before the\n    client code can use it.\n    """\n\n    def specific_request(self) -> str:\n        return ".eetpadA eht fo roivaheb laicepS"\n\n\nclass Adapter(Target, Adaptee):\n    """\n    The Adapter makes the Adaptee\'s interface compatible with the Target\'s\n    interface via multiple inheritance.\n    """\n\n    def request(self) -> str:\n        return f"Adapter: (TRANSLATED) {self.specific_request()[::-1]}"\n\n\ndef client_code(target: "Target") -> None:\n    """\n    The client code supports all classes that follow the Target interface.\n    """\n\n    print(target.request(), end="")\n\n\nif __name__ == "__main__":\n    print("Client: I can work just fine with the Target objects:")\n    target = Target()\n    client_code(target)\n    print("\\n")\n\n    adaptee = Adaptee()\n    print("Client: The Adaptee class has a weird interface. "\n          "See, I don\'t understand it:")\n    print(f"Adaptee: {adaptee.specific_request()}", end="\\n\\n")\n\n    print("Client: But I can work with it via the Adapter:")\n    adapter = Adapter()\n    client_code(adapter)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Client: I can work just fine with the Target objects:\nTarget: The default target's behavior.\n\nClient: The Adaptee class has a weird interface. See, I don't understand it:\nAdaptee: .eetpadA eht fo roivaheb laicepS\n\nClient: But I can work with it via the Adapter:\nAdapter: (TRANSLATED) Special behavior of the Adaptee.\n")))}d.isMDXComponent=!0}}]);