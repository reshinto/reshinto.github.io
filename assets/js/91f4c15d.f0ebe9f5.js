"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[17905],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return a?n.createElement(g,o(o({ref:t},c),{},{components:a})):n.createElement(g,o({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3683:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(83117),r=(a(67294),a(3905));const i={},o="Spring",s={unversionedId:"Technologies/API/spring/readme",id:"Technologies/API/spring/readme",title:"Spring",description:"- it is an open source framework for building enterprise Java apps",source:"@site/docs/Technologies/API/spring/readme.md",sourceDirName:"Technologies/API/spring",slug:"/Technologies/API/spring/",permalink:"/docs/Technologies/API/spring/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/API/spring/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flask",permalink:"/docs/Technologies/API/flaskTutorial/"},next:{title:"Springboot guide",permalink:"/docs/Technologies/API/spring/springboot/"}},l={},p=[{value:"Core Features",id:"core-features",level:2},{value:"Inversion of Control (IoC) Container",id:"inversion-of-control-ioc-container",level:3},{value:"Support for aspect oriented programming",id:"support-for-aspect-oriented-programming",level:3},{value:"Data access framework",id:"data-access-framework",level:3},{value:"Transaction management framework",id:"transaction-management-framework",level:3},{value:"Spring MVC framework",id:"spring-mvc-framework",level:3},{value:"Spring web service",id:"spring-web-service",level:3},{value:"Spring test frameworks",id:"spring-test-frameworks",level:3},{value:"Spring Framework Architecture",id:"spring-framework-architecture",level:2},{value:"Core container",id:"core-container",level:3},{value:"Data access/integration",id:"data-accessintegration",level:3},{value:"Web",id:"web",level:3},{value:"Other Modules",id:"other-modules",level:3}],c={toc:p};function m(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"spring"},"Spring"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is an open source framework for building enterprise Java apps"),(0,r.kt)("li",{parentName:"ul"},"it aims to simplify the complex and cumbersome enterprise Java app development process by offering a framework that includes technologies such as",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Aspect-oriented programming")," (AOP)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Dependency Injection")," (DI)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Plain Old Java Object")," (POJO)"))),(0,r.kt)("li",{parentName:"ul"},"it is a lightweight framework that can be used to create scalable, secure, and robust enterprise web apps"),(0,r.kt)("li",{parentName:"ul"},"it can be considered as a collection of sub frameworks such as",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spring Web Flow")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spring MVC")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spring ORM")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Spring")," also supports ",(0,r.kt)("inlineCode",{parentName:"li"},"Kotlin")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Groovy")),(0,r.kt)("li",{parentName:"ul"},"it is also the base that powers all other spring based projects such as",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spring Boot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spring Cloud")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Spring GraphQL"))))),(0,r.kt)("h2",{id:"core-features"},"Core Features"),(0,r.kt)("h3",{id:"inversion-of-control-ioc-container"},"Inversion of Control (IoC) Container"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is one of the core features of Spring that provides a streamlined way to configure and manage Java objects"),(0,r.kt)("li",{parentName:"ul"},"it is responsible for managing the lifecycle of a defined Java object, significantly increasing the configurability of a Spring-based application"),(0,r.kt)("li",{parentName:"ul"},"it uses the dependency injection or dependency lookup patterns to provide the object reference during runtime"),(0,r.kt)("li",{parentName:"ul"},"it consists of assembler code that is required for configuration management"),(0,r.kt)("li",{parentName:"ul"},"Spring provides ",(0,r.kt)("inlineCode",{parentName:"li"},"org.springframework.beans")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"org.springframework.context")," packages that can be used to facilitate these functions")),(0,r.kt)("h3",{id:"support-for-aspect-oriented-programming"},"Support for aspect oriented programming"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"AOP aims to provide more modularity to the cross-cutting concerns, which are functions that span across the application, such as",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Logging"),(0,r.kt)("li",{parentName:"ul"},"Caching"),(0,r.kt)("li",{parentName:"ul"},"Transaction management"),(0,r.kt)("li",{parentName:"ul"},"Authentication"))),(0,r.kt)("li",{parentName:"ul"},"AOP complements object-oriented programming by providing a different way to structure the program, where OOP modularity is based on classes"),(0,r.kt)("li",{parentName:"ul"},"In AOP, the main unit of modularity is an aspect (cross-cutting concern)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This enables users to use AOP to create custom aspects and declarative enterprise services"),(0,r.kt)("li",{parentName:"ul"},"The IoC container does not depend on AOP, offering further freedom for developers to select their preferred programming method"))),(0,r.kt)("li",{parentName:"ul"},"However, Aspect-Oriented Programming combined with the Spring IoC provides a robust middleware solution")),(0,r.kt)("h3",{id:"data-access-framework"},"Data access framework"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Database communication issues are one of the common issues developers face when developing applications"),(0,r.kt)("li",{parentName:"ul"},"Spring simplifies the database communication process by providing direct support for popular data access frameworks in Java, such as",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"JDBC, Hibernate, Java Persistence API (JPA)"))),(0,r.kt)("li",{parentName:"ul"},"it offers features such as resource management, exception handling, and resource wrapping for all the supported data access frameworks, further simplifying the development process")),(0,r.kt)("h3",{id:"transaction-management-framework"},"Transaction management framework"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Unlike the Java Transaction API (JTA), the Spring Transaction Management Framework is not limited to global and nested transactions"),(0,r.kt)("li",{parentName:"ul"},"Spring offers an abstraction mechanism for Java that enables users to:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Work with local, global, and nested transactions"),(0,r.kt)("li",{parentName:"ul"},"Save points"),(0,r.kt)("li",{parentName:"ul"},"Simplify transaction management across the application"))),(0,r.kt)("li",{parentName:"ul"},"The Spring Data Access Framework directly integrates with the Transaction Management Framework with support for messaging and caching",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This enables developers to create feature-rich transactional systems that span across the applications without depending on EJB or JTA")))),(0,r.kt)("h3",{id:"spring-mvc-framework"},"Spring MVC framework"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Spring MVC enables developers to create applications using the popular MVC pattern"),(0,r.kt)("li",{parentName:"ul"},"It is a request-based framework that allows developers to easily create customized MVC implementations that exactly suit their needs"),(0,r.kt)("li",{parentName:"ul"},"The core component of Spring MVC is the ",(0,r.kt)("inlineCode",{parentName:"li"},"DispatcherServlet")," class which handles user requests and then forwards them to the correct controller",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"This allows the controller to process the request, create the model and then provide the information to the end-user via a specified view")))),(0,r.kt)("h3",{id:"spring-web-service"},"Spring web service"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This Spring Web Service component provides a streamlined way to create and manage web service endpoints in the application"),(0,r.kt)("li",{parentName:"ul"},"It offers a layered approach that can be managed using XML and can be used to provide mapping for web requests to a specific object")),(0,r.kt)("h3",{id:"spring-test-frameworks"},"Spring test frameworks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Spring simplifies testing within the framework with components like",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Mock objects"),(0,r.kt)("li",{parentName:"ul"},"TestContext framework"),(0,r.kt)("li",{parentName:"ul"},"Spring MVC Test")))),(0,r.kt)("h2",{id:"spring-framework-architecture"},"Spring Framework Architecture"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Spring is built using different modules that enable different functionality")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Spring Architecture",src:a(52270).Z,width:"944",height:"957"})),(0,r.kt)("h3",{id:"core-container"},"Core container"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This contains the fundamental modules that are the cornerstone of the Spring framework",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Core (spring-core)")," is the core of the framework that power features such as Inversion of Control and dependency injection"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Beans (spring-beans)")," provides ",(0,r.kt)("inlineCode",{parentName:"li"},"Beanfactory"),", which is a sophisticated implementation of the factory pattern"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Context (spring-context)")," builds on Core and Beans and provides a medium to access defined objects",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ApplicationContext")," interface is the core part of the Context module, and the spring-context-support provides support for third-party interactions such as caching, mailing, and template engines"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"SpEL (spring-expression)")," enables users to use the Spring Expression Language to query and manipulate the object graph at runtime")))),(0,r.kt)("h3",{id:"data-accessintegration"},"Data access/integration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"This includes the modules that are used to handle data access and transaction processing in an application",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"JDBC (spring-jdbc)")," provides a ",(0,r.kt)("inlineCode",{parentName:"li"},"JDBC")," abstraction layer that eliminates the need to separate ",(0,r.kt)("inlineCode",{parentName:"li"},"JDBC")," coding when dealing with databases"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ORM (spring-orm)")," are integration layers for popular object-relational mapping API such as ",(0,r.kt)("inlineCode",{parentName:"li"},"JPA"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"JDO Hibernate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"OXM (spring-oxm)")," is the abstraction layer that supports ",(0,r.kt)("inlineCode",{parentName:"li"},"Object/XML")," mapping implementations like ",(0,r.kt)("inlineCode",{parentName:"li"},"JAXB"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"XStream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"JMS (spring-jms)")," is the Java Messaging Service module that creates and consumes messages that directly integrate with the Spring messaging module"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Transaction (spring-tx)")," offers programmatic and declarative transaction management for classes that include special interfaces and POJOs")))),(0,r.kt)("h3",{id:"web"},"Web"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The Web layer relates to modules that power web-based functions in Spring",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"WebSocket (spring-websocket)")," powers the web socket-based communication for clients and servers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Servlet (spring-webmvc)")," is the Spring WebMVC module that contains the MVC and REST implementations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Web (spring-web)")," provides all the basic web-oriented features and contains an HTTP client and web-related parts of the Spring remoting"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Portlet (spring-webmvc-portlet)")," provides the MVC implementation to be used in a portlet environment")))),(0,r.kt)("h3",{id:"other-modules"},"Other Modules"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AOP (spring-aop)")," provides an aspect-oriented programming implementation that can be used when creating applications"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Aspects (spring-aspects)")," enables direct integration with the AspectJ programming extension by the eclipse foundation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Instrumentation (spring-instrument)")," is the class instrumentation support and class loader implementations for application servers"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Messaging (spring-messaging)")," provides a robust platform to manage messaging in applications"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Test (spring-test)")," is the Spring test module that supports unit and integration testing with ",(0,r.kt)("inlineCode",{parentName:"li"},"JUnit")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"TestNG"))))}m.isMDXComponent=!0},52270:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/spring-architecture-77e89b7ff3bd51ed73128571ea751d5f.png"}}]);