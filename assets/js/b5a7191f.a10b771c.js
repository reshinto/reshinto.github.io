"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[7968],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),k=s,v=u["".concat(i,".").concat(k)]||u[k]||m[k]||a;return n?r.createElement(v,o(o({ref:t},c),{},{components:n})):r.createElement(v,o({ref:t},c))}));function k(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},34751:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(83117),s=(n(67294),n(3905));const a={},o="Angular Services",l={unversionedId:"Technologies/frontend/angular/services",id:"Technologies/frontend/angular/services",title:"Angular Services",description:"- Angular distinguishes components from services to increase modularity and reusability",source:"@site/docs/Technologies/frontend/angular/services.md",sourceDirName:"Technologies/frontend/angular",slug:"/Technologies/frontend/angular/services",permalink:"/docs/Technologies/frontend/angular/services",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/frontend/angular/services.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Routes",permalink:"/docs/Technologies/frontend/angular/routes"},next:{title:"Chrome Extension",permalink:"/docs/Technologies/frontend/chromeExtension/"}},i={},p=[{value:"Simple service example",id:"simple-service-example",level:2},{value:"task.service.ts",id:"taskservicets",level:3},{value:"tasks.component.ts",id:"taskscomponentts",level:3},{value:"Observable service example",id:"observable-service-example",level:2},{value:"task.service.ts",id:"taskservicets-1",level:3},{value:"tasks.component.ts",id:"taskscomponentts-1",level:3},{value:"Real world service example",id:"real-world-service-example",level:2},{value:"tasks.component.ts",id:"taskscomponentts-2",level:3},{value:"task.service.ts",id:"taskservicets-2",level:3},{value:"app.module.ts",id:"appmodulets",level:3}],c={toc:p};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"angular-services"},"Angular Services"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Angular distinguishes components from services to increase modularity and reusability"),(0,s.kt)("li",{parentName:"ul"},"by separating a component's view related functionality from other kinds of processing",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"you can make the component classes lean and efficient"))),(0,s.kt)("li",{parentName:"ul"},"a component can delegate certain tasks to services",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"example",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"fetching data from the server"),(0,s.kt)("li",{parentName:"ul"},"validating user input"),(0,s.kt)("li",{parentName:"ul"},"logging directly to the console")))))),(0,s.kt)("h2",{id:"simple-service-example"},"Simple service example"),(0,s.kt)("h3",{id:"taskservicets"},"task.service.ts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\nimport {Task} from "src/app/Task";\nimport {TASKS} from "src/app/mock-tasks";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  constructor() {}\n\n  getTasks(): Task[] {\n    return TASKS;\n  }\n}\n')),(0,s.kt)("h3",{id:"taskscomponentts"},"tasks.component.ts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {TaskService} from "src/app/services/task.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.tasks = this.taskService.getTasks();\n  }\n}\n')),(0,s.kt)("h2",{id:"observable-service-example"},"Observable service example"),(0,s.kt)("h3",{id:"taskservicets-1"},"task.service.ts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\nimport {Observable, of} from "rxjs";\nimport {Task} from "src/app/Task";\nimport {TASKS} from "src/app/mock-tasks";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  constructor() {}\n\n  getTasks(): Observable<Task[]> {\n    return of(TASKS);\n  }\n}\n')),(0,s.kt)("h3",{id:"taskscomponentts-1"},"tasks.component.ts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {TaskService} from "src/app/services/task.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.taskService.getTasks().subscribe((tasks) => (this.tasks = tasks));\n  }\n}\n')),(0,s.kt)("h2",{id:"real-world-service-example"},"Real world service example"),(0,s.kt)("h3",{id:"taskscomponentts-2"},"tasks.component.ts"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"similar to the Observable service example")),(0,s.kt)("h3",{id:"taskservicets-2"},"task.service.ts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\nimport {HttpClient, HttpHeaders} from "@angular/common/http";\nimport {Observable} from "rxjs";\nimport {Task} from "src/app/Task";\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    "Content-Type": "application/json",\n  }),\n};\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  private apiUrl = "http://localhost:5000/tasks";\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.apiUrl, httpOptions);\n  }\n}\n')),(0,s.kt)("h3",{id:"appmodulets"},"app.module.ts"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'import {NgModule} from "@angular/core";\nimport {BrowserModule} from "@angular/platform-browser";\nimport {HttpClientModule} from "@angular/common/http";\n\nimport {AppComponent} from "./app.component";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')))}m.isMDXComponent=!0}}]);