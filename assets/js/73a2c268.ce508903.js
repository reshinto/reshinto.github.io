"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[91694],{3905:(e,r,n)=>{n.d(r,{Zo:()=>l,kt:()=>g});var t=n(67294);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=t.createContext({}),c=function(e){var r=t.useContext(p),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},l=function(e){var r=c(e.components);return t.createElement(p.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},d=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=c(n),g=s,y=d["".concat(p,".").concat(g)]||d[g]||u[g]||a;return n?t.createElement(y,o(o({ref:r},l),{},{components:n})):t.createElement(y,o({ref:r},l))}));function g(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var c=2;c<a;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9670:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=n(83117),s=(n(67294),n(3905));const a={},o="Go Example",i={unversionedId:"interviewPrep/designPatterns/Structural_patterns/Flyweight/go/readme",id:"interviewPrep/designPatterns/Structural_patterns/Flyweight/go/readme",title:"Go Example",description:"",source:"@site/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/go/readme.md",sourceDirName:"interviewPrep/designPatterns/Structural_patterns/Flyweight/go",slug:"/interviewPrep/designPatterns/Structural_patterns/Flyweight/go/",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/go/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/go/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"C# Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/cSharp/"},next:{title:"Java Example",permalink:"/docs/interviewPrep/designPatterns/Structural_patterns/Flyweight/java/"}},p={},c=[],l={toc:c};function u(e){let{components:r,...n}=e;return(0,s.kt)("wrapper",(0,t.Z)({},l,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"go-example"},"Go Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype counterTerroristDress struct {\n    color string\n}\n\nfunc (c *counterTerroristDress) getColor() string {\n    return c.color\n}\n\nfunc newCounterTerroristDress() *counterTerroristDress {\n    return &counterTerroristDress{color: "green"}\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype dress interface {\n    getColor() string\n}\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nconst (\n    //TerroristDressType terrorist dress type\n    TerroristDressType = "tDress"\n    //CounterTerrroristDressType terrorist dress type\n    CounterTerrroristDressType = "ctDress"\n)\n\nvar (\n    dressFactorySingleInstance = &dressFactory{\n        dressMap: make(map[string]dress),\n    }\n)\n\ntype dressFactory struct {\n    dressMap map[string]dress\n}\n\nfunc (d *dressFactory) getDressByType(dressType string) (dress, error) {\n    if d.dressMap[dressType] != nil {\n        return d.dressMap[dressType], nil\n    }\n\n    if dressType == TerroristDressType {\n        d.dressMap[dressType] = newTerroristDress()\n        return d.dressMap[dressType], nil\n    }\n    if dressType == CounterTerrroristDressType {\n        d.dressMap[dressType] = newCounterTerroristDress()\n        return d.dressMap[dressType], nil\n    }\n\n    return nil, fmt.Errorf("Wrong dress type passed")\n}\n\nfunc getDressFactorySingleInstance() *dressFactory {\n    return dressFactorySingleInstance\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype game struct {\n    terrorists        []*player\n    counterTerrorists []*player\n}\n\nfunc newGame() *game {\n    return &game{\n        terrorists:        make([]*player, 1),\n        counterTerrorists: make([]*player, 1),\n    }\n}\n\nfunc (c *game) addTerrorist(dressType string) {\n    player := newPlayer("T", dressType)\n    c.terrorists = append(c.terrorists, player)\n    return\n}\n\nfunc (c *game) addCounterTerrorist(dressType string) {\n    player := newPlayer("CT", dressType)\n    c.counterTerrorists = append(c.counterTerrorists, player)\n    return\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},"package main\n\ntype player struct {\n    dress      dress\n    playerType string\n    lat        int\n    long       int\n}\n\nfunc newPlayer(playerType, dressType string) *player {\n    dress, _ := getDressFactorySingleInstance().getDressByType(dressType)\n    return &player{\n        playerType: playerType,\n        dress:      dress,\n    }\n}\n\nfunc (p *player) newLocation(lat, long int) {\n    p.lat = lat\n    p.long = long\n}\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\ntype terroristDress struct {\n    color string\n}\n\nfunc (t *terroristDress) getColor() string {\n    return t.color\n}\n\nfunc newTerroristDress() *terroristDress {\n    return &terroristDress{color: "red"}\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "fmt"\n\nfunc main() {\n    game := newGame()\n\n    //Add Terrorist\n    game.addTerrorist(TerroristDressType)\n    game.addTerrorist(TerroristDressType)\n    game.addTerrorist(TerroristDressType)\n    game.addTerrorist(TerroristDressType)\n\n    //Add CounterTerrorist\n    game.addCounterTerrorist(CounterTerrroristDressType)\n    game.addCounterTerrorist(CounterTerrroristDressType)\n    game.addCounterTerrorist(CounterTerrroristDressType)\n\n    dressFactoryInstance := getDressFactorySingleInstance()\n\n    for dressType, dress := range dressFactoryInstance.dressMap {\n        fmt.Printf("DressColorType: %s\\nDressColor: %s\\n", dressType, dress.getColor())\n    }\n}\n')))}u.isMDXComponent=!0}}]);