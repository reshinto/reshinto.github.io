"use strict";(self.webpackChunkportfolio=self.webpackChunkportfolio||[]).push([[27939],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>u});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),i=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=i(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=i(t),u=r,k=d["".concat(s,".").concat(u)]||d[u]||c[u]||o;return t?a.createElement(k,l(l({ref:n},m),{},{components:t})):a.createElement(k,l({ref:n},m))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var i=2;i<o;i++)l[i]=t[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},92837:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var a=t(83117),r=(t(67294),t(3905));const o={},l="Angular",p={unversionedId:"Technologies/frontend/angular/readme",id:"Technologies/frontend/angular/readme",title:"Angular",description:"Documentation",source:"@site/docs/Technologies/frontend/angular/readme.md",sourceDirName:"Technologies/frontend/angular",slug:"/Technologies/frontend/angular/",permalink:"/docs/Technologies/frontend/angular/",draft:!1,editUrl:"https://github.com/reshinto/reshinto.github.io/blob/dev/docs/Technologies/frontend/angular/readme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Flowchart Symbols",permalink:"/docs/Technologies/flowCharts/"},next:{title:"Send a one time request from a content script or popup script to the background page",permalink:"/docs/Technologies/frontend/chromeExtension/"}},s={},i=[{value:"Why use Angular",id:"why-use-angular",level:2},{value:"Angular Components",id:"angular-components",level:2},{value:"app.component.ts",id:"appcomponentts",level:3},{value:"app.component.css",id:"appcomponentcss",level:3},{value:"app.component.html",id:"appcomponenthtml",level:3},{value:"retrieve variables or methods from component",id:"retrieve-variables-or-methods-from-component",level:4},{value:"app.module.ts",id:"appmodulets",level:3},{value:"Root HTML",id:"root-html",level:3},{value:"Angular Services",id:"angular-services",level:2},{value:"Angular CLI",id:"angular-cli",level:2},{value:"Installation",id:"installation",level:3},{value:"Install external libraries",id:"install-external-libraries",level:4},{value:"Using external library",id:"using-external-library",level:4},{value:"New Project creation",id:"new-project-creation",level:3},{value:"Run Project",id:"run-project",level:3},{value:"Generate new Component",id:"generate-new-component",level:3},{value:"Auto generated files",id:"auto-generated-files",level:4},{value:"components/header.component.css",id:"componentsheadercomponentcss",level:5},{value:"components/header.component.html",id:"componentsheadercomponenthtml",level:5},{value:"components/header.component.ts",id:"componentsheadercomponentts",level:5},{value:"components/header.component.spec.ts",id:"componentsheadercomponentspects",level:5},{value:"Auto modified files and might need manual modifications",id:"auto-modified-files-and-might-need-manual-modifications",level:4},{value:"app.module.ts",id:"appmodulets-1",level:5},{value:"Files to be manually modified",id:"files-to-be-manually-modified",level:4},{value:"app.component.html",id:"appcomponenthtml-1",level:5},{value:"Generate new Service",id:"generate-new-service",level:3},{value:"Auto generated files",id:"auto-generated-files-1",level:4},{value:"services/task.service.ts",id:"servicestaskservicets",level:5},{value:"services/task.service.spec.ts",id:"servicestaskservicespects",level:5},{value:"Props",id:"props",level:2},{value:"Parent html",id:"parent-html",level:3},{value:"Child",id:"child",level:3},{value:"Routes",id:"routes",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Display or Hide component based on route",id:"display-or-hide-component-based-on-route",level:3},{value:"Services",id:"services",level:2},{value:"Simple service example",id:"simple-service-example",level:3},{value:"Observable service example",id:"observable-service-example",level:3},{value:"Real world service example",id:"real-world-service-example",level:3},{value:"Events",id:"events",level:2},{value:"click",id:"click",level:3},{value:"simple example",id:"simple-example",level:4},{value:"dynamic function example",id:"dynamic-function-example",level:4},{value:"dblclick",id:"dblclick",level:3},{value:"Directives",id:"directives",level:2},{value:"<code>ngStyle</code>",id:"ngstyle",level:3},{value:"<code>*ngFor</code>",id:"ngfor",level:3},{value:"<code>ngClass</code>",id:"ngclass",level:3},{value:"<code>ngModel</code>",id:"ngmodel",level:3},{value:"<code>ngSubmit</code>",id:"ngsubmit",level:3},{value:"<code>*ngIf</code>",id:"ngif",level:3}],m={toc:i};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"angular"},"Angular"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://angular.io/docs"},"Documentation")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"an application design framework and development platform for creating efficient and sophisticated Single Page Apps"),(0,r.kt)("li",{parentName:"ul"},"it generally runs on the client, but can be used to create full stack apps by making HTTP requests to a backend server"),(0,r.kt)("li",{parentName:"ul"},"it can also be run on the server side with ",(0,r.kt)("inlineCode",{parentName:"li"},"Angular Universal")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Angular 1")," / ",(0,r.kt)("inlineCode",{parentName:"li"},"Angular JS")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Angular 2")," is completely different and is a separate framework",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Angular 2")," is a newly rewritten framework")))),(0,r.kt)("h2",{id:"why-use-angular"},"Why use Angular"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"create dynamic frontend apps & UIs"),(0,r.kt)("li",{parentName:"ul"},"full featured framework",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"eg.: router, http, etc."))),(0,r.kt)("li",{parentName:"ul"},"integrated TypeScript (optional)"),(0,r.kt)("li",{parentName:"ul"},"RxJS",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"uses ",(0,r.kt)("inlineCode",{parentName:"li"},"Observables"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"it allows us to write efficient asynchronous programming"))))),(0,r.kt)("li",{parentName:"ul"},"test friendly",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"easy to write unit tests and end-to-end tests"))),(0,r.kt)("li",{parentName:"ul"},"popular in enterprise business")),(0,r.kt)("h2",{id:"angular-components"},"Angular Components"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Angular is component driven"),(0,r.kt)("li",{parentName:"ul"},"components are pieces of the UI including the template (html), logic and styling"),(0,r.kt)("li",{parentName:"ul"},"components are reusable and can be embedded into the template as an XML-like tag"),(0,r.kt)("li",{parentName:"ul"},"component design is similar to ",(0,r.kt)("inlineCode",{parentName:"li"},"React")," where a page is broken down to multiple smaller reusable components")),(0,r.kt)("h3",{id:"appcomponentts"},"app.component.ts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component} from "@angular/core";\n\n@Component({\n  selector: "app-root", // html tag name of the component to be embedded into the root html\n  templateUrl: "./app.component.html",\n  styleUrls: ["./app.component.css"],\n})\nexport class AppComponent {\n  title: string = "angular-crash"; // add properties, custom methods, lifecycle methods, etc.\n}\n')),(0,r.kt)("h3",{id:"appcomponentcss"},"app.component.css"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* empty */\n")),(0,r.kt)("h3",{id:"appcomponenthtml"},"app.component.html"),(0,r.kt)("h4",{id:"retrieve-variables-or-methods-from-component"},"retrieve variables or methods from component"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<h1>{{ title }}</h1>\n")),(0,r.kt)("h3",{id:"appmodulets"},"app.module.ts"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"this same file will be updated when a new component is generated",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"similarly, it also has to be updated during any manual deletion of a component")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {NgModule} from "@angular/core";\nimport {BrowserModule} from "@angular/platform-browser";\n\nimport {AppComponent} from "./app.component";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')),(0,r.kt)("h3",{id:"root-html"},"Root HTML"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>AngularCrash</title>\n    <base href="/" />\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\n    <link rel="icon" type="image/x-icon" href="favicon.ico" />\n  </head>\n  <body>\n    <app-root></app-root>\n  </body>\n</html>\n')),(0,r.kt)("h2",{id:"angular-services"},"Angular Services"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Angular distinguishes components from services to increase modularity and reusability"),(0,r.kt)("li",{parentName:"ul"},"by separating a component's view related functionality from other kinds of processing",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"you can make the component classes lean and efficient"))),(0,r.kt)("li",{parentName:"ul"},"a component can delegate certain tasks to services",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"example",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"fetching data from the server"),(0,r.kt)("li",{parentName:"ul"},"validating user input"),(0,r.kt)("li",{parentName:"ul"},"logging directly to the console")))))),(0,r.kt)("h2",{id:"angular-cli"},"Angular CLI"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"a standard tooling for Angular development"),(0,r.kt)("li",{parentName:"ul"},"a command line interface for creating Angular apps"),(0,r.kt)("li",{parentName:"ul"},"Dev server and easy production build"),(0,r.kt)("li",{parentName:"ul"},"Commands to generate components, services, etc")),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm install -g @angular/cli\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"yarn global add @angular/cli\n")),(0,r.kt)("h4",{id:"install-external-libraries"},"Install external libraries"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"if ",(0,r.kt)("inlineCode",{parentName:"p"},"ng-add")," is supported in current angular version"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"benefits of using this is it helps to auto setup the basic import configs required in ",(0,r.kt)("inlineCode",{parentName:"li"},"app.module.ts"))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"ng add @fortawesome/angular-fontawesome\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"specifying a version"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"ng add @fortawesome/angular-fontawesome@<version>\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"else use usual ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"yarn add @fortawesome/fontawesome-svg-core\nyarn add @fortawesome/free-solid-svg-icons\nyarn add @fortawesome/angular-fontawesome@<version>\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"npm install @fortawesome/fontawesome-svg-core\nnpm install @fortawesome/free-solid-svg-icons\nnpm install @fortawesome/angular-fontawesome@<version>\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"you would need to manually add it into the ",(0,r.kt)("inlineCode",{parentName:"p"},"app.module.ts")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {AppComponent} from "./app.component";\nimport {FontAwesomeModule} from "@fortawesome/angular-fontawesome";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, FontAwesomeModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')))))),(0,r.kt)("h4",{id:"using-external-library"},"Using external library"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {faTimes} from "@fortawesome/free-solid-svg-icons";\n\n@Component({\n  selector: "app-task-item",\n  templateUrl: "./task-item.component.html",\n  styleUrls: ["./task-item.component.css"],\n})\nexport class TaskItemComponent implements OnInit {\n  faTimes = faTimes;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="task">\n  <h3>task text <fa-icon [icon]="faTimes"></fa-icon></h3>\n  <p>task day</p>\n</div>\n')))),(0,r.kt)("h3",{id:"new-project-creation"},"New Project creation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ng new my-app\n")),(0,r.kt)("h3",{id:"run-project"},"Run Project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ng serve --open\n")),(0,r.kt)("h3",{id:"generate-new-component"},"Generate new Component"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"this will auto generate and create 4 files in the component folder"),(0,r.kt)("li",{parentName:"ul"},"it is able to create a component in nested folders",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"folderName")," is not required if generating component in ",(0,r.kt)("inlineCode",{parentName:"li"},"app")," folder")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ng generate component folderName/componentName\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"example",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"ng generate component components/header\n")))),(0,r.kt)("h4",{id:"auto-generated-files"},"Auto generated files"),(0,r.kt)("h5",{id:"componentsheadercomponentcss"},"components/header.component.css"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* empty */\n")),(0,r.kt)("h5",{id:"componentsheadercomponenthtml"},"components/header.component.html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<p>componentName works!</p>\n")),(0,r.kt)("h5",{id:"componentsheadercomponentts"},"components/header.component.ts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\n\n@Component({\n  selector: "app-header", // this will be the html tag name of the component\n  templateUrl: "./header.component.html",\n  styleUrls: ["./header.component.css"],\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  // similar to React ComponentDidMount lifecycle method\n  ngOnInit(): void {}\n}\n')),(0,r.kt)("h5",{id:"componentsheadercomponentspects"},"components/header.component.spec.ts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {ComponentFixture, TestBed} from "@angular/core/testing";\n\nimport {HeaderComponent} from "./header.component";\n\ndescribe("HeaderComponent", () => {\n  let component: HeaderComponent;\n  let fixture: ComponentFixture<HeaderComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [HeaderComponent],\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(HeaderComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it("should create", () => {\n    expect(component).toBeTruthy();\n  });\n});\n')),(0,r.kt)("h4",{id:"auto-modified-files-and-might-need-manual-modifications"},"Auto modified files and might need manual modifications"),(0,r.kt)("h5",{id:"appmodulets-1"},"app.module.ts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {NgModule} from "@angular/core";\nimport {BrowserModule} from "@angular/platform-browser";\n\nimport {AppComponent} from "./app.component";\nimport {HeaderComponent} from "./components/header/header.component";\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')),(0,r.kt)("h4",{id:"files-to-be-manually-modified"},"Files to be manually modified"),(0,r.kt)("h5",{id:"appcomponenthtml-1"},"app.component.html"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"newly generated components have to be added here manually")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<h1>{{ title }}</h1>\n<app-header></app-header>\n")),(0,r.kt)("h3",{id:"generate-new-service"},"Generate new Service"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"this will auto generate and create 2 files in the services folder"),(0,r.kt)("li",{parentName:"ul"},"it is able to create a service in nested folders",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"folderName")," is not required if generating service in ",(0,r.kt)("inlineCode",{parentName:"li"},"app")," folder")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ng generate service folderName/serviceName\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"example",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"ng generate service services/task\n")))),(0,r.kt)("h4",{id:"auto-generated-files-1"},"Auto generated files"),(0,r.kt)("h5",{id:"servicestaskservicets"},"services/task.service.ts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  constructor() {}\n}\n')),(0,r.kt)("h5",{id:"servicestaskservicespects"},"services/task.service.spec.ts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {TestBed} from "@angular/core/testing";\n\nimport {TaskService} from "./task.service";\n\ndescribe("TaskService", () => {\n  let service: TaskService;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({});\n    service = TestBed.inject(TaskService);\n  });\n\n  it("should be created", () => {\n    expect(service).toBeTruthy();\n  });\n});\n')),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("h3",{id:"parent-html"},"Parent html"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<header>\n  <app-button color="green" text="Add"></app-button>\n</header>\n')),(0,r.kt)("h3",{id:"child"},"Child"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"button.component.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit, Input} from "@angular/core";\n\n@Component({\n  selector: "app-button",\n  templateUrl: "./button.component.html",\n  styleUrls: ["./button.component.css"],\n})\nexport class ButtonComponent implements OnInit {\n  @Input() text: string | undefined;\n  @Input() colorName: string | undefined;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"button.component.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<button [ngStyle]="{ \'background-color\': colorName }" class="btn">\n  {{ text }}\n</button>\n')),(0,r.kt)("h2",{id:"routes"},"Routes"),(0,r.kt)("h3",{id:"basic-setup"},"Basic Setup"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"app.module.ts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {NgModule} from "@angular/core";\nimport {BrowserModule} from "@angular/platform-browser";\nimport {RouterModule, Routes} from "@angular/router";\n\nimport {AppComponent} from "./app.component";\nimport {TasksComponent} from "./components/tasks/tasks.component";\nimport {AboutComponent} from "./components/about/about.component";\n\nconst appRoutes: Routes = [\n  {path: "", component: TasksComponent}, // home page\n  {path: "about", component: AboutComponent},\n];\n\n@NgModule({\n  declarations: [AppComponent, TasksComponent],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes, {enableTracing: true}), // set enableTracing as true for easy debugging\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"about.component.html",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div>\n  <h2>Task Tracker</h2>\n  <h4>Version: 1.0.0</h4>\n  \x3c!-- don\'t use href as it would refresh the page --\x3e\n  \x3c!-- routerLink="/about" to link to other page routes --\x3e\n  <a routerLink="/">Go Back</a>\n</div>\n')))),(0,r.kt)("h3",{id:"display-or-hide-component-based-on-route"},"Display or Hide component based on route"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"header.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<header>\n  <h1>{{ title }}</h1>\n  <app-button\n    *ngIf=\"hasRoute('/')\"\n    color=\"{{ showAddTask ? 'red' : 'green' }}\"\n    text=\"{{ showAddTask ? 'Close' : 'Add' }}\"\n  ></app-button>\n</header>\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"header.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {Router} from "@angular/router";\n\n@Component({\n  selector: "app-header",\n  templateUrl: "./header.component.html",\n  styleUrls: ["./header.component.css"],\n})\nexport class HeaderComponent implements OnInit {\n  title: string = "Task Tracker";\n  showAddTask: boolean = false;\n\n  // args here are providers\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {}\n\n  hasRoute(route: string): boolean {\n    return this.router.url === route;\n  }\n}\n')))),(0,r.kt)("h2",{id:"services"},"Services"),(0,r.kt)("h3",{id:"simple-service-example"},"Simple service example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task.service.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\nimport {Task} from "src/app/Task";\nimport {TASKS} from "src/app/mock-tasks";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  constructor() {}\n\n  getTasks(): Task[] {\n    return TASKS;\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {TaskService} from "src/app/services/task.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.tasks = this.taskService.getTasks();\n  }\n}\n')))),(0,r.kt)("h3",{id:"observable-service-example"},"Observable service example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task.service.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\nimport {Observable, of} from "rxjs";\nimport {Task} from "src/app/Task";\nimport {TASKS} from "src/app/mock-tasks";\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  constructor() {}\n\n  getTasks(): Observable<Task[]> {\n    return of(TASKS);\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {TaskService} from "src/app/services/task.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.taskService.getTasks().subscribe((tasks) => (this.tasks = tasks));\n  }\n}\n')))),(0,r.kt)("h3",{id:"real-world-service-example"},"Real world service example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.ts"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"similar to the Observable service example"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task.service.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Injectable} from "@angular/core";\nimport {HttpClient, HttpHeaders} from "@angular/common/http";\nimport {Observable} from "rxjs";\nimport {Task} from "src/app/Task";\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    "Content-Type": "application/json",\n  }),\n};\n\n@Injectable({\n  providedIn: "root",\n})\nexport class TaskService {\n  private apiUrl = "http://localhost:5000/tasks";\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(this.apiUrl, httpOptions);\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"app.module.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {NgModule} from "@angular/core";\nimport {BrowserModule} from "@angular/platform-browser";\nimport {HttpClientModule} from "@angular/common/http";\n\nimport {AppComponent} from "./app.component";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n')))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("h3",{id:"click"},"click"),(0,r.kt)("h4",{id:"simple-example"},"simple example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"button.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\n\n@Component({\n  selector: "app-button",\n  templateUrl: "./button.component.html",\n  styleUrls: ["./button.component.css"],\n})\nexport class ButtonComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onClick() {\n    console.log("click");\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"button.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<button class="btn" (click)="onClick()">text</button>\n')))),(0,r.kt)("h4",{id:"dynamic-function-example"},"dynamic function example"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"parent"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"header.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\n\n@Component({\n  selector: "app-header",\n  templateUrl: "./header.component.html",\n  styleUrls: ["./header.component.css"],\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleAddTask() {\n    console.log("toggle");\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"header.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<header>\n  <app-button (btnClick)="toggleAddTask()"></app-button>\n</header>\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"child"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"button.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit, Output, EventEmitter} from "@angular/core";\n\n@Component({\n  selector: "app-button",\n  templateUrl: "./button.component.html",\n  styleUrls: ["./button.component.css"],\n})\nexport class ButtonComponent implements OnInit {\n  @Output() btnClick = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onClick() {\n    this.btnClick.emit();\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"button.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<button class="btn" (click)="onClick()">text</button>\n')))))),(0,r.kt)("h3",{id:"dblclick"},"dblclick"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"parent"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<app-task-item\n  *ngFor="let task of tasks"\n  [task]="task"\n  (onToggleReminder)="toggleReminder(task)"\n>\n</app-task-item>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {TaskService} from "src/app/services/task.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.taskService.getTasks().subscribe((tasks) => (this.tasks = tasks));\n  }\n\n  toggleReminder(task: Task) {\n    task.reminder = !task.reminder;\n    this.taskService.updateTaskReminder(task).subscribe(); // this will update the backend server\n  }\n}\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"child"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="task" (dblclick)="onToggle(task)">\n  <h3>{{ task.text }}</h3>\n  <p>{{ task.day }}</p>\n</div>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n} from "@angular/core";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-task-item",\n  templateUrl: "./task-item.component.html",\n  styleUrls: ["./task-item.component.css"],\n})\nexport class TaskItemComponent implements OnInit {\n  @Input()\n  task!: Task;\n  @Output()\n  onToggleReminder: EventEmitter<Task> = new EventEmitter();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onToggle(task: Task) {\n    this.onToggleReminder.emit(task);\n  }\n}\n')))))),(0,r.kt)("h2",{id:"directives"},"Directives"),(0,r.kt)("h3",{id:"ngstyle"},(0,r.kt)("inlineCode",{parentName:"h3"},"ngStyle")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"allow inline styling")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},"<button [ngStyle]=\"{ 'background-color': 'white' }\" class=\"btn\">text</button>\n")),(0,r.kt)("h3",{id:"ngfor"},(0,r.kt)("inlineCode",{parentName:"h3"},"*ngFor")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"allows looping of array")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"parent"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {Task} from "src/app/Task";\nimport {TASKS} from "src/app/mock-tasks";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = TASKS;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<app-task-item *ngFor="let task of tasks" [task]="task"> </app-task-item>\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"child"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit, Input} from "@angular/core";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-task-item",\n  templateUrl: "./task-item.component.html",\n  styleUrls: ["./task-item.component.css"],\n})\nexport class TaskItemComponent implements OnInit {\n  @Input()\n  task!: Task;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<div class="task">\n  <h3>{{ task.text }}</h3>\n  <p>{{ task.day }}</p>\n</div>\n')))))),(0,r.kt)("h3",{id:"ngclass"},(0,r.kt)("inlineCode",{parentName:"h3"},"ngClass")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Adds and removes CSS classes on an HTML element")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- when task.reminder is true, reminder-class css class style will be activated--\x3e\n<div [ngClass]="{ reminder-class: task.reminder }" class="task">\n  <h3>{{ task.text }}</h3>\n  <p>{{ task.day }}</p>\n</div>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit, Input} from "@angular/core";\nimport {Task} from "src/app/Task";\nimport {faTimes} from "@fortawesome/free-solid-svg-icons";\n\n@Component({\n  selector: "app-task-item",\n  templateUrl: "./task-item.component.html",\n  styleUrls: ["./task-item.component.css"],\n})\nexport class TaskItemComponent implements OnInit {\n  @Input()\n  task!: Task;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"task-item.component.css"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-css"},".task {\n  background: #f4f4f4;\n  margin: 5px;\n  padding: 10px 20px;\n  cursor: pointer;\n}\n\n.task.reminder-class {\n  border-left: 5px solid green;\n}\n\n.task h3 {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n")))),(0,r.kt)("h3",{id:"ngmodel"},(0,r.kt)("inlineCode",{parentName:"h3"},"ngModel")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Creates a FormControl instance from a domain model and binds it to a form control element")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"app.module.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {NgModule} from "@angular/core";\nimport {BrowserModule} from "@angular/platform-browser";\nimport {FormsModule} from "@angular/forms";\n\nimport {AppComponent} from "./app.component";\nimport {AddTaskComponent} from "./components/add-task/add-task.component";\n\n@NgModule({\n  declarations: [AppComponent, AddTaskComponent],\n  imports: [BrowserModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"add-task.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\n\n@Component({\n  selector: "app-add-task",\n  templateUrl: "./add-task.component.html",\n  styleUrls: ["./add-task.component.css"],\n})\nexport class AddTaskComponent implements OnInit {\n  text!: string;\n  day!: string;\n  reminder: boolean = false;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"add-task.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form class="add-form">\n  <div class="form-control">\n    <label for="text">Task</label>\n    <input\n      type="text"\n      name="text"\n      [(ngModel)]="text"\n      id="text"\n      placeholder="Add Task"\n    />\n  </div>\n  <div class="form-control">\n    <label for="day">Day & Time</label>\n    <input\n      type="text"\n      name="day"\n      [(ngModel)]="day"\n      id="day"\n      placeholder="Add Day & Time"\n    />\n  </div>\n  <div class="form-control form-control-check">\n    <label for="reminder">Set Reminder</label>\n    <input\n      type="checkbox"\n      name="reminder"\n      [(ngModel)]="reminder"\n      id="reminder"\n    />\n  </div>\n  <input type="submit" value="Save Task" class="btn btn-block" />\n</form>\n')))),(0,r.kt)("h3",{id:"ngsubmit"},(0,r.kt)("inlineCode",{parentName:"h3"},"ngSubmit")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"parent"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<app-add-task (onAddTask)="addTask($event)"></app-add-task>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"tasks.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit} from "@angular/core";\nimport {TaskService} from "src/app/services/task.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-tasks",\n  templateUrl: "./tasks.component.html",\n  styleUrls: ["./tasks.component.css"],\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {}\n\n  addTask(task: Task) {\n    // adds task to backend server\n    this.taskService\n      .addTask(task)\n      .subscribe((task: Task) => this.tasks.push(task));\n  }\n}\n'))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"child"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"add-task.component.html"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form class="add-form" (ngSubmit)="onSubmit()">\n  <div class="form-control">\n    <label for="text">Task</label>\n    <input\n      type="text"\n      name="text"\n      [(ngModel)]="text"\n      id="text"\n      placeholder="Add Task"\n    />\n  </div>\n  <input type="submit" value="Save Task" class="btn btn-block" />\n</form>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"add-task.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit, Output, EventEmitter} from "@angular/core";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-add-task",\n  templateUrl: "./add-task.component.html",\n  styleUrls: ["./add-task.component.css"],\n})\nexport class AddTaskComponent implements OnInit {\n  @Output()\n  onAddTask: EventEmitter<Task> = new EventEmitter();\n  text!: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    if (!this.text) {\n      alert("Please add a task!");\n      return;\n    }\n\n    const newTask = {\n      text: this.text,\n    };\n\n    this.onAddTask.emit(newTask);\n\n    // reset input value\n    this.text = "";\n  }\n}\n')))))),(0,r.kt)("h3",{id:"ngif"},(0,r.kt)("inlineCode",{parentName:"h3"},"*ngIf")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"A structural directive that conditionally includes a template based on the value of an expression coerced to Boolean"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"When the expression evaluates to true, Angular renders the template provided in a then clause, and when false or null, Angular renders the template provided in an optional else clause"),(0,r.kt)("li",{parentName:"ul"},"The default template for the else clause is blank"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"add-task.component.html"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"do not show form when ",(0,r.kt)("inlineCode",{parentName:"li"},"showAddTask")," is false")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<form *ngIf="showAddTask" class="add-form">\n  <div class="form-control">\n    <label for="text">Task</label>\n    <input\n      type="text"\n      name="text"\n      [(ngModel)]="text"\n      id="text"\n      placeholder="Add Task"\n    />\n  </div>\n</form>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"add-task.component.ts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import {Component, OnInit, Output, EventEmitter} from "@angular/core";\nimport {Subscription} from "rxjs";\nimport {UiService} from "src/app/services/ui.service";\nimport {Task} from "src/app/Task";\n\n@Component({\n  selector: "app-add-task",\n  templateUrl: "./add-task.component.html",\n  styleUrls: ["./add-task.component.css"],\n})\nexport class AddTaskComponent implements OnInit {\n  @Output()\n  onAddTask: EventEmitter<Task> = new EventEmitter();\n  text!: string;\n  showAddTask: boolean = false;\n  subscription!: Subscription;\n\n  constructor(private uiService: UiService) {\n    this.subscription = this.uiService\n      .onToggle()\n      .subscribe((value: boolean) => (this.showAddTask = value));\n  }\n\n  ngOnInit(): void {}\n}\n')))))}c.isMDXComponent=!0}}]);